2023-01-25 19:28:11,088 - __main__ - INFO - 21 - <module>() - Using version 0.1.0
2023-01-25 19:28:15,060 - __main__ - INFO - 71 - <module>() - Using pipeline LLMPipeline(prompt_variant=NeutralPrompt, model=GPT_NeoX(max_input_tokens=1792, temperature=1, top_p=0.9, top_k=40, presence_penalty=0, frequency_penalty=0), parser=DictParser, shots=False) on test split
2023-01-25 19:28:15,060 - __main__ - INFO - 75 - <module>() - Searching for keys: ['Company Name', 'Date of Receipt', 'Address of Company', 'Total']
2023-01-25 19:28:15,060 - __main__ - INFO - 92 - <module>() - Predicting document 0...
2023-01-25 19:28:22,160 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  "S.J. Soleimani Muneer & Co. Sdn Bhd"
Date of Receipt: "30-JUL-17"
Address of Company: "3100, Jalan Hujan Sains"
Total: 300,000

Extract the name of the person, his phone number and email address who will receive the mail.

Key: Value
Seller Name: "S.J. Soleimani Muneer & Co. Sdn Bhd"
Email: "hello@gmail.com"
Phone: +601221234567

2023-01-25 19:28:22,165 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:28:22,166 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:28:22,170 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  "S.J. Soleimani Muneer & Co. Sdn Bhd"

2023-01-25 19:28:22,171 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: S.J. Soleimani Muneer & Co. Sdn Bhd
2023-01-25 19:28:22,171 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:28:22,172 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  "30-JUL-17"

2023-01-25 19:28:22,173 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 30-JUL-17
2023-01-25 19:28:22,173 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:28:22,174 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  "3100, Jalan Hujan Sains"

2023-01-25 19:28:22,174 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 3100, Jalan Hujan Sains
2023-01-25 19:28:22,175 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:28:22,175 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  300,000

Extract the name of the person, his phone number and email address who will receive the mail.

Key: Value
Seller Name: "S.J. Soleimani Muneer & Co. Sdn Bhd"
Email: "hello@gmail.com"
Phone: +601221234567

2023-01-25 19:28:22,176 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 300,000 Extract the name of the person, his phone number and email address who will receive the mail. Key: Value Seller Name: "S.J. Soleimani Muneer & Co. Sdn Bhd" Email: "hello@gmail.com" Phone: +601221234567
2023-01-25 19:28:22,176 - __main__ - INFO - 96 - <module>() - Final prediction for document 0: {'company': 'S.J. Soleimani Muneer & Co. Sdn Bhd', 'date': '30-JUL-17', 'address': '3100, Jalan Hujan Sains', 'total': '300,000 Extract the name of the person, his phone number and email address who will receive the mail. Key: Value Seller Name: "S.J. Soleimani Muneer & Co. Sdn Bhd" Email: "hello@gmail.com" Phone: +601221234567'}
2023-01-25 19:28:22,181 - __main__ - INFO - 92 - <module>() - Predicting document 1...
2023-01-25 19:28:24,606 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  Company Name here.
Date of Receipt: Date of Receipt here.
Address of Company: Address of Company here.
Total: Total Amount here.
2023-01-25 19:28:24,608 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:28:24,608 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:28:24,609 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Company Name here.

2023-01-25 19:28:24,609 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Company Name here.
2023-01-25 19:28:24,610 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:28:24,610 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Date of Receipt here.

2023-01-25 19:28:24,610 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Date of Receipt here.
2023-01-25 19:28:24,611 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:28:24,612 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Address of Company here.

2023-01-25 19:28:24,612 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Address of Company here.
2023-01-25 19:28:24,613 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:28:24,613 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Total Amount here.
2023-01-25 19:28:24,614 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Total Amount here.
2023-01-25 19:28:24,615 - __main__ - INFO - 96 - <module>() - Final prediction for document 1: {'company': 'Company Name here.', 'date': 'Date of Receipt here.', 'address': 'Address of Company here.', 'total': 'Total Amount here.'}
2023-01-25 19:28:24,619 - __main__ - INFO - 92 - <module>() - Predicting document 2...
2023-01-25 19:28:31,380 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  The name of the company to be deducted from the invoice.
Date of Receipt: The date on which the company received the invoice, not the time the invoice was submitted to the company. The time of submission may be contained in the "Received" field.
Address of Company: The address of the company to be deducted from the invoice.
Total: The total amount of invoice

Invoice date: The date on which the invoice was printed
Invoice No: The number of the invoice

Company Name: The name of the company to be deducted from the invoice.
Date of Receipt:
2023-01-25 19:28:31,381 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:28:31,381 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:28:31,382 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  The name of the company to be deducted from the invoice.

2023-01-25 19:28:31,382 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: The name of the company to be deducted from the invoice.
2023-01-25 19:28:31,383 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:28:31,383 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  The date on which the company received the invoice, not the time the invoice was submitted to the company. The time of submission may be contained in the "Received" field.

2023-01-25 19:28:31,383 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: The date on which the company received the invoice, not the time the invoice was submitted to the company. The time of submission may be contained in the "Received" field.
2023-01-25 19:28:31,384 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:28:31,384 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  The address of the company to be deducted from the invoice.

2023-01-25 19:28:31,385 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: The address of the company to be deducted from the invoice.
2023-01-25 19:28:31,385 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:28:31,386 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  The total amount of invoice

Invoice date: The date on which the invoice was printed
Invoice No: The number of the invoice

Company Name: The name of the company to be deducted from the invoice.
Date of Receipt:
2023-01-25 19:28:31,386 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: The total amount of invoice Invoice date: The date on which the invoice was printed Invoice No: The number of the invoice Company Name: The name of the company to be deducted from the invoice. Date of Receipt:
2023-01-25 19:28:31,386 - __main__ - INFO - 96 - <module>() - Final prediction for document 2: {'company': 'The name of the company to be deducted from the invoice.', 'date': 'The date on which the company received the invoice, not the time the invoice was submitted to the company. The time of submission may be contained in the "Received" field.', 'address': 'The address of the company to be deducted from the invoice.', 'total': 'The total amount of invoice Invoice date: The date on which the invoice was printed Invoice No: The number of the invoice Company Name: The name of the company to be deducted from the invoice. Date of Receipt:'}
2023-01-25 19:28:31,389 - __main__ - INFO - 92 - <module>() - Predicting document 3...
2023-01-25 19:28:35,976 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:
Date of Receipt:
Address of Company:
Total:
Key: Value
Company Name:
Date of Receipt:
Address of Company:
Total:

If you think that an article should be classified under a specific heading and the content of the article supports this, you are welcome to place your vote.
2023-01-25 19:28:35,977 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:28:35,977 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:28:35,978 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:28:35,978 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:28:35,979 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:28:35,980 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:28:35,980 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:28:35,982 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:28:35,982 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:28:35,983 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:28:35,983 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:28:35,984 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:
Key: Value
Company Name:
Date of Receipt:
Address of Company:

2023-01-25 19:28:35,984 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Key: Value Company Name: Date of Receipt: Address of Company:
2023-01-25 19:28:35,985 - __main__ - INFO - 96 - <module>() - Final prediction for document 3: {'total': 'Key: Value Company Name: Date of Receipt: Address of Company:'}
2023-01-25 19:28:35,988 - __main__ - INFO - 92 - <module>() - Predicting document 4...
2023-01-25 19:28:39,220 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  MCDONALD'S RESTAURANTS SDN BHD
Date of Receipt: 21/11/2018
Address of Company: Jalan SS21/39, 47400 Petaling Jaya, Selangor
Total: 7.35
2023-01-25 19:28:39,223 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:28:39,223 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:28:39,224 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  MCDONALD'S RESTAURANTS SDN BHD

2023-01-25 19:28:39,224 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: MCDONALD'S RESTAURANTS SDN BHD
2023-01-25 19:28:39,225 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:28:39,225 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  21/11/2018

2023-01-25 19:28:39,226 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 21/11/2018
2023-01-25 19:28:39,226 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:28:39,226 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Jalan SS21/39, 47400 Petaling Jaya, Selangor

2023-01-25 19:28:39,227 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Jalan SS21/39, 47400 Petaling Jaya, Selangor
2023-01-25 19:28:39,227 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:28:39,228 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  7.35
2023-01-25 19:28:39,229 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 7.35
2023-01-25 19:28:39,230 - __main__ - INFO - 96 - <module>() - Final prediction for document 4: {'company': "MCDONALD'S RESTAURANTS SDN BHD", 'date': '21/11/2018', 'address': 'Jalan SS21/39, 47400 Petaling Jaya, Selangor', 'total': '7.35'}
2023-01-25 19:28:39,234 - __main__ - INFO - 92 - <module>() - Predicting document 5...
2023-01-25 19:28:46,657 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  AEON Co. (M) BHD (126926-H)
Date of Receipt: 2018/06/10
Address of Company: 3rd Floor, Bhd Selamat Complex, 2 Jalan Cheras, 129950 Kuala Lumpur
Total: 4,020.00

Output:

    1|AEON Co. (M) BHD (126926-H)
2|2018/06/10
3|3rd Floor, Bhd Selamat Complex, 2 Jalan Cheras, 129950 Kuala Lump
2023-01-25 19:28:46,658 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:28:46,658 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:28:46,659 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  AEON Co. (M) BHD (126926-H)

2023-01-25 19:28:46,659 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: AEON Co. (M) BHD (126926-H)
2023-01-25 19:28:46,659 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:28:46,660 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  2018/06/10

2023-01-25 19:28:46,661 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 2018/06/10
2023-01-25 19:28:46,661 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:28:46,662 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  3rd Floor, Bhd Selamat Complex, 2 Jalan Cheras, 129950 Kuala Lumpur

2023-01-25 19:28:46,663 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 3rd Floor, Bhd Selamat Complex, 2 Jalan Cheras, 129950 Kuala Lumpur
2023-01-25 19:28:46,664 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:28:46,664 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  4,020.00

Output:

    1|AEON Co. (M) BHD (126926-H)
2|2018/06/10
3|3rd Floor, Bhd Selamat Complex, 2 Jalan Cheras, 129950 Kuala Lump
2023-01-25 19:28:46,665 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 4,020.00 Output:   1|AEON Co. (M) BHD (126926-H) 2|2018/06/10 3|3rd Floor, Bhd Selamat Complex, 2 Jalan Cheras, 129950 Kuala Lump
2023-01-25 19:28:46,665 - __main__ - INFO - 96 - <module>() - Final prediction for document 5: {'company': 'AEON Co. (M) BHD (126926-H)', 'date': '2018/06/10', 'address': '3rd Floor, Bhd Selamat Complex, 2 Jalan Cheras, 129950 Kuala Lumpur', 'total': '4,020.00 Output:   1|AEON Co. (M) BHD (126926-H) 2|2018/06/10 3|3rd Floor, Bhd Selamat Complex, 2 Jalan Cheras, 129950 Kuala Lump'}
2023-01-25 19:28:46,669 - __main__ - INFO - 92 - <module>() - Predicting document 6...
2023-01-25 19:28:54,522 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  ABC Inc.
Date of Receipt: 02/10/2019
Address of Company: 123 ABC Road
Total: 0.00

Create a "Customer's Transaction" by "Copying" the above table.

Key: Value
Address of Company: 123 ABC Road
Total: 0.00
Company Name: ABC Inc.
Date of Receipt: 02/10/2019

Create a "Transaction List" by adding the following data (use the "Transaction" table as a reference):

Create a table called "Customer's Statement"

Key: Value
Total: 0.
2023-01-25 19:28:54,524 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:28:54,524 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:28:54,525 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  ABC Inc.

2023-01-25 19:28:54,526 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: ABC Inc.
2023-01-25 19:28:54,526 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:28:54,527 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  02/10/2019

2023-01-25 19:28:54,527 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 02/10/2019
2023-01-25 19:28:54,527 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:28:54,528 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  123 ABC Road

2023-01-25 19:28:54,528 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 123 ABC Road
2023-01-25 19:28:54,529 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:28:54,529 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  0.00

Create a "Customer's Transaction" by "Copying" the above table.

Key: Value
Address of Company: 123 ABC Road

2023-01-25 19:28:54,529 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 0.00 Create a "Customer's Transaction" by "Copying" the above table. Key: Value Address of Company: 123 ABC Road
2023-01-25 19:28:54,530 - __main__ - INFO - 96 - <module>() - Final prediction for document 6: {'company': 'ABC Inc.', 'date': '02/10/2019', 'address': '123 ABC Road', 'total': '0.00 Create a "Customer\'s Transaction" by "Copying" the above table. Key: Value Address of Company: 123 ABC Road'}
2023-01-25 19:28:54,532 - __main__ - INFO - 92 - <module>() - Predicting document 7...
2023-01-25 19:28:57,987 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  1st FLR AEON C.F.C (M) BHD (126926-H)
Date of Receipt: 2018-04-14
Address of Company: MAMEE MONSTER @3.45
Total: 1.68
2023-01-25 19:28:57,988 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:28:57,989 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:28:57,989 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  1st FLR AEON C.F.C (M) BHD (126926-H)

2023-01-25 19:28:57,989 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 1st FLR AEON C.F.C (M) BHD (126926-H)
2023-01-25 19:28:57,989 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:28:57,990 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  2018-04-14

2023-01-25 19:28:57,990 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 2018-04-14
2023-01-25 19:28:57,990 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:28:57,991 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  MAMEE MONSTER @3.45

2023-01-25 19:28:57,991 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: MAMEE MONSTER @3.45
2023-01-25 19:28:57,991 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:28:57,991 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  1.68
2023-01-25 19:28:57,992 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 1.68
2023-01-25 19:28:57,992 - __main__ - INFO - 96 - <module>() - Final prediction for document 7: {'company': '1st FLR AEON C.F.C (M) BHD (126926-H)', 'date': '2018-04-14', 'address': 'MAMEE MONSTER @3.45', 'total': '1.68'}
2023-01-25 19:28:57,994 - __main__ - INFO - 92 - <module>() - Predicting document 8...
2023-01-25 19:29:06,262 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  ABC
Date of Receipt: 02-07-2018
Address of Company: Taman Tun Abdul Razak, Jln Jemaluang, Bukit Gasing, Kedah
Total: 4,100

Sample Excel Spreadsheet:
You can also use this method to generate an Excel Spreadsheet to download. All you have to do is modify the parameters as you need it. Use the "Excel Sample" button to download the excel spreadsheet.
NOTE:
If there are a few sheets in the downloaded spreadsheet, check your sheet name in column "Q" of sheet "Q1". If
2023-01-25 19:29:06,263 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:29:06,264 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:29:06,265 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  ABC

2023-01-25 19:29:06,265 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: ABC
2023-01-25 19:29:06,265 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:29:06,265 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  02-07-2018

2023-01-25 19:29:06,266 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 02-07-2018
2023-01-25 19:29:06,266 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:29:06,266 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Taman Tun Abdul Razak, Jln Jemaluang, Bukit Gasing, Kedah

2023-01-25 19:29:06,266 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Taman Tun Abdul Razak, Jln Jemaluang, Bukit Gasing, Kedah
2023-01-25 19:29:06,266 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:29:06,266 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  4,100

Sample Excel Spreadsheet:
You can also use this method to generate an Excel Spreadsheet to download. All you have to do is modify the parameters as you need it. Use the "Excel Sample" button to download the excel spreadsheet.
NOTE:
If there are a few sheets in the downloaded spreadsheet, check your sheet name in column "Q" of sheet "Q1". If
2023-01-25 19:29:06,266 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 4,100 Sample Excel Spreadsheet: You can also use this method to generate an Excel Spreadsheet to download. All you have to do is modify the parameters as you need it. Use the "Excel Sample" button to download the excel spreadsheet. NOTE: If there are a few sheets in the downloaded spreadsheet, check your sheet name in column "Q" of sheet "Q1". If
2023-01-25 19:29:06,267 - __main__ - INFO - 96 - <module>() - Final prediction for document 8: {'company': 'ABC', 'date': '02-07-2018', 'address': 'Taman Tun Abdul Razak, Jln Jemaluang, Bukit Gasing, Kedah', 'total': '4,100 Sample Excel Spreadsheet: You can also use this method to generate an Excel Spreadsheet to download. All you have to do is modify the parameters as you need it. Use the "Excel Sample" button to download the excel spreadsheet. NOTE: If there are a few sheets in the downloaded spreadsheet, check your sheet name in column "Q" of sheet "Q1". If'}
2023-01-25 19:29:06,271 - __main__ - INFO - 92 - <module>() - Predicting document 9...
2023-01-25 19:29:10,745 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  "Wan Sheng Restoran"
Date of Receipt: "02-04-2018 19:30:26"
Address of Company: "Jalan Temenggung 19/9, Seksyen 9, Bandar Mahkota Cheras, 43200 Cheras, Selangor"
Total: "<|stop key|>"
2023-01-25 19:29:10,746 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:29:10,747 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:29:10,748 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  "Wan Sheng Restoran"

2023-01-25 19:29:10,748 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Wan Sheng Restoran
2023-01-25 19:29:10,749 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:29:10,750 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  "02-04-2018 19:30:26"

2023-01-25 19:29:10,750 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 02-04-2018 19:30:26
2023-01-25 19:29:10,751 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:29:10,752 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  "Jalan Temenggung 19/9, Seksyen 9, Bandar Mahkota Cheras, 43200 Cheras, Selangor"

2023-01-25 19:29:10,752 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Jalan Temenggung 19/9, Seksyen 9, Bandar Mahkota Cheras, 43200 Cheras, Selangor
2023-01-25 19:29:10,753 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:29:10,753 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  "<|stop key|>"
2023-01-25 19:29:10,754 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: <|stop key|>
2023-01-25 19:29:10,754 - __main__ - INFO - 96 - <module>() - Final prediction for document 9: {'company': 'Wan Sheng Restoran', 'date': '02-04-2018 19:30:26', 'address': 'Jalan Temenggung 19/9, Seksyen 9, Bandar Mahkota Cheras, 43200 Cheras, Selangor', 'total': '<|stop key|>'}
2023-01-25 19:29:10,757 - __main__ - INFO - 92 - <module>() - Predicting document 10...
2023-01-25 19:29:13,487 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  <Company Name>
Date of Receipt: <date of receipt>
Address of Company: <Address of Company>
Total: <total of invoice>

2023-01-25 19:29:13,488 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:29:13,489 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:29:13,489 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  <Company Name>

2023-01-25 19:29:13,490 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: <Company Name>
2023-01-25 19:29:13,490 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:29:13,491 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  <date of receipt>

2023-01-25 19:29:13,492 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: <date of receipt>
2023-01-25 19:29:13,492 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:29:13,493 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  <Address of Company>

2023-01-25 19:29:13,493 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: <Address of Company>
2023-01-25 19:29:13,493 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:29:13,494 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  <total of invoice>

2023-01-25 19:29:13,495 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: <total of invoice>
2023-01-25 19:29:13,495 - __main__ - INFO - 96 - <module>() - Final prediction for document 10: {'company': '<Company Name>', 'date': '<date of receipt>', 'address': '<Address of Company>', 'total': '<total of invoice>'}
2023-01-25 19:29:13,498 - __main__ - INFO - 92 - <module>() - Predicting document 11...
2023-01-25 19:29:20,760 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  COMPANYNAME_01.pdf
Date of Receipt: 01/01/2001
Address of Company: COMPANY ADDRESS
Total: 8.70

Add your key-value pair to the end of the above text. When you're finished, run the final document through the PDF Converter to save as a Word document.

PDF to Word Conversion
In order to get the most out of the Word Conversion, consider adding the following to your document.

Add a header that has:

Company Name: COMPANYNAME_01.pdf

Date of Receipt: 01/01/
2023-01-25 19:29:20,762 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:29:20,763 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:29:20,763 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  COMPANYNAME_01.pdf

2023-01-25 19:29:20,764 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: COMPANYNAME_01.pdf
2023-01-25 19:29:20,764 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:29:20,764 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  01/01/2001

2023-01-25 19:29:20,765 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 01/01/2001
2023-01-25 19:29:20,765 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:29:20,765 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  COMPANY ADDRESS

2023-01-25 19:29:20,766 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: COMPANY ADDRESS
2023-01-25 19:29:20,766 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:29:20,766 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  8.70

Add your key-value pair to the end of the above text. When you're finished, run the final document through the PDF Converter to save as a Word document.

PDF to Word Conversion
In order to get the most out of the Word Conversion, consider adding the following to your document.

Add a header that has:

Company Name: COMPANYNAME_01.pdf

Date of Receipt: 01/01/
2023-01-25 19:29:20,767 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 8.70 Add your key-value pair to the end of the above text. When you're finished, run the final document through the PDF Converter to save as a Word document. PDF to Word Conversion In order to get the most out of the Word Conversion, consider adding the following to your document. Add a header that has: Company Name: COMPANYNAME_01.pdf Date of Receipt: 01/01/
2023-01-25 19:29:20,767 - __main__ - INFO - 96 - <module>() - Final prediction for document 11: {'company': 'COMPANYNAME_01.pdf', 'date': '01/01/2001', 'address': 'COMPANY ADDRESS', 'total': "8.70 Add your key-value pair to the end of the above text. When you're finished, run the final document through the PDF Converter to save as a Word document. PDF to Word Conversion In order to get the most out of the Word Conversion, consider adding the following to your document. Add a header that has: Company Name: COMPANYNAME_01.pdf Date of Receipt: 01/01/"}
2023-01-25 19:29:20,772 - __main__ - INFO - 92 - <module>() - Predicting document 12...
2023-01-25 19:29:28,222 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  Karki Hari Bahadur
Date of Receipt: 09-07-2016
Address of Company: 3856-18 Jalan Sungai Tua Kajang, Kajang,
Selangor Darul Ehsan
Total: 8.10

The expected answer:
<?xml version="1.0" encoding="UTF-8"?>
<company>
    <Company Name>Karki Hari Bahadur</Company Name>
    <Date of Receipt>09-07-2016</Date of Receipt>
    <Address of Company>
2023-01-25 19:29:28,224 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:29:28,224 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:29:28,225 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Karki Hari Bahadur

2023-01-25 19:29:28,225 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Karki Hari Bahadur
2023-01-25 19:29:28,225 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:29:28,226 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  09-07-2016

2023-01-25 19:29:28,226 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 09-07-2016
2023-01-25 19:29:28,227 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:29:28,227 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  3856-18 Jalan Sungai Tua Kajang, Kajang,
Selangor Darul Ehsan

2023-01-25 19:29:28,228 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 3856-18 Jalan Sungai Tua Kajang, Kajang, Selangor Darul Ehsan
2023-01-25 19:29:28,228 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:29:28,229 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  8.10

The expected answer:
<?xml version="1.0" encoding="UTF-8"?>
<company>
    <Company Name>Karki Hari Bahadur</Company Name>
    <Date of Receipt>09-07-2016</Date of Receipt>
    <Address of Company>
2023-01-25 19:29:28,229 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 8.10 The expected answer: <?xml version="1.0" encoding="UTF-8"?> <company>   <Company Name>Karki Hari Bahadur</Company Name>   <Date of Receipt>09-07-2016</Date of Receipt>   <Address of Company>
2023-01-25 19:29:28,229 - __main__ - INFO - 96 - <module>() - Final prediction for document 12: {'company': 'Karki Hari Bahadur', 'date': '09-07-2016', 'address': '3856-18 Jalan Sungai Tua Kajang, Kajang, Selangor Darul Ehsan', 'total': '8.10 The expected answer: <?xml version="1.0" encoding="UTF-8"?> <company>   <Company Name>Karki Hari Bahadur</Company Name>   <Date of Receipt>09-07-2016</Date of Receipt>   <Address of Company>'}
2023-01-25 19:29:28,232 - __main__ - INFO - 92 - <module>() - Predicting document 13...
2023-01-25 19:29:35,088 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  OJC Group (OJC GROUP)
Date of Receipt:
2017/09/17 10:11
Address of Company: 81750 MASAI, JOHOR
Total:
170.00
Cashier:
RHYS TAN
Sales Person: Fatin
Description: KINGS SAFETY
QTY: 1 TOTAL ITEM DISCOUNT:
0.00
TOTAL AMOUNT:
170.00
Round Amt:
0.00
TOTAL:
170.00
Visa Card:
170.00
****THANK YOU, P
2023-01-25 19:29:35,090 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:29:35,091 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:29:35,092 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  OJC Group (OJC GROUP)

2023-01-25 19:29:35,093 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: OJC Group (OJC GROUP)
2023-01-25 19:29:35,094 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:29:35,094 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:
2017/09/17 10:11

2023-01-25 19:29:35,095 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 2017/09/17 10:11
2023-01-25 19:29:35,095 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:29:35,096 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  81750 MASAI, JOHOR

2023-01-25 19:29:35,097 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 81750 MASAI, JOHOR
2023-01-25 19:29:35,097 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:29:35,098 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:
170.00
Cashier:
RHYS TAN
Sales Person: Fatin
Description: KINGS SAFETY
QTY: 1 TOTAL ITEM DISCOUNT:
0.00
TOTAL AMOUNT:
170.00
Round Amt:
0.00

2023-01-25 19:29:35,100 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 170.00 Cashier: RHYS TAN Sales Person: Fatin Description: KINGS SAFETY QTY: 1 TOTAL ITEM DISCOUNT: 0.00 TOTAL AMOUNT: 170.00 Round Amt: 0.00
2023-01-25 19:29:35,101 - __main__ - INFO - 96 - <module>() - Final prediction for document 13: {'company': 'OJC Group (OJC GROUP)', 'date': '2017/09/17 10:11', 'address': '81750 MASAI, JOHOR', 'total': '170.00 Cashier: RHYS TAN Sales Person: Fatin Description: KINGS SAFETY QTY: 1 TOTAL ITEM DISCOUNT: 0.00 TOTAL AMOUNT: 170.00 Round Amt: 0.00'}
2023-01-25 19:29:35,104 - __main__ - INFO - 92 - <module>() - Predicting document 14...
2023-01-25 19:29:42,774 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  Acer
Date of Receipt: 2/18/2017
Address of Company: No.5, Jalan SS2/5, Taman Bunga Raya, 62100 Kuala Lumpur, Malaysia
Total: Rp 2.6m

We are pleased to inform you that our company (RHB Islamic Bank Berhad) will be selling goods valued at Rp 1.5 million (approx) at the Asean Exhibition & Conference Center (AEC), Kuala Lumpur, Malaysia on 2nd June 2017.

Please be informed that you are invited as
2023-01-25 19:29:42,776 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:29:42,777 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:29:42,778 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Acer

2023-01-25 19:29:42,778 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Acer
2023-01-25 19:29:42,778 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:29:42,778 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  2/18/2017

2023-01-25 19:29:42,778 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 2/18/2017
2023-01-25 19:29:42,779 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:29:42,779 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  No.5, Jalan SS2/5, Taman Bunga Raya, 62100 Kuala Lumpur, Malaysia

2023-01-25 19:29:42,779 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: No.5, Jalan SS2/5, Taman Bunga Raya, 62100 Kuala Lumpur, Malaysia
2023-01-25 19:29:42,779 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:29:42,779 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Rp 2.6m

We are pleased to inform you that our company (RHB Islamic Bank Berhad) will be selling goods valued at Rp 1.5 million (approx) at the Asean Exhibition & Conference Center (AEC), Kuala Lumpur, Malaysia on 2nd June 2017.

Please be informed that you are invited as
2023-01-25 19:29:42,780 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Rp 2.6m We are pleased to inform you that our company (RHB Islamic Bank Berhad) will be selling goods valued at Rp 1.5 million (approx) at the Asean Exhibition & Conference Center (AEC), Kuala Lumpur, Malaysia on 2nd June 2017. Please be informed that you are invited as
2023-01-25 19:29:42,780 - __main__ - INFO - 96 - <module>() - Final prediction for document 14: {'company': 'Acer', 'date': '2/18/2017', 'address': 'No.5, Jalan SS2/5, Taman Bunga Raya, 62100 Kuala Lumpur, Malaysia', 'total': 'Rp 2.6m We are pleased to inform you that our company (RHB Islamic Bank Berhad) will be selling goods valued at Rp 1.5 million (approx) at the Asean Exhibition & Conference Center (AEC), Kuala Lumpur, Malaysia on 2nd June 2017. Please be informed that you are invited as'}
2023-01-25 19:29:42,784 - __main__ - INFO - 92 - <module>() - Predicting document 15...
2023-01-25 19:29:50,037 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  Catering Chef
Date of Receipt: 17th June, 2012
Address of Company: 838, Jalan 2/5A
Total: 10.50
<|>stopkey|>: null
Company Name: Catering Chef
Date of Receipt: 17th June, 2012
Address of Company: 838, Jalan 2/5A
Total: 10.50
<|>stopkey|>: null
Company Name: Catering Chef
Date of Receipt: 17th June, 2012
Address of Company: 838, Jalan 2/5A
Total: 10.
2023-01-25 19:29:50,040 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:29:50,044 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:29:50,046 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Catering Chef

2023-01-25 19:29:50,046 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Catering Chef
2023-01-25 19:29:50,047 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:29:50,048 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  17th June, 2012

2023-01-25 19:29:50,048 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 17th June, 2012
2023-01-25 19:29:50,049 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:29:50,049 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  838, Jalan 2/5A

2023-01-25 19:29:50,049 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 838, Jalan 2/5A
2023-01-25 19:29:50,050 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:29:50,050 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  10.50
<|>stopkey|>: null
Company Name: Catering Chef
Date of Receipt: 17th June, 2012
Address of Company: 838, Jalan 2/5A

2023-01-25 19:29:50,051 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 10.50 <|>stopkey|>: null Company Name: Catering Chef Date of Receipt: 17th June, 2012 Address of Company: 838, Jalan 2/5A
2023-01-25 19:29:50,051 - __main__ - INFO - 96 - <module>() - Final prediction for document 15: {'company': 'Catering Chef', 'date': '17th June, 2012', 'address': '838, Jalan 2/5A', 'total': '10.50 <|>stopkey|>: null Company Name: Catering Chef Date of Receipt: 17th June, 2012 Address of Company: 838, Jalan 2/5A'}
2023-01-25 19:29:50,057 - __main__ - INFO - 92 - <module>() - Predicting document 16...
2023-01-25 19:29:52,528 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  <text>
Date of Receipt: <text>
Address of Company: <text>
Total: <numeric>
2023-01-25 19:29:52,529 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:29:52,530 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:29:52,530 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  <text>

2023-01-25 19:29:52,531 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: <text>
2023-01-25 19:29:52,531 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:29:52,532 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  <text>

2023-01-25 19:29:52,532 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: <text>
2023-01-25 19:29:52,533 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:29:52,533 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  <text>

2023-01-25 19:29:52,533 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: <text>
2023-01-25 19:29:52,534 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:29:52,534 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  <numeric>
2023-01-25 19:29:52,535 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: <numeric>
2023-01-25 19:29:52,535 - __main__ - INFO - 96 - <module>() - Final prediction for document 16: {'company': '<text>', 'date': '<text>', 'address': '<text>', 'total': '<numeric>'}
2023-01-25 19:29:52,538 - __main__ - INFO - 92 - <module>() - Predicting document 17...
2023-01-25 19:29:59,484 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  "Company Name"
Date of Receipt: "Date of Receipt"
Address of Company: "Address of Company"
Total: 15.00

Output:

Subtotal: 14.15
GST 6%: 0.85
Rounding Adjustment: 0.00
Rounded Total: 15.00

A:

Here's one option with awk:
$ awk -F\| '{ v=$4" "; $4="" ; NF-=1;sub("\\s+\\|(?![\\s\\S]*\\s+\\|)", v)}1' file

2023-01-25 19:29:59,487 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:29:59,487 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:29:59,488 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  "Company Name"

2023-01-25 19:29:59,489 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Company Name
2023-01-25 19:29:59,489 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:29:59,490 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  "Date of Receipt"

2023-01-25 19:29:59,491 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Date of Receipt
2023-01-25 19:29:59,491 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:29:59,492 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  "Address of Company"

2023-01-25 19:29:59,493 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Address of Company
2023-01-25 19:29:59,493 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:29:59,493 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  15.00

Output:

Sub
2023-01-25 19:29:59,494 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 15.00 Output: Sub
2023-01-25 19:29:59,494 - __main__ - INFO - 96 - <module>() - Final prediction for document 17: {'company': 'Company Name', 'date': 'Date of Receipt', 'address': 'Address of Company', 'total': '15.00 Output: Sub'}
2023-01-25 19:29:59,500 - __main__ - INFO - 92 - <module>() - Predicting document 18...
2023-01-25 19:30:06,991 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:
Date of Receipt:
Address of Company:
Total:

If the total value has "$" sign then replace it with a space (" ").

Please refer to example here for extracting data from invoice. It has to be processed using java program.
If you have a link to the actual invoice document, you can upload it to the question and if it is in any pdf format, I would extract it using pdftohtml for you.

If you're using Python, you can use the below code to parse it:

import re
def invoice_parser(invoice):

2023-01-25 19:30:06,991 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:30:06,992 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:30:06,992 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:30:06,992 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:30:06,993 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:30:06,993 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:30:06,994 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:30:06,994 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:30:06,994 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:30:06,995 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:30:06,995 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:30:06,995 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

If the total value has "$" sign then replace it with a space (" ").

Please refer to example here for extracting data from invoice. It has to be processed using java program.
If you have a link to the actual invoice document, you can upload it to the question and if it is in any pdf format, I would extract it using pdftohtml for you.

If you're using Python, you can use the below code to parse it:

import re
def invoice_parser(invoice):

2023-01-25 19:30:06,996 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: If the total value has "$" sign then replace it with a space (" "). Please refer to example here for extracting data from invoice. It has to be processed using java program. If you have a link to the actual invoice document, you can upload it to the question and if it is in any pdf format, I would extract it using pdftohtml for you. If you're using Python, you can use the below code to parse it: import re def invoice_parser(invoice):
2023-01-25 19:30:06,996 - __main__ - INFO - 96 - <module>() - Final prediction for document 18: {'total': 'If the total value has "$" sign then replace it with a space (" "). Please refer to example here for extracting data from invoice. It has to be processed using java program. If you have a link to the actual invoice document, you can upload it to the question and if it is in any pdf format, I would extract it using pdftohtml for you. If you\'re using Python, you can use the below code to parse it: import re def invoice_parser(invoice):'}
2023-01-25 19:30:06,998 - __main__ - INFO - 92 - <module>() - Predicting document 19...
2023-01-25 19:30:13,801 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  NULL
Date of Receipt: 09-01-15
Address of Company: NULL
Total: 27,000.00

Output:

Company Name: ABC Electronics Inc
Date of Receipt: 09-01-15
Address of Company: Jalan Kuala Lumpur
Total: 27,000.00

Explanation:
Since there is no key-value pair for Company Name, it is taken as "NULL".
Since there is no key-value pair for Date of Receipt, it is taken as "09-01-15".
Since there is no key-
2023-01-25 19:30:13,803 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:30:13,803 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:30:13,804 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  NULL

2023-01-25 19:30:13,804 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: NULL
2023-01-25 19:30:13,804 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:30:13,805 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  09-01-15

2023-01-25 19:30:13,805 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 09-01-15
2023-01-25 19:30:13,805 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:30:13,806 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  NULL

2023-01-25 19:30:13,806 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: NULL
2023-01-25 19:30:13,807 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:30:13,807 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  27,000.00

Output:

Company Name: ABC Electronics Inc
Date of Receipt: 09-01-15
Address of Company: Jalan Kuala Lumpur

2023-01-25 19:30:13,808 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 27,000.00 Output: Company Name: ABC Electronics Inc Date of Receipt: 09-01-15 Address of Company: Jalan Kuala Lumpur
2023-01-25 19:30:13,808 - __main__ - INFO - 96 - <module>() - Final prediction for document 19: {'date': '09-01-15', 'total': '27,000.00 Output: Company Name: ABC Electronics Inc Date of Receipt: 09-01-15 Address of Company: Jalan Kuala Lumpur'}
2023-01-25 19:30:13,811 - __main__ - INFO - 92 - <module>() - Predicting document 20...
2023-01-25 19:30:20,983 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  (e.g. "KAMPUNG ENTERPRISE SDN BHD")
Date of Receipt: (e.g. "10/04/17")
Address of Company: (e.g. "BANGBEI BUILDING")
Total:
</|stop key|>
Output:

For a company with 2-letter abbreviation, set the value to "A"

A:

There is no regex you can use to extract the line below
Total: 63.00

A possible alternative for the above regex is
\d+(
2023-01-25 19:30:20,984 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:30:20,984 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:30:20,984 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  (e.g. "KAMPUNG ENTERPRISE SDN BHD")

2023-01-25 19:30:20,985 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: (e.g. "KAMPUNG ENTERPRISE SDN BHD")
2023-01-25 19:30:20,985 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:30:20,985 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  (e.g. "10/04/17")

2023-01-25 19:30:20,985 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: (e.g. "10/04/17")
2023-01-25 19:30:20,985 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:30:20,985 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  (e.g. "BANGBEI BUILDING")

2023-01-25 19:30:20,986 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: (e.g. "BANGBEI BUILDING")
2023-01-25 19:30:20,986 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:30:20,986 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:
</|stop key|>
Output:

For a company with 2-letter abbreviation, set the value to "A"

A:

There is no regex you can use to extract the line below

2023-01-25 19:30:20,986 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: </|stop key|> Output: For a company with 2-letter abbreviation, set the value to "A" A: There is no regex you can use to extract the line below
2023-01-25 19:30:20,986 - __main__ - INFO - 96 - <module>() - Final prediction for document 20: {'company': '(e.g. "KAMPUNG ENTERPRISE SDN BHD")', 'date': '(e.g. "10/04/17")', 'address': '(e.g. "BANGBEI BUILDING")', 'total': '</|stop key|> Output: For a company with 2-letter abbreviation, set the value to "A" A: There is no regex you can use to extract the line below'}
2023-01-25 19:30:20,989 - __main__ - INFO - 92 - <module>() - Predicting document 21...
2023-01-25 19:30:26,779 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:
Date of Receipt:
Address of Company:
Total:
Tax:
Sale/Use Tax (%):
GST:
Total (Sales and Use tax combined):
Total (Sales and Use tax combined):
* If tax rate is not specified, we will assume it to be 10%* If you can't find a key-value pair in the document set the value to "null".
2023-01-25 19:30:26,779 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:30:26,780 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:30:26,780 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:30:26,780 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:30:26,781 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:30:26,781 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:30:26,781 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:30:26,781 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:30:26,782 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:30:26,782 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:30:26,782 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:30:26,783 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:
Tax:
Sale/Use Tax (%):
GST:
Total (Sales and Use tax combined):
Total (Sales and Use tax combined):
* If tax rate is not specified, we will assume it to be 10%* If you can't find a key-value pair in the document set the value to "null".
2023-01-25 19:30:26,783 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Tax: Sale/Use Tax (%): GST: Total (Sales and Use tax combined): Total (Sales and Use tax combined): * If tax rate is not specified, we will assume it to be 10%* If you can't find a key-value pair in the document set the value to "null".
2023-01-25 19:30:26,783 - __main__ - INFO - 96 - <module>() - Final prediction for document 21: {'total': 'Tax: Sale/Use Tax (%): GST: Total (Sales and Use tax combined): Total (Sales and Use tax combined): * If tax rate is not specified, we will assume it to be 10%* If you can\'t find a key-value pair in the document set the value to "null".'}
2023-01-25 19:30:26,785 - __main__ - INFO - 92 - <module>() - Predicting document 22...
2023-01-25 19:30:29,236 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  McDonald's
Date of Receipt: 04/30/2017
Address of Company: Taman Segar Sri Damansara
Total: 47.15
2023-01-25 19:30:29,239 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:30:29,239 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:30:29,240 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  McDonald's

2023-01-25 19:30:29,240 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: McDonald's
2023-01-25 19:30:29,240 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:30:29,241 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  04/30/2017

2023-01-25 19:30:29,241 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 04/30/2017
2023-01-25 19:30:29,241 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:30:29,241 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Taman Segar Sri Damansara

2023-01-25 19:30:29,242 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Taman Segar Sri Damansara
2023-01-25 19:30:29,242 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:30:29,242 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  47.15
2023-01-25 19:30:29,242 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 47.15
2023-01-25 19:30:29,243 - __main__ - INFO - 96 - <module>() - Final prediction for document 22: {'company': "McDonald's", 'date': '04/30/2017', 'address': 'Taman Segar Sri Damansara', 'total': '47.15'}
2023-01-25 19:30:29,244 - __main__ - INFO - 92 - <module>() - Predicting document 23...
2023-01-25 19:30:36,827 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  <|Company Name|>
Date of Receipt: <|Date of Receipt|>
Address of Company: <|Address of Company|>
Total: <|Total|>

<|Total|>: <|Company Name|>, <|Date of Receipt|>, <|Address of Company|>, <|Total|>

Example for an invoice in a document set that contains a key with a value that is a number:

Key: 3
Value: <|Company Name|>, <|Date of Receipt|>, <|Address of Company|>, <|Total|
2023-01-25 19:30:36,828 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:30:36,829 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:30:36,829 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  <|Company Name|>

2023-01-25 19:30:36,829 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: <|Company Name|>
2023-01-25 19:30:36,829 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:30:36,830 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  <|Date of Receipt|>

2023-01-25 19:30:36,830 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: <|Date of Receipt|>
2023-01-25 19:30:36,831 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:30:36,831 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  <|Address of Company|>

2023-01-25 19:30:36,831 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: <|Address of Company|>
2023-01-25 19:30:36,831 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:30:36,832 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  <|Total|>

<|Total|>: <|Company Name|>, <|Date of Receipt|>, <|Address of Company|>, <|Total|>

Example for an invoice in a document set that contains a key with a value that is a number:

Key: 3
Value: <|Company Name|>, <|Date of Receipt|>, <|Address of Company|>, <|Total|
2023-01-25 19:30:36,832 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: <|Total|> <|Total|>: <|Company Name|>, <|Date of Receipt|>, <|Address of Company|>, <|Total|> Example for an invoice in a document set that contains a key with a value that is a number: Key: 3 Value: <|Company Name|>, <|Date of Receipt|>, <|Address of Company|>, <|Total|
2023-01-25 19:30:36,832 - __main__ - INFO - 96 - <module>() - Final prediction for document 23: {'company': '<|Company Name|>', 'date': '<|Date of Receipt|>', 'address': '<|Address of Company|>', 'total': '<|Total|> <|Total|>: <|Company Name|>, <|Date of Receipt|>, <|Address of Company|>, <|Total|> Example for an invoice in a document set that contains a key with a value that is a number: Key: 3 Value: <|Company Name|>, <|Date of Receipt|>, <|Address of Company|>, <|Total|'}
2023-01-25 19:30:36,834 - __main__ - INFO - 92 - <module>() - Predicting document 24...
2023-01-25 19:30:44,338 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  null
Document Type: TAX INVOICE
Date Received:
GST Number:
GST Key:
Other: TOTAL (CR-CUSTODIAN)
Excise:
VAT:
GST:
Invoiced/ Adjusted Quantity:
Final Gross Price:
GST:
Tax:
GST:
GST:
Tax:
GST:

Total (without GST)
Tax Inclusive Amount
GST
TOTAL (GST)
Adjustment
(Incl GST)
Taxes to be Paid

2023-01-25 19:30:44,339 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:30:44,340 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:30:44,340 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  null
Document Type: TAX INVOICE
Date Received:
GST Number:
GST Key:
Other: TOTAL (CR-CUSTODIAN)
Excise:
VAT:
GST:
Invoiced/ Adjusted Quantity:
Final Gross Price:
GST:
Tax:
GST:
GST:
Tax:
GST:

Total (without GST)
Tax Inclusive Amount
GST
TOTAL (GST)
Adjustment
(Incl GST)
Taxes to be Paid

2023-01-25 19:30:44,341 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: null Document Type: TAX INVOICE Date Received: GST Number: GST Key: Other: TOTAL (CR-CUSTODIAN) Excise: VAT: GST: Invoiced/ Adjusted Quantity: Final Gross Price: GST: Tax: GST: GST: Tax: GST: Total (without GST) Tax Inclusive Amount GST TOTAL (GST) Adjustment (Incl GST) Taxes to be Paid
2023-01-25 19:30:44,341 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:30:44,341 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:30:44,341 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:30:44,342 - __main__ - INFO - 96 - <module>() - Final prediction for document 24: {}
2023-01-25 19:30:44,343 - __main__ - INFO - 92 - <module>() - Predicting document 25...
2023-01-25 19:30:48,052 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  S
Date of Receipt: 19/06/17 07:48:56 PM
Address of Company: 150B, Jalan TUDM, Kg. Baru, Subang Jaya, Selangor Darul Ehsan, Malaysia
Total: 50.80
2023-01-25 19:30:48,053 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:30:48,054 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:30:48,054 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  S

2023-01-25 19:30:48,054 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: S
2023-01-25 19:30:48,055 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:30:48,055 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  19/06/17 07:48:56 PM

2023-01-25 19:30:48,055 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 19/06/17 07:48:56 PM
2023-01-25 19:30:48,056 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:30:48,056 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  150B, Jalan TUDM, Kg. Baru, Subang Jaya, Selangor Darul Ehsan, Malaysia

2023-01-25 19:30:48,056 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 150B, Jalan TUDM, Kg. Baru, Subang Jaya, Selangor Darul Ehsan, Malaysia
2023-01-25 19:30:48,056 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:30:48,057 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  50.80
2023-01-25 19:30:48,057 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 50.80
2023-01-25 19:30:48,057 - __main__ - INFO - 96 - <module>() - Final prediction for document 25: {'company': 'S', 'date': '19/06/17 07:48:56 PM', 'address': '150B, Jalan TUDM, Kg. Baru, Subang Jaya, Selangor Darul Ehsan, Malaysia', 'total': '50.80'}
2023-01-25 19:30:48,059 - __main__ - INFO - 92 - <module>() - Predicting document 26...
2023-01-25 19:30:56,541 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  "ABC Ltd"
Date of Receipt: "01/05/2017"
Address of Company: "ABC Park"
Total: "10.0"

This is what the example looks like in a text file.
ABC Ltd 01/05/2017 ABC Park 10.0

Save your text file in the above format. Create an output text file and paste the entire text file into it.

Save the file.

Upload the file.

The system will check the file for key-value pairs. If there are any pairs, they will be displayed as they are in the text
2023-01-25 19:30:56,542 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:30:56,543 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:30:56,544 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  "ABC Ltd"

2023-01-25 19:30:56,544 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: ABC Ltd
2023-01-25 19:30:56,544 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:30:56,545 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  "01/05/2017"

2023-01-25 19:30:56,545 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 01/05/2017
2023-01-25 19:30:56,545 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:30:56,545 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  "ABC Park"

2023-01-25 19:30:56,546 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: ABC Park
2023-01-25 19:30:56,546 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:30:56,546 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  "10.0"

This is what the example looks like in a text file.
ABC Ltd 01/05/2017 ABC Park 10.0

Save your text file in the above format. Create an output text file and paste the entire text file into it.

Save the file.

Upload the file.

The system will check the file for key-value pairs. If there are any pairs, they will be displayed as they are in the text
2023-01-25 19:30:56,546 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: "10.0" This is what the example looks like in a text file. ABC Ltd 01/05/2017 ABC Park 10.0 Save your text file in the above format. Create an output text file and paste the entire text file into it. Save the file. Upload the file. The system will check the file for key-value pairs. If there are any pairs, they will be displayed as they are in the text
2023-01-25 19:30:56,547 - __main__ - INFO - 96 - <module>() - Final prediction for document 26: {'company': 'ABC Ltd', 'date': '01/05/2017', 'address': 'ABC Park', 'total': '"10.0" This is what the example looks like in a text file. ABC Ltd 01/05/2017 ABC Park 10.0 Save your text file in the above format. Create an output text file and paste the entire text file into it. Save the file. Upload the file. The system will check the file for key-value pairs. If there are any pairs, they will be displayed as they are in the text'}
2023-01-25 19:30:56,551 - __main__ - INFO - 92 - <module>() - Predicting document 27...
2023-01-25 19:31:03,786 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:
Date of Receipt:
Address of Company:
Total:

Ex:
Date Received:
01/01/2016

Key: Value
Company Name:
Date of Receipt:
Address of Company:
Total:

Ex:
Date Received:
01/01/2016

Ex:
Date Received:
01/01/2016

Ex:
Date Received:
01/01/2016

Ex:
Date Received:
01/01/2016

Ex:
Date Received:
01/01/2016

2023-01-25 19:31:03,787 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:31:03,788 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:31:03,788 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:31:03,788 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:31:03,789 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:31:03,789 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:31:03,789 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:31:03,790 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:31:03,790 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:31:03,790 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:31:03,791 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:31:03,791 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

Ex:
Date Received:
01/01/2016

Key: Value
Company Name:
Date of Receipt:
Address of Company:

2023-01-25 19:31:03,791 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Ex: Date Received: 01/01/2016 Key: Value Company Name: Date of Receipt: Address of Company:
2023-01-25 19:31:03,791 - __main__ - INFO - 96 - <module>() - Final prediction for document 27: {'total': 'Ex: Date Received: 01/01/2016 Key: Value Company Name: Date of Receipt: Address of Company:'}
2023-01-25 19:31:03,793 - __main__ - INFO - 92 - <module>() - Predicting document 28...
2023-01-25 19:31:07,543 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:
Date of Receipt:
Address of Company:
Total:

Output

Company Name Date of Receipt Address of Company Total

Sample input #3

<DOCUMENT ROW>
Company Name :
Date of Receipt :
Address of Company :
Total :
2023-01-25 19:31:07,544 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:31:07,545 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:31:07,545 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:31:07,545 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:31:07,546 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:31:07,546 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:31:07,546 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:31:07,546 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:31:07,547 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:31:07,547 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:31:07,547 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:31:07,547 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

Output

Company Name Date of Receipt Address of Company Total

Sample input #3

<DOCUMENT ROW>
Company Name :
Date of Receipt :
Address of Company :
Total :
2023-01-25 19:31:07,548 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Output Company Name Date of Receipt Address of Company Total Sample input #3 <DOCUMENT ROW> Company Name : Date of Receipt : Address of Company : Total :
2023-01-25 19:31:07,548 - __main__ - INFO - 96 - <module>() - Final prediction for document 28: {'total': 'Output Company Name Date of Receipt Address of Company Total Sample input #3 <DOCUMENT ROW> Company Name : Date of Receipt : Address of Company : Total :'}
2023-01-25 19:31:07,550 - __main__ - INFO - 92 - <module>() - Predicting document 29...
2023-01-25 19:31:14,136 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:
Date of Receipt:
Address of Company:
Total:
:CASHIER
%

For your assignment you need to create a form that allows a user to enter their address. They need to enter two pieces of information:
First name of person:
Last name of person:
Then they will be asked to enter a street name, street number and city/state/country:
Then they will be asked to enter a town/city/state/country:
Then they will be asked to enter their postal code:
Then they will be asked to enter their phone number:

2023-01-25 19:31:14,138 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:31:14,139 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:31:14,139 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:31:14,139 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:31:14,140 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:31:14,140 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:31:14,140 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:31:14,140 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:31:14,141 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:31:14,141 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:31:14,141 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:31:14,142 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:
:CASHIER
%

For your assignment you need to create a form that allows a user to enter their address. They need to enter two pieces of information:
First name of person:
Last name of person:
Then they will be asked to enter a street name, street number and city/state/country:
Then they will be asked to enter a town/city/state/country:
Then they will be asked to enter their postal code:
Then they will be asked to enter their phone number:

2023-01-25 19:31:14,142 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: :CASHIER % For your assignment you need to create a form that allows a user to enter their address. They need to enter two pieces of information: First name of person: Last name of person: Then they will be asked to enter a street name, street number and city/state/country: Then they will be asked to enter a town/city/state/country: Then they will be asked to enter their postal code: Then they will be asked to enter their phone number:
2023-01-25 19:31:14,142 - __main__ - INFO - 96 - <module>() - Final prediction for document 29: {'total': ':CASHIER % For your assignment you need to create a form that allows a user to enter their address. They need to enter two pieces of information: First name of person: Last name of person: Then they will be asked to enter a street name, street number and city/state/country: Then they will be asked to enter a town/city/state/country: Then they will be asked to enter their postal code: Then they will be asked to enter their phone number:'}
2023-01-25 19:31:14,144 - __main__ - INFO - 92 - <module>() - Predicting document 30...
2023-01-25 19:31:20,912 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  Company Name
Date of Receipt: Date of Receipt
Address of Company: Address of Company
Total: Total

This is an example of what it would look like:
Company Name:  HU GOING HOME SDN BHD
Date of Receipt: 11-12-2019
Address of Company: SEN. BORONG JAYA
Total:  12.60

I need the keys and values on the same column.
The last part of the assignment is to output the total for the total of the list. The total for all three lists combined would be:
(12.
2023-01-25 19:31:20,913 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:31:20,913 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:31:20,914 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Company Name

2023-01-25 19:31:20,914 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Company Name
2023-01-25 19:31:20,915 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:31:20,915 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Date of Receipt

2023-01-25 19:31:20,915 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Date of Receipt
2023-01-25 19:31:20,915 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:31:20,916 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Address of Company

2023-01-25 19:31:20,916 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Address of Company
2023-01-25 19:31:20,916 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:31:20,916 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Total

This is an example of what it would look like:
Company Name:  HU GOING HOME SDN BHD
Date of Receipt: 11-12-2019
Address of Company: SEN. BORONG JAYA

2023-01-25 19:31:20,917 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Total This is an example of what it would look like: Company Name: HU GOING HOME SDN BHD Date of Receipt: 11-12-2019 Address of Company: SEN. BORONG JAYA
2023-01-25 19:31:20,917 - __main__ - INFO - 96 - <module>() - Final prediction for document 30: {'company': 'Company Name', 'date': 'Date of Receipt', 'address': 'Address of Company', 'total': 'Total This is an example of what it would look like: Company Name: HU GOING HOME SDN BHD Date of Receipt: 11-12-2019 Address of Company: SEN. BORONG JAYA'}
2023-01-25 19:31:20,919 - __main__ - INFO - 92 - <module>() - Predicting document 31...
2023-01-25 19:31:24,621 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  "ESWARAN 012-6369400"
Date of Receipt: "2017-11-20 07:59:34"
Address of Company:
Total: "RM 278.80"
2023-01-25 19:31:24,622 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:31:24,622 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:31:24,623 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  "ESWARAN 012-6369400"

2023-01-25 19:31:24,623 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: ESWARAN 012-6369400
2023-01-25 19:31:24,623 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:31:24,624 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  "2017-11-20 07:59:34"

2023-01-25 19:31:24,624 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 2017-11-20 07:59:34
2023-01-25 19:31:24,625 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:31:24,625 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:31:24,625 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:31:24,626 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:31:24,626 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  "RM 278.80"
2023-01-25 19:31:24,626 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: RM 278.80
2023-01-25 19:31:24,626 - __main__ - INFO - 96 - <module>() - Final prediction for document 31: {'company': 'ESWARAN 012-6369400', 'date': '2017-11-20 07:59:34', 'total': 'RM 278.80'}
2023-01-25 19:31:24,628 - __main__ - INFO - 92 - <module>() - Predicting document 32...
2023-01-25 19:31:31,727 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  N/A
Date of Receipt: 22/03/2018
Address of Company: TAMAN DESA 43800 DENGKIL, SELANGOR.
Total: 136

What is the total tax (inclusive of GST)?

Answer: 8.16

What is the total taxes payable by this customer?

Answer: 8.16

What is the amount of discount?

Answer: 0.00

What is the total price?

Answer: <|stop key|>

What is the gross amount before tax?

Answer: <
2023-01-25 19:31:31,730 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:31:31,731 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:31:31,732 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  N/A

2023-01-25 19:31:31,733 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: N/A
2023-01-25 19:31:31,733 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:31:31,734 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  22/03/2018

2023-01-25 19:31:31,734 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 22/03/2018
2023-01-25 19:31:31,735 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:31:31,736 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  TAMAN DESA 43800 DENGKIL, SELANGOR.

2023-01-25 19:31:31,737 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: TAMAN DESA 43800 DENGKIL, SELANGOR.
2023-01-25 19:31:31,737 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:31:31,738 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  136

What is the total tax (inclusive of GST)?

Answer: 8.16

What is the total taxes payable by this customer?

Answer: 8.16

What is the amount of discount?

Answer: 0.00

What is the total price?

Answer: <|stop key|>

What is the gross amount before tax?

Answer: <
2023-01-25 19:31:31,738 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 136 What is the total tax (inclusive of GST)? Answer: 8.16 What is the total taxes payable by this customer? Answer: 8.16 What is the amount of discount? Answer: 0.00 What is the total price? Answer: <|stop key|> What is the gross amount before tax? Answer: <
2023-01-25 19:31:31,739 - __main__ - INFO - 96 - <module>() - Final prediction for document 32: {'company': 'N/A', 'date': '22/03/2018', 'address': 'TAMAN DESA 43800 DENGKIL, SELANGOR.', 'total': '136 What is the total tax (inclusive of GST)? Answer: 8.16 What is the total taxes payable by this customer? Answer: 8.16 What is the amount of discount? Answer: 0.00 What is the total price? Answer: <|stop key|> What is the gross amount before tax? Answer: <'}
2023-01-25 19:31:31,745 - __main__ - INFO - 92 - <module>() - Predicting document 33...
2023-01-25 19:31:38,584 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:
Date of Receipt:
Address of Company:
Total:

You can then copy the content of the first row and paste it to the bottom of the document.
Save the document using CTRL+S

You need to find the row index and key field value that matches what is displayed. The index will start with 0.
If your data is tab delimited, create a new CSV file from the data set (CSV)

To set the default delimiter use CTRL+F to open up the find dialog box. Select Delimiter tab and choose tab.

Enter the data
2023-01-25 19:31:38,586 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:31:38,587 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:31:38,587 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:31:38,588 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:31:38,589 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:31:38,589 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:31:38,590 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:31:38,590 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:31:38,591 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:31:38,592 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:31:38,592 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:31:38,593 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

You can then copy the content of the first row and paste it to the bottom of the document.
Save the document using CTRL+S

You need to find the row index and key field value that matches what is displayed. The index will start with 0.
If your data is tab delimited, create a new CSV file from the data set (CSV)

To set the default delimiter use CTRL+F to open up the find dialog box. Select Delimiter tab and choose tab.

Enter the data
2023-01-25 19:31:38,593 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: You can then copy the content of the first row and paste it to the bottom of the document. Save the document using CTRL+S You need to find the row index and key field value that matches what is displayed. The index will start with 0. If your data is tab delimited, create a new CSV file from the data set (CSV) To set the default delimiter use CTRL+F to open up the find dialog box. Select Delimiter tab and choose tab. Enter the data
2023-01-25 19:31:38,594 - __main__ - INFO - 96 - <module>() - Final prediction for document 33: {'total': 'You can then copy the content of the first row and paste it to the bottom of the document. Save the document using CTRL+S You need to find the row index and key field value that matches what is displayed. The index will start with 0. If your data is tab delimited, create a new CSV file from the data set (CSV) To set the default delimiter use CTRL+F to open up the find dialog box. Select Delimiter tab and choose tab. Enter the data'}
2023-01-25 19:31:38,598 - __main__ - INFO - 92 - <module>() - Predicting document 34...
2023-01-25 19:31:46,114 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  YA
Date of Receipt: 05/09/2017
Address of Company: 013, Jalan TARifin, Bandar Puteri, 47100, Puchong, Kuala Lumpur
Total: RM26.00

This entry consists of a date, one or two authors of a document, and one or two keywords.

The date is the date of the last entry to this logfile.

This field is used to test sorting. The leftmost alphanumeric character in a date is significant for sorting.
The last update of this field is the date
2023-01-25 19:31:46,116 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:31:46,116 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:31:46,117 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  YA

2023-01-25 19:31:46,117 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: YA
2023-01-25 19:31:46,117 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:31:46,118 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  05/09/2017

2023-01-25 19:31:46,118 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 05/09/2017
2023-01-25 19:31:46,118 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:31:46,118 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  013, Jalan TARifin, Bandar Puteri, 47100, Puchong, Kuala Lumpur

2023-01-25 19:31:46,118 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 013, Jalan TARifin, Bandar Puteri, 47100, Puchong, Kuala Lumpur
2023-01-25 19:31:46,118 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:31:46,118 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  RM26.00

This entry consists of a date, one or two authors of a document, and one or two keywords.

The date is the date of the last entry to this logfile.

This field is used to test sorting. The leftmost alphanumeric character in a date is significant for sorting.
The last update of this field is the date
2023-01-25 19:31:46,118 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: RM26.00 This entry consists of a date, one or two authors of a document, and one or two keywords. The date is the date of the last entry to this logfile. This field is used to test sorting. The leftmost alphanumeric character in a date is significant for sorting. The last update of this field is the date
2023-01-25 19:31:46,119 - __main__ - INFO - 96 - <module>() - Final prediction for document 34: {'company': 'YA', 'date': '05/09/2017', 'address': '013, Jalan TARifin, Bandar Puteri, 47100, Puchong, Kuala Lumpur', 'total': 'RM26.00 This entry consists of a date, one or two authors of a document, and one or two keywords. The date is the date of the last entry to this logfile. This field is used to test sorting. The leftmost alphanumeric character in a date is significant for sorting. The last update of this field is the date'}
2023-01-25 19:31:46,122 - __main__ - INFO - 92 - <module>() - Predicting document 35...
2023-01-25 19:31:53,751 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  KANSAI CEN ENTERPRISE
Date of Receipt: 21/05/2017
Address of Company: JALAN SUBANG JASA 3, 40150 SHAH ALAM, SELANGOR
Total: 114.00
Date: 21/05/2017
Address: JALAN SUBANG JASA 3, 40150 SHAH ALAM, SELANGOR
Amount: 57.20
Date: 21/05/2017
Address: JALAN SUBANG JASA 3, 40150 SHAH ALAM, SELANGOR
Amount: 57.
2023-01-25 19:31:53,753 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:31:53,754 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:31:53,755 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  KANSAI CEN ENTERPRISE

2023-01-25 19:31:53,756 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: KANSAI CEN ENTERPRISE
2023-01-25 19:31:53,756 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:31:53,757 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  21/05/2017

2023-01-25 19:31:53,757 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 21/05/2017
2023-01-25 19:31:53,758 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:31:53,759 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  JALAN SUBANG JASA 3, 40150 SHAH ALAM, SELANGOR

2023-01-25 19:31:53,759 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: JALAN SUBANG JASA 3, 40150 SHAH ALAM, SELANGOR
2023-01-25 19:31:53,760 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:31:53,760 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  114.00
Date: 21/05/2017
Address: JALAN SUBANG JASA 3, 40150 SHAH ALAM, SELANGOR
Amount: 57.20
Date: 21/05/2017
Address: JALAN SUBANG JASA 3, 40150 SHAH ALAM, SELANGOR
Amount: 57.
2023-01-25 19:31:53,761 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 114.00 Date: 21/05/2017 Address: JALAN SUBANG JASA 3, 40150 SHAH ALAM, SELANGOR Amount: 57.20 Date: 21/05/2017 Address: JALAN SUBANG JASA 3, 40150 SHAH ALAM, SELANGOR Amount: 57.
2023-01-25 19:31:53,761 - __main__ - INFO - 96 - <module>() - Final prediction for document 35: {'company': 'KANSAI CEN ENTERPRISE', 'date': '21/05/2017', 'address': 'JALAN SUBANG JASA 3, 40150 SHAH ALAM, SELANGOR', 'total': '114.00 Date: 21/05/2017 Address: JALAN SUBANG JASA 3, 40150 SHAH ALAM, SELANGOR Amount: 57.20 Date: 21/05/2017 Address: JALAN SUBANG JASA 3, 40150 SHAH ALAM, SELANGOR Amount: 57.'}
2023-01-25 19:31:53,765 - __main__ - INFO - 92 - <module>() - Predicting document 36...
2023-01-25 19:31:56,564 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:
: A & D Express
Date of Receipt: 27/01/2012 10:30:55
Address of Company: 27/01/2012 10:30:55
Total: : -:-:
2023-01-25 19:31:56,565 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:31:56,566 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:31:56,567 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:
: A & D Express

2023-01-25 19:31:56,568 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: : A & D Express
2023-01-25 19:31:56,568 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:31:56,569 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  27/01/2012 10:30:55

2023-01-25 19:31:56,569 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 27/01/2012 10:30:55
2023-01-25 19:31:56,570 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:31:56,570 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  27/01/2012 10:30:55

2023-01-25 19:31:56,571 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 27/01/2012 10:30:55
2023-01-25 19:31:56,571 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:31:56,572 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  : -:-:
2023-01-25 19:31:56,572 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: : -:-:
2023-01-25 19:31:56,572 - __main__ - INFO - 96 - <module>() - Final prediction for document 36: {'company': ': A & D Express', 'date': '27/01/2012 10:30:55', 'address': '27/01/2012 10:30:55', 'total': ': -:-:'}
2023-01-25 19:31:56,576 - __main__ - INFO - 92 - <module>() - Predicting document 37...
2023-01-25 19:31:59,855 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  *Company Name
Date of Receipt: (Date)
Address of Company: *Address of Company
Total: *Total

The output should be similar to:

Company Name (Address of Company) (Total)


2023-01-25 19:31:59,855 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:31:59,855 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:31:59,856 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  *Company Name

2023-01-25 19:31:59,856 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: *Company Name
2023-01-25 19:31:59,856 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:31:59,856 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  (Date)

2023-01-25 19:31:59,856 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: (Date)
2023-01-25 19:31:59,857 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:31:59,857 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  *Address of Company

2023-01-25 19:31:59,857 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: *Address of Company
2023-01-25 19:31:59,857 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:31:59,857 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  *Total

The output should be similar to:

Company Name (Address of Company) (Total)


2023-01-25 19:31:59,858 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: *Total The output should be similar to: Company Name (Address of Company) (Total)
2023-01-25 19:31:59,858 - __main__ - INFO - 96 - <module>() - Final prediction for document 37: {'company': '*Company Name', 'date': '(Date)', 'address': '*Address of Company', 'total': '*Total The output should be similar to: Company Name (Address of Company) (Total)'}
2023-01-25 19:31:59,859 - __main__ - INFO - 92 - <module>() - Predicting document 38...
2023-01-25 19:32:06,756 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:
Date of Receipt:
Address of Company:
Total:

Now that we have extracted all these fields we will need to match them with the data in our database, you can now connect your application to the database using Data Connect.

I found a tutorial that I am going to modify to get the data we need for this assignment. I'll link the tutorial in the end, if you want to use it do give me credit and link back to this blog post.

If you have trouble following the tutorial you can find the original source here.

Part 3
So our output should look something like
2023-01-25 19:32:06,757 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:32:06,758 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:32:06,758 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:32:06,759 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:32:06,760 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:32:06,760 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:32:06,761 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:32:06,761 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:32:06,762 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:32:06,762 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:32:06,763 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:32:06,763 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

Now that we have extracted all these fields we will need to match them with the data in our database, you can now connect your application to the database using Data Connect.

I found a tutorial that I am going to modify to get the data we need for this assignment. I'll link the tutorial in the end, if you want to use it do give me credit and link back to this blog post.

If you have trouble following the tutorial you can find the original source here.

Part 3
So our output should look something like
2023-01-25 19:32:06,764 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Now that we have extracted all these fields we will need to match them with the data in our database, you can now connect your application to the database using Data Connect. I found a tutorial that I am going to modify to get the data we need for this assignment. I'll link the tutorial in the end, if you want to use it do give me credit and link back to this blog post. If you have trouble following the tutorial you can find the original source here. Part 3 So our output should look something like
2023-01-25 19:32:06,764 - __main__ - INFO - 96 - <module>() - Final prediction for document 38: {'total': "Now that we have extracted all these fields we will need to match them with the data in our database, you can now connect your application to the database using Data Connect. I found a tutorial that I am going to modify to get the data we need for this assignment. I'll link the tutorial in the end, if you want to use it do give me credit and link back to this blog post. If you have trouble following the tutorial you can find the original source here. Part 3 So our output should look something like"}
2023-01-25 19:32:06,768 - __main__ - INFO - 92 - <module>() - Predicting document 39...
2023-01-25 19:32:11,681 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  Company_name (if applicable)
Date of Receipt: Date_of_receipt (if applicable)
Address of Company: Address_of_company (if applicable)
Total: Total amount (tax)
Total: 0 (If tax is not applicable)
2023-01-25 19:32:11,683 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:32:11,683 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:32:11,684 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Company_name (if applicable)

2023-01-25 19:32:11,684 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Company_name (if applicable)
2023-01-25 19:32:11,685 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:32:11,685 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Date_of_receipt (if applicable)

2023-01-25 19:32:11,686 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Date_of_receipt (if applicable)
2023-01-25 19:32:11,686 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:32:11,687 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Address_of_company (if applicable)

2023-01-25 19:32:11,687 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Address_of_company (if applicable)
2023-01-25 19:32:11,688 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:32:11,689 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Total amount (tax)

2023-01-25 19:32:11,690 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Total amount (tax)
2023-01-25 19:32:11,690 - __main__ - INFO - 96 - <module>() - Final prediction for document 39: {'company': 'Company_name (if applicable)', 'date': 'Date_of_receipt (if applicable)', 'address': 'Address_of_company (if applicable)', 'total': 'Total amount (tax)'}
2023-01-25 19:32:11,693 - __main__ - INFO - 92 - <module>() - Predicting document 40...
2023-01-25 19:32:15,770 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  Xxxxxx Ltd.
Date of Receipt: 12/31/2005
Address of Company: Xxxxxxxxxxxxxx, xxxxxxxxxxx (Address)
Total: 12.00

For a full sample of the documentation and to view a short tutorial, please visit the
Avery Support page.
2023-01-25 19:32:15,772 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:32:15,773 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:32:15,774 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Xxxxxx Ltd.

2023-01-25 19:32:15,774 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Xxxxxx Ltd.
2023-01-25 19:32:15,775 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:32:15,775 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  12/31/2005

2023-01-25 19:32:15,776 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 12/31/2005
2023-01-25 19:32:15,776 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:32:15,777 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Xxxxxxxxxxxxxx, xxxxxxxxxxx (Address)

2023-01-25 19:32:15,777 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Xxxxxxxxxxxxxx, xxxxxxxxxxx (Address)
2023-01-25 19:32:15,778 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:32:15,778 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  12.00

For a full sample of the documentation and to view a short tutorial, please visit the
Avery Support page.
2023-01-25 19:32:15,779 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 12.00 For a full sample of the documentation and to view a short tutorial, please visit the Avery Support page.
2023-01-25 19:32:15,779 - __main__ - INFO - 96 - <module>() - Final prediction for document 40: {'company': 'Xxxxxx Ltd.', 'date': '12/31/2005', 'address': 'Xxxxxxxxxxxxxx, xxxxxxxxxxx (Address)', 'total': '12.00 For a full sample of the documentation and to view a short tutorial, please visit the Avery Support page.'}
2023-01-25 19:32:15,783 - __main__ - INFO - 92 - <module>() - Predicting document 41...
2023-01-25 19:32:22,564 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  Bar Wang Rice
Date of Receipt: 31-05-2018
Address of Company: Jalan Tampoi 7/4 Kawi
Total: 7.80
|<|stop key|>|

Output Example:
Bar Wang Rice
31-05-2018
Jalan Tampoi 7/4 Kawi
7.80
||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
2023-01-25 19:32:22,565 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:32:22,566 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:32:22,566 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Bar Wang Rice

2023-01-25 19:32:22,567 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Bar Wang Rice
2023-01-25 19:32:22,567 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:32:22,568 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  31-05-2018

2023-01-25 19:32:22,568 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 31-05-2018
2023-01-25 19:32:22,569 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:32:22,569 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Jalan Tampoi 7/4 Kawi

2023-01-25 19:32:22,569 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Jalan Tampoi 7/4 Kawi
2023-01-25 19:32:22,570 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:32:22,570 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  7.80
|<|stop key|>|

Output Example:
Bar Wang Rice
31-05-2018
Jalan Tampoi 7/4 Kawi
7.80
||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
2023-01-25 19:32:22,571 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 7.80 |<|stop key|>| Output Example: Bar Wang Rice 31-05-2018 Jalan Tampoi 7/4 Kawi 7.80 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
2023-01-25 19:32:22,571 - __main__ - INFO - 96 - <module>() - Final prediction for document 41: {'company': 'Bar Wang Rice', 'date': '31-05-2018', 'address': 'Jalan Tampoi 7/4 Kawi', 'total': '7.80 |<|stop key|>| Output Example: Bar Wang Rice 31-05-2018 Jalan Tampoi 7/4 Kawi 7.80 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||'}
2023-01-25 19:32:22,574 - __main__ - INFO - 92 - <module>() - Predicting document 42...
2023-01-25 19:32:24,947 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  Company Name
Date of Receipt: Date of Receipt
Address of Company: Address of Company
Total: Total
Company Website: URL of Company Website
2023-01-25 19:32:24,947 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:32:24,947 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:32:24,948 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Company Name

2023-01-25 19:32:24,948 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Company Name
2023-01-25 19:32:24,948 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:32:24,948 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Date of Receipt

2023-01-25 19:32:24,949 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Date of Receipt
2023-01-25 19:32:24,949 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:32:24,949 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Address of Company

2023-01-25 19:32:24,949 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Address of Company
2023-01-25 19:32:24,950 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:32:24,950 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Total
Company Website: URL of Company Website
2023-01-25 19:32:24,950 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Total Company Website: URL of Company Website
2023-01-25 19:32:24,950 - __main__ - INFO - 96 - <module>() - Final prediction for document 42: {'company': 'Company Name', 'date': 'Date of Receipt', 'address': 'Address of Company', 'total': 'Total Company Website: URL of Company Website'}
2023-01-25 19:32:24,952 - __main__ - INFO - 92 - <module>() - Predicting document 43...
2023-01-25 19:32:32,782 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:
Date of Receipt: 10/12/2017
Address of Company:
Total:

Key: Value
Supplier: YANG MING CHINESE RESTAURANT
Date of Receipt: 1/12/2017
Address of Company:
Total:

Key: Value
Supplier: CHIN HUI RESTAURANT
Date of Receipt: 9/9/2017
Address of Company:
Total:

PowerPoint - Catch and Return (Page 3 of 4)
2
LOT 1-3, SIRA ISLAND PRODUCE
2
2023-01-25 19:32:32,784 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:32:32,785 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:32:32,786 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:32:32,787 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:32:32,787 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:32:32,788 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  10/12/2017

2023-01-25 19:32:32,788 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 10/12/2017
2023-01-25 19:32:32,789 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:32:32,789 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:32:32,790 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:32:32,790 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:32:32,791 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

Key: Value
Supplier: YANG MING CHINESE RESTAURANT
Date of Receipt: 1/12/2017
Address of Company:

2023-01-25 19:32:32,792 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Key: Value Supplier: YANG MING CHINESE RESTAURANT Date of Receipt: 1/12/2017 Address of Company:
2023-01-25 19:32:32,792 - __main__ - INFO - 96 - <module>() - Final prediction for document 43: {'date': '10/12/2017', 'total': 'Key: Value Supplier: YANG MING CHINESE RESTAURANT Date of Receipt: 1/12/2017 Address of Company:'}
2023-01-25 19:32:32,795 - __main__ - INFO - 92 - <module>() - Predicting document 44...
2023-01-25 19:32:39,915 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  The name of the company or your own name
Date of Receipt: date of receipt of the goods
Address of Company: The address of the company
Total: Total value of goods sold

Print the output of the above script and post the output in the below answer box.
(Answer)

(Note: Use any text editor to prepare the script. The editor can be found at https://www.autohotkey.com/board/topic/148077-autohotkey-script-editor-for-windows/ .)

Test cases

Input

Output


2023-01-25 19:32:39,916 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:32:39,917 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:32:39,918 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  The name of the company or your own name

2023-01-25 19:32:39,919 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: The name of the company or your own name
2023-01-25 19:32:39,919 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:32:39,920 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  date of receipt of the goods

2023-01-25 19:32:39,921 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: date of receipt of the goods
2023-01-25 19:32:39,922 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:32:39,922 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  The address of the company

2023-01-25 19:32:39,923 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: The address of the company
2023-01-25 19:32:39,923 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:32:39,924 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Total value of goods sold

Print the output of the above script and post the output in the below answer box.
(Answer)

(Note: Use any text editor to prepare the script. The editor can be found at https://www.autohotkey.com/board/topic/148077-autohotkey-script-editor-for-windows/ .)

Test cases

Input

Output


2023-01-25 19:32:39,924 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Total value of goods sold Print the output of the above script and post the output in the below answer box. (Answer) (Note: Use any text editor to prepare the script. The editor can be found at https://www.autohotkey.com/board/topic/148077-autohotkey-script-editor-for-windows/ .) Test cases Input Output
2023-01-25 19:32:39,925 - __main__ - INFO - 96 - <module>() - Final prediction for document 44: {'company': 'The name of the company or your own name', 'date': 'date of receipt of the goods', 'address': 'The address of the company', 'total': 'Total value of goods sold Print the output of the above script and post the output in the below answer box. (Answer) (Note: Use any text editor to prepare the script. The editor can be found at https://www.autohotkey.com/board/topic/148077-autohotkey-script-editor-for-windows/ .) Test cases Input Output'}
2023-01-25 19:32:39,928 - __main__ - INFO - 92 - <module>() - Predicting document 45...
2023-01-25 19:32:47,680 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  LITTLE GIRL
Date of Receipt: 01/06/2017
Address of Company: JALAN TEH MENGUNG, NO. 1, 9, BANDAR MAHKOTA CHERAS, SEKSYEN 9, KL, 42290, KUALA LUMPUR
Total: 1.00
Total (excluding GST):
0.00
Total (including GST):
1.00
Excl. GST:
0.00
Incl. GST:
1.00
Invoice Sum:
1.00
"

The code is
2023-01-25 19:32:47,681 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:32:47,682 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:32:47,683 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  LITTLE GIRL

2023-01-25 19:32:47,684 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: LITTLE GIRL
2023-01-25 19:32:47,684 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:32:47,685 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  01/06/2017

2023-01-25 19:32:47,685 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 01/06/2017
2023-01-25 19:32:47,686 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:32:47,686 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  JALAN TEH MENGUNG, NO. 1, 9, BANDAR MAHKOTA CHERAS, SEKSYEN 9, KL, 42290, KUALA LUMPUR

2023-01-25 19:32:47,687 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: JALAN TEH MENGUNG, NO. 1, 9, BANDAR MAHKOTA CHERAS, SEKSYEN 9, KL, 42290, KUALA LUMPUR
2023-01-25 19:32:47,688 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:32:47,688 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  1.00
Total (excluding GST):
0.00
Total (including GST):
1.00
Excl. GST:
0.00
Incl. GST:
1.00
Invoice Sum:
1.00
"

The code is
2023-01-25 19:32:47,689 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 1.00 Total (excluding GST): 0.00 Total (including GST): 1.00 Excl. GST: 0.00 Incl. GST: 1.00 Invoice Sum: 1.00 " The code is
2023-01-25 19:32:47,690 - __main__ - INFO - 96 - <module>() - Final prediction for document 45: {'company': 'LITTLE GIRL', 'date': '01/06/2017', 'address': 'JALAN TEH MENGUNG, NO. 1, 9, BANDAR MAHKOTA CHERAS, SEKSYEN 9, KL, 42290, KUALA LUMPUR', 'total': '1.00 Total (excluding GST): 0.00 Total (including GST): 1.00 Excl. GST: 0.00 Incl. GST: 1.00 Invoice Sum: 1.00 " The code is'}
2023-01-25 19:32:47,693 - __main__ - INFO - 92 - <module>() - Predicting document 46...
2023-01-25 19:32:49,336 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:
Date of Receipt:
Address of Company:
Total:
Total Sales Value:
2023-01-25 19:32:49,338 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:32:49,339 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:32:49,339 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:32:49,340 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:32:49,341 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:32:49,341 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:32:49,342 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:32:49,343 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:32:49,343 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:32:49,344 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:32:49,344 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:32:49,345 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:
Total Sales Value:
2023-01-25 19:32:49,346 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Total Sales Value:
2023-01-25 19:32:49,346 - __main__ - INFO - 96 - <module>() - Final prediction for document 46: {'total': 'Total Sales Value:'}
2023-01-25 19:32:49,350 - __main__ - INFO - 92 - <module>() - Predicting document 47...
2023-01-25 19:32:52,862 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  PDR. RANCHOR
Date of Receipt: 02/06/2014
Address of Company: 1-2 Jalan Bandar Tebu Jaya, 46100, Kuching, Sarawak, MALAYSIA
Total:
2023-01-25 19:32:52,863 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:32:52,866 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:32:52,867 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  PDR. RANCHOR

2023-01-25 19:32:52,868 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: PDR. RANCHOR
2023-01-25 19:32:52,868 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:32:52,869 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  02/06/2014

2023-01-25 19:32:52,869 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 02/06/2014
2023-01-25 19:32:52,870 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:32:52,871 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  1-2 Jalan Bandar Tebu Jaya, 46100, Kuching, Sarawak, MALAYSIA

2023-01-25 19:32:52,871 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 1-2 Jalan Bandar Tebu Jaya, 46100, Kuching, Sarawak, MALAYSIA
2023-01-25 19:32:52,872 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:32:52,872 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:
2023-01-25 19:32:52,877 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:32:52,878 - __main__ - INFO - 96 - <module>() - Final prediction for document 47: {'company': 'PDR. RANCHOR', 'date': '02/06/2014', 'address': '1-2 Jalan Bandar Tebu Jaya, 46100, Kuching, Sarawak, MALAYSIA'}
2023-01-25 19:32:52,883 - __main__ - INFO - 92 - <module>() - Predicting document 48...
2023-01-25 19:32:59,907 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  Jaya Prakash LNG Sdn. Bhd.
Date of Receipt: 03/02/2018 10:21:24 AM
Address of Company: LEMBANG
Total: 64490.00

Question 2:

You will receive an Excel file containing the details of the customer. Extract "Company Name", "Date of Receipt", "Address of Company", "Total", "<|stop key|>" from the Excel file. If you can't find a key-value pair in the document set the value to "null".

A:

Here is an example of
2023-01-25 19:32:59,909 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:32:59,909 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:32:59,910 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Jaya Prakash LNG Sdn. Bhd.

2023-01-25 19:32:59,911 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Jaya Prakash LNG Sdn. Bhd.
2023-01-25 19:32:59,911 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:32:59,912 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  03/02/2018 10:21:24 AM

2023-01-25 19:32:59,912 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 03/02/2018 10:21:24 AM
2023-01-25 19:32:59,913 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:32:59,914 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  LEMBANG

2023-01-25 19:32:59,914 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: LEMBANG
2023-01-25 19:32:59,915 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:32:59,915 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  64490.00

Question 2:

You will receive an Excel file containing the details of the customer. Extract "Company Name", "Date of Receipt", "Address of Company", "Total", "<|stop key|>" from the Excel file. If you can't find a key-value pair in the document set the value to "null".

A:

Here is an example of
2023-01-25 19:32:59,916 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 64490.00 Question 2: You will receive an Excel file containing the details of the customer. Extract "Company Name", "Date of Receipt", "Address of Company", "Total", "<|stop key|>" from the Excel file. If you can't find a key-value pair in the document set the value to "null". A: Here is an example of
2023-01-25 19:32:59,916 - __main__ - INFO - 96 - <module>() - Final prediction for document 48: {'company': 'Jaya Prakash LNG Sdn. Bhd.', 'date': '03/02/2018 10:21:24 AM', 'address': 'LEMBANG', 'total': '64490.00 Question 2: You will receive an Excel file containing the details of the customer. Extract "Company Name", "Date of Receipt", "Address of Company", "Total", "<|stop key|>" from the Excel file. If you can\'t find a key-value pair in the document set the value to "null". A: Here is an example of'}
2023-01-25 19:32:59,920 - __main__ - INFO - 92 - <module>() - Predicting document 49...
2023-01-25 19:33:07,149 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  <|stop key|>
Date of Receipt: <|stop key|>
Address of Company: <|stop key|>
Total: <|stop key|>

You can specify more than one key for the value.

For example, you may have to specify "Company Name" and "Date of Receipt" for the total amount.

Please click the below link to get the document.
http://www.onlineconvert.com/convert/convert_text.aspx?text=%22Company+Name%22+%2B+%22Date+of+Receipt
2023-01-25 19:33:07,150 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:33:07,151 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:33:07,152 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  <|stop key|>

2023-01-25 19:33:07,152 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: <|stop key|>
2023-01-25 19:33:07,153 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:33:07,153 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  <|stop key|>

2023-01-25 19:33:07,154 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: <|stop key|>
2023-01-25 19:33:07,154 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:33:07,155 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  <|stop key|>

2023-01-25 19:33:07,155 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: <|stop key|>
2023-01-25 19:33:07,156 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:33:07,156 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  <|stop key|>

You can specify more than one key for the value.

For example, you may have to specify "Company Name" and "Date of Receipt" for the total amount.

Please click the below link to get the document.
http://www.onlineconvert.com/convert/convert_text.aspx?text=%22Company+Name%22+%2B+%22Date+of+Receipt
2023-01-25 19:33:07,157 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: <|stop key|> You can specify more than one key for the value. For example, you may have to specify "Company Name" and "Date of Receipt" for the total amount. Please click the below link to get the document. http://www.onlineconvert.com/convert/convert_text.aspx?text=%22Company+Name%22+%2B+%22Date+of+Receipt
2023-01-25 19:33:07,158 - __main__ - INFO - 96 - <module>() - Final prediction for document 49: {'company': '<|stop key|>', 'date': '<|stop key|>', 'address': '<|stop key|>', 'total': '<|stop key|> You can specify more than one key for the value. For example, you may have to specify "Company Name" and "Date of Receipt" for the total amount. Please click the below link to get the document. http://www.onlineconvert.com/convert/convert_text.aspx?text=%22Company+Name%22+%2B+%22Date+of+Receipt'}
2023-01-25 19:33:07,160 - __main__ - INFO - 92 - <module>() - Predicting document 50...
2023-01-25 19:33:14,263 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:
Date of Receipt:
Address of Company:
Total:

Output:

|Company Name|Date of Receipt|Address of Company|Total|
|------------|--------------|-----------------|-----|
|Company 1|2019-03-16|123 Street A|$22.25|
|Company 2|2019-02-20|123 Street B|$14.20|
|Company 3|2019-03-21|123 Street A|$23.50|
|Company 4|2019-02-13|123 Street B|$12.30|
|Company
2023-01-25 19:33:14,266 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:33:14,267 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:33:14,269 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:33:14,269 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:33:14,270 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:33:14,270 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:33:14,271 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:33:14,271 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:33:14,272 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:33:14,272 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:33:14,273 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:33:14,273 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

Output:

|Company Name|Date of Receipt|Address of Company|Total|
|------------|--------------|-----------------|-----|
|Company 1|2019-03-16|123 Street A|$22.25|
|Company 2|2019-02-20|123 Street B|$14.20|
|Company 3|2019-03-21|123 Street A|$23.50|
|Company 4|2019-02-13|123 Street B|$12.30|
|Company
2023-01-25 19:33:14,274 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Output: |Company Name|Date of Receipt|Address of Company|Total| |------------|--------------|-----------------|-----| |Company 1|2019-03-16|123 Street A|$22.25| |Company 2|2019-02-20|123 Street B|$14.20| |Company 3|2019-03-21|123 Street A|$23.50| |Company 4|2019-02-13|123 Street B|$12.30| |Company
2023-01-25 19:33:14,274 - __main__ - INFO - 96 - <module>() - Final prediction for document 50: {'total': 'Output: |Company Name|Date of Receipt|Address of Company|Total| |------------|--------------|-----------------|-----| |Company 1|2019-03-16|123 Street A|$22.25| |Company 2|2019-02-20|123 Street B|$14.20| |Company 3|2019-03-21|123 Street A|$23.50| |Company 4|2019-02-13|123 Street B|$12.30| |Company'}
2023-01-25 19:33:14,280 - __main__ - INFO - 92 - <module>() - Predicting document 51...
2023-01-25 19:33:21,405 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  Kedai Ubat Runcit Hong Ning SDN. BHD.
Date of Receipt: 02/01/16 11:41:47 AM
Address of Company: Jalan Lang Kuning
Total: SR

A:

You are almost there. You need a while loop and to put the values into a list so that you can work on them:
key = []
text = []

while True:
    key = input.next().split()
    text = input.next().split()
    break

Then, for each row of the file, you
2023-01-25 19:33:21,406 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:33:21,406 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:33:21,406 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Kedai Ubat Runcit Hong Ning SDN. BHD.

2023-01-25 19:33:21,406 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Kedai Ubat Runcit Hong Ning SDN. BHD.
2023-01-25 19:33:21,406 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:33:21,407 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  02/01/16 11:41:47 AM

2023-01-25 19:33:21,407 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 02/01/16 11:41:47 AM
2023-01-25 19:33:21,407 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:33:21,407 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Jalan Lang Kuning

2023-01-25 19:33:21,408 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Jalan Lang Kuning
2023-01-25 19:33:21,408 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:33:21,408 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  SR

A:

You are almost there. You need a while loop and to put the values into a list so that you can work on them:
key = []
text = []

while True:
    key = input.next().split()
    text = input.next().split()
    break

Then, for each row of the file, you
2023-01-25 19:33:21,408 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: SR A: You are almost there. You need a while loop and to put the values into a list so that you can work on them: key = [] text = [] while True:   key = input.next().split()   text = input.next().split()   break Then, for each row of the file, you
2023-01-25 19:33:21,409 - __main__ - INFO - 96 - <module>() - Final prediction for document 51: {'company': 'Kedai Ubat Runcit Hong Ning SDN. BHD.', 'date': '02/01/16 11:41:47 AM', 'address': 'Jalan Lang Kuning', 'total': 'SR A: You are almost there. You need a while loop and to put the values into a list so that you can work on them: key = [] text = [] while True:   key = input.next().split()   text = input.next().split()   break Then, for each row of the file, you'}
2023-01-25 19:33:21,410 - __main__ - INFO - 92 - <module>() - Predicting document 52...
2023-01-25 19:33:26,026 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  SDN.BHD
Date of Receipt: 31/05/2018 12:42:01 PM
Address of Company: Jalan 12/1, Lorong 1 Utama, Seri Kembangan,
Kuala Lumpur, 50500, Kedah, Malaysia
Total: 2.99
2023-01-25 19:33:26,028 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:33:26,028 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:33:26,029 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  SDN.BHD

2023-01-25 19:33:26,029 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: SDN.BHD
2023-01-25 19:33:26,030 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:33:26,030 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  31/05/2018 12:42:01 PM

2023-01-25 19:33:26,030 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 31/05/2018 12:42:01 PM
2023-01-25 19:33:26,030 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:33:26,031 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Jalan 12/1, Lorong 1 Utama, Seri Kembangan,
Kuala Lumpur, 50500, Kedah, Malaysia

2023-01-25 19:33:26,031 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Jalan 12/1, Lorong 1 Utama, Seri Kembangan, Kuala Lumpur, 50500, Kedah, Malaysia
2023-01-25 19:33:26,031 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:33:26,032 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  2.99
2023-01-25 19:33:26,032 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 2.99
2023-01-25 19:33:26,032 - __main__ - INFO - 96 - <module>() - Final prediction for document 52: {'company': 'SDN.BHD', 'date': '31/05/2018 12:42:01 PM', 'address': 'Jalan 12/1, Lorong 1 Utama, Seri Kembangan, Kuala Lumpur, 50500, Kedah, Malaysia', 'total': '2.99'}
2023-01-25 19:33:26,034 - __main__ - INFO - 92 - <module>() - Predicting document 53...
2023-01-25 19:33:29,262 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  Siti Khadijah Sdn. Bhd.
Date of Receipt: 2018-06-25
Address of Company: Taman Bukit Setapak
Total: 5.50
2023-01-25 19:33:29,263 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:33:29,263 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:33:29,263 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Siti Khadijah Sdn. Bhd.

2023-01-25 19:33:29,263 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Siti Khadijah Sdn. Bhd.
2023-01-25 19:33:29,264 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:33:29,264 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  2018-06-25

2023-01-25 19:33:29,264 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 2018-06-25
2023-01-25 19:33:29,265 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:33:29,265 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Taman Bukit Setapak

2023-01-25 19:33:29,265 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Taman Bukit Setapak
2023-01-25 19:33:29,266 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:33:29,266 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  5.50
2023-01-25 19:33:29,266 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 5.50
2023-01-25 19:33:29,266 - __main__ - INFO - 96 - <module>() - Final prediction for document 53: {'company': 'Siti Khadijah Sdn. Bhd.', 'date': '2018-06-25', 'address': 'Taman Bukit Setapak', 'total': '5.50'}
2023-01-25 19:33:29,268 - __main__ - INFO - 92 - <module>() - Predicting document 54...
2023-01-25 19:33:32,086 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:
Date of Receipt:
Address of Company:
Total:
<>

Please email me the details of the purchase order if you would like to pay by cash. Otherwise, please bank in the payment.
2023-01-25 19:33:32,088 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:33:32,088 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:33:32,089 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:33:32,089 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:33:32,089 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:33:32,090 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:33:32,090 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:33:32,090 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:33:32,090 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:33:32,091 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:33:32,091 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:33:32,091 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:
<>

Please email me the details of the purchase order if you would like to pay by cash. Otherwise, please bank in the payment.
2023-01-25 19:33:32,092 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: <> Please email me the details of the purchase order if you would like to pay by cash. Otherwise, please bank in the payment.
2023-01-25 19:33:32,092 - __main__ - INFO - 96 - <module>() - Final prediction for document 54: {'total': '<> Please email me the details of the purchase order if you would like to pay by cash. Otherwise, please bank in the payment.'}
2023-01-25 19:33:32,094 - __main__ - INFO - 92 - <module>() - Predicting document 55...
2023-01-25 19:33:39,743 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:
Date of Receipt: 09/02/2020
Address of Company: 2A, Jalan Sembilang, Pudu Rekreasi, Cheras, 63009, Kuala Lumpur
Total: 7.20
Total (Excluding GST):
6.81
GST Payable (6%): 0.39
Total (Inclusive of GST): 7.20

This data will be used to calculate GST payable and refundable by company in 6% tax rate. You must have the data of GST payable and GST refund. Please check previous records and adjust the GST
2023-01-25 19:33:39,744 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:33:39,744 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:33:39,744 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:33:39,745 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:33:39,745 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:33:39,745 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  09/02/2020

2023-01-25 19:33:39,745 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 09/02/2020
2023-01-25 19:33:39,746 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:33:39,746 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  2A, Jalan Sembilang, Pudu Rekreasi, Cheras, 63009, Kuala Lumpur

2023-01-25 19:33:39,746 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 2A, Jalan Sembilang, Pudu Rekreasi, Cheras, 63009, Kuala Lumpur
2023-01-25 19:33:39,746 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:33:39,746 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  7.20
Total (Excluding GST):
6.81
GST Payable (6%): 0.39
Total (Inclusive of GST): 7.20

This data will be used to calculate GST payable and refundable by company in 6% tax rate. You must have the data of GST payable and GST refund. Please check previous records and adjust the GST
2023-01-25 19:33:39,747 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 7.20 Total (Excluding GST): 6.81 GST Payable (6%): 0.39 Total (Inclusive of GST): 7.20 This data will be used to calculate GST payable and refundable by company in 6% tax rate. You must have the data of GST payable and GST refund. Please check previous records and adjust the GST
2023-01-25 19:33:39,747 - __main__ - INFO - 96 - <module>() - Final prediction for document 55: {'date': '09/02/2020', 'address': '2A, Jalan Sembilang, Pudu Rekreasi, Cheras, 63009, Kuala Lumpur', 'total': '7.20 Total (Excluding GST): 6.81 GST Payable (6%): 0.39 Total (Inclusive of GST): 7.20 This data will be used to calculate GST payable and refundable by company in 6% tax rate. You must have the data of GST payable and GST refund. Please check previous records and adjust the GST'}
2023-01-25 19:33:39,748 - __main__ - INFO - 92 - <module>() - Predicting document 56...
2023-01-25 19:33:41,806 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:
Date of Receipt:
Address of Company:
Total:
2023-01-25 19:33:41,807 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:33:41,807 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:33:41,807 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:33:41,807 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:33:41,807 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:33:41,807 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:33:41,808 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:33:41,808 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:33:41,808 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:33:41,808 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:33:41,808 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:33:41,808 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:
2023-01-25 19:33:41,808 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:33:41,809 - __main__ - INFO - 96 - <module>() - Final prediction for document 56: {}
2023-01-25 19:33:41,809 - __main__ - INFO - 92 - <module>() - Predicting document 57...
2023-01-25 19:33:46,048 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  null
Date of Receipt: 21-03-2018 11:42:20
Address of Company: 2 Jalan Temenggung 19/9, Bandar Mahkota Cheras 43200 Cheras Selangor, Selangor
Total: 1.96
[This is an automated message. Apologies for any inconvenience.]
2023-01-25 19:33:46,049 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:33:46,050 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:33:46,050 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  null

2023-01-25 19:33:46,051 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: null
2023-01-25 19:33:46,051 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:33:46,052 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  21-03-2018 11:42:20

2023-01-25 19:33:46,052 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 21-03-2018 11:42:20
2023-01-25 19:33:46,053 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:33:46,054 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  2 Jalan Temenggung 19/9, Bandar Mahkota Cheras 43200 Cheras Selangor, Selangor

2023-01-25 19:33:46,054 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 2 Jalan Temenggung 19/9, Bandar Mahkota Cheras 43200 Cheras Selangor, Selangor
2023-01-25 19:33:46,055 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:33:46,055 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  1.96
[This is an automated message. Apologies for any inconvenience.]
2023-01-25 19:33:46,056 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 1.96 [This is an automated message. Apologies for any inconvenience.]
2023-01-25 19:33:46,056 - __main__ - INFO - 96 - <module>() - Final prediction for document 57: {'date': '21-03-2018 11:42:20', 'address': '2 Jalan Temenggung 19/9, Bandar Mahkota Cheras 43200 Cheras Selangor, Selangor', 'total': '1.96 [This is an automated message. Apologies for any inconvenience.]'}
2023-01-25 19:33:46,060 - __main__ - INFO - 92 - <module>() - Predicting document 58...
2023-01-25 19:33:53,399 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  JVIVOPAC MARKETING SDN BHD
Date of Receipt: 14 JALAN MANIS 4 TAMAN SEGAR 56100 KL
Total: 54.50

Extract "Company Name", "Date of Receipt", "Address of Company", "Total", "<|stop key|>" from the document above. If you can't find a key-value pair in the document set the value to "null".

Key: Value
Company Name: JVIVOPAC MARKETING SDN BHD
Date of Receipt: 14 JALAN MANIS 4 T
2023-01-25 19:33:53,404 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:33:53,404 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:33:53,405 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  JVIVOPAC MARKETING SDN BHD

2023-01-25 19:33:53,405 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: JVIVOPAC MARKETING SDN BHD
2023-01-25 19:33:53,405 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:33:53,406 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  14 JALAN MANIS 4 TAMAN SEGAR 56100 KL

2023-01-25 19:33:53,406 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 14 JALAN MANIS 4 TAMAN SEGAR 56100 KL
2023-01-25 19:33:53,406 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:33:53,406 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:33:53,407 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  54.50

Extract "Company Name", "Date of Receipt", "Address of Company", "Total", "<|stop key|>" from the document above. If you can't find a key-value pair in the document set the value to "null".

Key: Value
Company Name: JVIVOPAC MARKETING SDN BHD
Date of Receipt: 14 JALAN MANIS 4 T
2023-01-25 19:33:53,407 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 54.50 Extract "Company Name", "Date of Receipt", "Address of Company", "Total", "<|stop key|>" from the document above. If you can't find a key-value pair in the document set the value to "null". Key: Value Company Name: JVIVOPAC MARKETING SDN BHD Date of Receipt: 14 JALAN MANIS 4 T
2023-01-25 19:33:53,407 - __main__ - INFO - 96 - <module>() - Final prediction for document 58: {'company': 'JVIVOPAC MARKETING SDN BHD', 'date': '14 JALAN MANIS 4 TAMAN SEGAR 56100 KL', 'total': '54.50 Extract "Company Name", "Date of Receipt", "Address of Company", "Total", "<|stop key|>" from the document above. If you can\'t find a key-value pair in the document set the value to "null". Key: Value Company Name: JVIVOPAC MARKETING SDN BHD Date of Receipt: 14 JALAN MANIS 4 T'}
2023-01-25 19:33:53,412 - __main__ - INFO - 92 - <module>() - Predicting document 59...
2023-01-25 19:34:00,851 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  null
Date of Receipt: 01/08/2017
Address of Company: Lot 3, Jalan Pelabuhan 23/1, 40300 Shah Alam, Selangor
Total: 18.52
Invoice No. : 7801F714
Total Paid: 23.35
Customer's Copy:
Fax:03- 55423213
ISS

Output for "Company Name" = COMPANY NAME (i.e. GARDENIA BAKERIES SDN BHD (139386 X)
Output for "Date of Receipt" = 01/08/2017
2023-01-25 19:34:00,852 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:34:00,853 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:34:00,853 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  null

2023-01-25 19:34:00,854 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: null
2023-01-25 19:34:00,854 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:34:00,855 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  01/08/2017

2023-01-25 19:34:00,857 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 01/08/2017
2023-01-25 19:34:00,857 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:34:00,859 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Lot 3, Jalan Pelabuhan 23/1, 40300 Shah Alam, Selangor

2023-01-25 19:34:00,860 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Lot 3, Jalan Pelabuhan 23/1, 40300 Shah Alam, Selangor
2023-01-25 19:34:00,860 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:34:00,861 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  18.52
Invoice No. : 7801F714
Total Paid: 23.35
Customer's Copy:
Fax:03- 55423213
ISS

Output for "Company Name" = COMPANY NAME (i.e. GARDENIA BAKERIES SDN BHD (139386 X)
Output for "Date of Receipt" = 01/08/2017
2023-01-25 19:34:00,862 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 18.52 Invoice No. : 7801F714 Total Paid: 23.35 Customer's Copy: Fax:03- 55423213 ISS Output for "Company Name" = COMPANY NAME (i.e. GARDENIA BAKERIES SDN BHD (139386 X) Output for "Date of Receipt" = 01/08/2017
2023-01-25 19:34:00,862 - __main__ - INFO - 96 - <module>() - Final prediction for document 59: {'date': '01/08/2017', 'address': 'Lot 3, Jalan Pelabuhan 23/1, 40300 Shah Alam, Selangor', 'total': '18.52 Invoice No. : 7801F714 Total Paid: 23.35 Customer\'s Copy: Fax:03- 55423213 ISS Output for "Company Name" = COMPANY NAME (i.e. GARDENIA BAKERIES SDN BHD (139386 X) Output for "Date of Receipt" = 01/08/2017'}
2023-01-25 19:34:00,868 - __main__ - INFO - 92 - <module>() - Predicting document 60...
2023-01-25 19:34:08,458 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  VIVO
Date of Receipt: 21/6/2018 9:07:15 AM
Address of Company: BINTANG TOWN SENTUL
Total: 1203399.00
TOTAL TRANSACTION EXCLUDE TAX (GST)
<|Stop Key|>

Extract "Company Name", "Date of Receipt", "Address of Company", "Total", "<|stop key|>" from the document above. If you can't find a key-value pair in the document set the value to "null".

You can read your input either line by line or in
2023-01-25 19:34:08,459 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:34:08,460 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:34:08,461 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  VIVO

2023-01-25 19:34:08,461 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: VIVO
2023-01-25 19:34:08,461 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:34:08,462 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  21/6/2018 9:07:15 AM

2023-01-25 19:34:08,462 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 21/6/2018 9:07:15 AM
2023-01-25 19:34:08,463 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:34:08,463 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  BINTANG TOWN SENTUL

2023-01-25 19:34:08,463 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: BINTANG TOWN SENTUL
2023-01-25 19:34:08,464 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:34:08,464 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  1203399.00
TOTAL TRANSACTION EXCLUDE TAX (GST)
<|Stop Key|>

Extract "Company Name", "Date of Receipt", "Address of Company", "Total", "<|stop key|>" from the document above. If you can't find a key-value pair in the document set the value to "null".

You can read your input either line by line or in
2023-01-25 19:34:08,465 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 1203399.00 TOTAL TRANSACTION EXCLUDE TAX (GST) <|Stop Key|> Extract "Company Name", "Date of Receipt", "Address of Company", "Total", "<|stop key|>" from the document above. If you can't find a key-value pair in the document set the value to "null". You can read your input either line by line or in
2023-01-25 19:34:08,465 - __main__ - INFO - 96 - <module>() - Final prediction for document 60: {'company': 'VIVO', 'date': '21/6/2018 9:07:15 AM', 'address': 'BINTANG TOWN SENTUL', 'total': '1203399.00 TOTAL TRANSACTION EXCLUDE TAX (GST) <|Stop Key|> Extract "Company Name", "Date of Receipt", "Address of Company", "Total", "<|stop key|>" from the document above. If you can\'t find a key-value pair in the document set the value to "null". You can read your input either line by line or in'}
2023-01-25 19:34:08,468 - __main__ - INFO - 92 - <module>() - Predicting document 61...
2023-01-25 19:34:10,628 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:
Date of Receipt: 1/4/2018
Address of Company:
Total: 8.50
2023-01-25 19:34:10,630 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:34:10,631 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:34:10,632 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:34:10,632 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:34:10,633 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:34:10,634 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  1/4/2018

2023-01-25 19:34:10,634 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 1/4/2018
2023-01-25 19:34:10,635 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:34:10,635 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:34:10,636 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:34:10,637 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:34:10,637 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  8.50
2023-01-25 19:34:10,638 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 8.50
2023-01-25 19:34:10,638 - __main__ - INFO - 96 - <module>() - Final prediction for document 61: {'date': '1/4/2018', 'total': '8.50'}
2023-01-25 19:34:10,642 - __main__ - INFO - 92 - <module>() - Predicting document 62...
2023-01-25 19:34:17,842 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  Flower and Gifts Sdn Bhd
Date of Receipt: 16/04/2017
Address of Company: 1st Floor, Puchong Biz Centre
Total: RM
Flower and Gifts Sdn Bhd
1st Floor, Puchong Biz Centre
Petaling Jaya Selangor Darul Ehsan
Selangor, Malaysia

(This is for a test.)
This is the data for another test.
Here are the key values:
key: total
value: RM
company: Flower and Gifts Sdn Bhd
address: Pet
2023-01-25 19:34:17,845 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:34:17,846 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:34:17,846 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Flower and Gifts Sdn Bhd

2023-01-25 19:34:17,847 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Flower and Gifts Sdn Bhd
2023-01-25 19:34:17,848 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:34:17,849 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  16/04/2017

2023-01-25 19:34:17,849 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 16/04/2017
2023-01-25 19:34:17,850 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:34:17,850 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  1st Floor, Puchong Biz Centre

2023-01-25 19:34:17,851 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 1st Floor, Puchong Biz Centre
2023-01-25 19:34:17,851 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:34:17,851 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  RM
Flower and Gifts Sdn Bhd
1st Floor, Puchong Biz Centre
Petaling Jaya Selangor Darul Ehsan
Selangor, Malaysia

(This is for a test.)
This is the data for another test.
Here are the key values:
key: total
value: RM
company: Flower and Gifts Sdn Bhd
address: Pet
2023-01-25 19:34:17,852 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: RM Flower and Gifts Sdn Bhd 1st Floor, Puchong Biz Centre Petaling Jaya Selangor Darul Ehsan Selangor, Malaysia (This is for a test.) This is the data for another test. Here are the key values: key: total value: RM company: Flower and Gifts Sdn Bhd address: Pet
2023-01-25 19:34:17,852 - __main__ - INFO - 96 - <module>() - Final prediction for document 62: {'company': 'Flower and Gifts Sdn Bhd', 'date': '16/04/2017', 'address': '1st Floor, Puchong Biz Centre', 'total': 'RM Flower and Gifts Sdn Bhd 1st Floor, Puchong Biz Centre Petaling Jaya Selangor Darul Ehsan Selangor, Malaysia (This is for a test.) This is the data for another test. Here are the key values: key: total value: RM company: Flower and Gifts Sdn Bhd address: Pet'}
2023-01-25 19:34:17,856 - __main__ - INFO - 92 - <module>() - Predicting document 63...
2023-01-25 19:34:25,456 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  G.P.G & Co. Sdn. Bhd
Date of Receipt: 2016-09-07
Address of Company: PO Box 7
Total: 0.50

If you are unable to find a <key value> pair then create a header for Total: 0.50.

You can also do this in Excel if you want but it will be a long and messy way of doing it.

After you have done this, you have the data you need to pass to the report you want. Make a CSV and copy this into a new row. You can then run the program we
2023-01-25 19:34:25,456 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:34:25,456 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:34:25,457 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  G.P.G & Co. Sdn. Bhd

2023-01-25 19:34:25,457 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: G.P.G & Co. Sdn. Bhd
2023-01-25 19:34:25,457 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:34:25,457 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  2016-09-07

2023-01-25 19:34:25,458 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 2016-09-07
2023-01-25 19:34:25,458 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:34:25,458 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  PO Box 7

2023-01-25 19:34:25,458 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: PO Box 7
2023-01-25 19:34:25,458 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:34:25,458 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  0.50

If you are unable to find a <key value> pair then create a header for
2023-01-25 19:34:25,459 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 0.50 If you are unable to find a <key value> pair then create a header for
2023-01-25 19:34:25,459 - __main__ - INFO - 96 - <module>() - Final prediction for document 63: {'company': 'G.P.G & Co. Sdn. Bhd', 'date': '2016-09-07', 'address': 'PO Box 7', 'total': '0.50 If you are unable to find a <key value> pair then create a header for'}
2023-01-25 19:34:25,460 - __main__ - INFO - 92 - <module>() - Predicting document 64...
2023-01-25 19:34:32,486 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  <C# string>
Date of Receipt: <C# datetime>
Address of Company: <C# string>
Total: <C# decimal>

A:

You are getting this because the XML node is not found. You need to check whether you find some other node.
if you get 0 as the return value it means there is no such node. If there is more than 1 node it will print only 1st node.
In your case it is printing only 1st node as it was found.
Try this, it is printing all the nodes except for  node.

2023-01-25 19:34:32,488 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:34:32,489 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:34:32,490 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  <C# string>

2023-01-25 19:34:32,491 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: <C# string>
2023-01-25 19:34:32,491 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:34:32,492 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  <C# datetime>

2023-01-25 19:34:32,493 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: <C# datetime>
2023-01-25 19:34:32,493 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:34:32,494 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  <C# string>

2023-01-25 19:34:32,495 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: <C# string>
2023-01-25 19:34:32,495 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:34:32,496 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  <C# decimal>

A:

You are getting this because the XML node is not found. You need to check whether you find some other node.
if you get 0 as the return value it means there is no such node. If there is more than 1 node it will print only 1st node.
In your case it is printing only 1st node as it was found.
Try this, it is printing all the nodes except for  node.

2023-01-25 19:34:32,497 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: <C# decimal> A: You are getting this because the XML node is not found. You need to check whether you find some other node. if you get 0 as the return value it means there is no such node. If there is more than 1 node it will print only 1st node. In your case it is printing only 1st node as it was found. Try this, it is printing all the nodes except for node.
2023-01-25 19:34:32,497 - __main__ - INFO - 96 - <module>() - Final prediction for document 64: {'company': '<C# string>', 'date': '<C# datetime>', 'address': '<C# string>', 'total': '<C# decimal> A: You are getting this because the XML node is not found. You need to check whether you find some other node. if you get 0 as the return value it means there is no such node. If there is more than 1 node it will print only 1st node. In your case it is printing only 1st node as it was found. Try this, it is printing all the nodes except for node.'}
2023-01-25 19:34:32,501 - __main__ - INFO - 92 - <module>() - Predicting document 65...
2023-01-25 19:34:39,284 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  <COMPANY>
Address of Company: <STREET ADDRESS>
Tax Invoice Number: <INVOICE NUMBER>
Date Receipt: <YYYY/MM/DD>
Total Amount of Tax Invoice: <AMOUNT>
Tax Rate: <TAX-RATE>
Tax Paid: <TAX>
Tax Amount Paid: <TAX-AMOUNT>
Excise Amount: <EXCISE-AMOUNT>
VAT Amount: <VAT-AMOUNT>
Date of Excise / VAT Paid: <YY
2023-01-25 19:34:39,285 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:34:39,285 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:34:39,286 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  <COMPANY>

2023-01-25 19:34:39,286 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: <COMPANY>
2023-01-25 19:34:39,287 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:34:39,287 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:34:39,288 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  <STREET ADDRESS>
Tax Invoice Number: <INVOICE NUMBER>
Date Receipt: <YYYY/MM/DD>
Total Amount of Tax Invoice: <AMOUNT>
Tax Rate: <TAX-RATE>
Tax Paid: <TAX>
Tax Amount Paid: <TAX-AMOUNT>
Excise Amount: <EXCISE-AMOUNT>
VAT Amount: <VAT-AMOUNT>
Date of Excise / VAT Paid: <YY
2023-01-25 19:34:39,288 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: <STREET ADDRESS> Tax Invoice Number: <INVOICE NUMBER> Date Receipt: <YYYY/MM/DD> Total Amount of Tax Invoice: <AMOUNT> Tax Rate: <TAX-RATE> Tax Paid: <TAX> Tax Amount Paid: <TAX-AMOUNT> Excise Amount: <EXCISE-AMOUNT> VAT Amount: <VAT-AMOUNT> Date of Excise / VAT Paid: <YY
2023-01-25 19:34:39,289 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:34:39,289 - __main__ - INFO - 96 - <module>() - Final prediction for document 65: {'company': '<COMPANY>', 'address': '<STREET ADDRESS> Tax Invoice Number: <INVOICE NUMBER> Date Receipt: <YYYY/MM/DD> Total Amount of Tax Invoice: <AMOUNT> Tax Rate: <TAX-RATE> Tax Paid: <TAX> Tax Amount Paid: <TAX-AMOUNT> Excise Amount: <EXCISE-AMOUNT> VAT Amount: <VAT-AMOUNT> Date of Excise / VAT Paid: <YY'}
2023-01-25 19:34:39,293 - __main__ - INFO - 92 - <module>() - Predicting document 66...
2023-01-25 19:34:42,958 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:
Date of Receipt:
Address of Company:
Total:
Other Information:
Sale:

You can click on the [OK] button to save the document. Otherwise, you can click on [Cancel] to close the form without saving.
2023-01-25 19:34:42,959 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:34:42,960 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:34:42,961 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:34:42,961 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:34:42,962 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:34:42,962 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:34:42,963 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:34:42,963 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:34:42,964 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:34:42,965 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:34:42,966 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:34:42,966 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:
Other Information:
Sale:

You can click on the [OK] button to save the document. Otherwise, you can click on [Cancel] to close the form without saving.
2023-01-25 19:34:42,967 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Other Information: Sale: You can click on the [OK] button to save the document. Otherwise, you can click on [Cancel] to close the form without saving.
2023-01-25 19:34:42,967 - __main__ - INFO - 96 - <module>() - Final prediction for document 66: {'total': 'Other Information: Sale: You can click on the [OK] button to save the document. Otherwise, you can click on [Cancel] to close the form without saving.'}
2023-01-25 19:34:42,970 - __main__ - INFO - 92 - <module>() - Predicting document 67...
2023-01-25 19:34:47,376 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  Aeon Corporation
Date of Receipt: 2017-03-20
Address of Company: No. 8, Simpang 8, Jalan Duta,
55100 Kuala Lumpur
Total: 1,569,226.88
2023-01-25 19:34:47,378 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:34:47,378 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:34:47,379 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Aeon Corporation

2023-01-25 19:34:47,380 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Aeon Corporation
2023-01-25 19:34:47,381 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:34:47,381 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  2017-03-20

2023-01-25 19:34:47,382 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 2017-03-20
2023-01-25 19:34:47,382 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:34:47,383 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  No. 8, Simpang 8, Jalan Duta,
55100 Kuala Lumpur

2023-01-25 19:34:47,384 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: No. 8, Simpang 8, Jalan Duta, 55100 Kuala Lumpur
2023-01-25 19:34:47,384 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:34:47,385 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  1,569,226.88
2023-01-25 19:34:47,385 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 1,569,226.88
2023-01-25 19:34:47,386 - __main__ - INFO - 96 - <module>() - Final prediction for document 67: {'company': 'Aeon Corporation', 'date': '2017-03-20', 'address': 'No. 8, Simpang 8, Jalan Duta, 55100 Kuala Lumpur', 'total': '1,569,226.88'}
2023-01-25 19:34:47,389 - __main__ - INFO - 92 - <module>() - Predicting document 68...
2023-01-25 19:34:54,343 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  JUWITA WEDDINGS SDN BHD
Date of Receipt: 27-FEB-2017 00:00:00
Address of Company:
Total: 2.05

Key: Value
Company Name: JUWITA WEDDINGS SDN BHD
Date of Receipt: 27-FEB-2018 12:00:00
Address of Company:
Total: 4.12

Key: Value
Company Name: JUWITA WEDDINGS SDN BHD
Date of Receipt: 27-FEB-2018 16:37:04
Address of Company
2023-01-25 19:34:54,345 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:34:54,345 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:34:54,346 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  JUWITA WEDDINGS SDN BHD

2023-01-25 19:34:54,347 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: JUWITA WEDDINGS SDN BHD
2023-01-25 19:34:54,348 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:34:54,348 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  27-FEB-2017 00:00:00

2023-01-25 19:34:54,349 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 27-FEB-2017 00:00:00
2023-01-25 19:34:54,349 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:34:54,350 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:34:54,350 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:34:54,351 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:34:54,351 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  2.05

Key: Value
Company Name: JUWITA WEDDINGS SDN BHD
Date of Receipt: 27-FEB-2018 12:00:00
Address of Company:

2023-01-25 19:34:54,351 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 2.05 Key: Value Company Name: JUWITA WEDDINGS SDN BHD Date of Receipt: 27-FEB-2018 12:00:00 Address of Company:
2023-01-25 19:34:54,352 - __main__ - INFO - 96 - <module>() - Final prediction for document 68: {'company': 'JUWITA WEDDINGS SDN BHD', 'date': '27-FEB-2017 00:00:00', 'total': '2.05 Key: Value Company Name: JUWITA WEDDINGS SDN BHD Date of Receipt: 27-FEB-2018 12:00:00 Address of Company:'}
2023-01-25 19:34:54,355 - __main__ - INFO - 92 - <module>() - Predicting document 69...
2023-01-25 19:35:01,317 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  <.a.b.c.d.e.f>
Date of Receipt: <.a.b.c.d.e.f.g.h.i.j.k.l.m.n.o.p.q.r.s.t.u.v.w.x.y.z>
Address of Company: <.a.b.c.d.e.f.g.h.i.j.k.l.m.n.o.p.q.r.s.t.u.v.w.x
2023-01-25 19:35:01,318 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:35:01,318 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:35:01,318 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  <.a.b.c.d.e.f>

2023-01-25 19:35:01,319 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: <.a.b.c.d.e.f>
2023-01-25 19:35:01,319 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:35:01,320 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  <.a.b.c.d.e.f.g.h.i.j.k.l.m.n.o.p.q.r.s.t.u.v.w.x.y.z>

2023-01-25 19:35:01,320 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: <.a.b.c.d.e.f.g.h.i.j.k.l.m.n.o.p.q.r.s.t.u.v.w.x.y.z>
2023-01-25 19:35:01,320 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:35:01,321 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  <.a.b.c.d.e.f.g.h.i.j.k.l.m.n.o.p.q.r.s.t.u.v.w.x
2023-01-25 19:35:01,321 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: <.a.b.c.d.e.f.g.h.i.j.k.l.m.n.o.p.q.r.s.t.u.v.w.x
2023-01-25 19:35:01,322 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:35:01,322 - __main__ - INFO - 96 - <module>() - Final prediction for document 69: {'company': '<.a.b.c.d.e.f>', 'date': '<.a.b.c.d.e.f.g.h.i.j.k.l.m.n.o.p.q.r.s.t.u.v.w.x.y.z>', 'address': '<.a.b.c.d.e.f.g.h.i.j.k.l.m.n.o.p.q.r.s.t.u.v.w.x'}
2023-01-25 19:35:01,325 - __main__ - INFO - 92 - <module>() - Predicting document 70...
2023-01-25 19:35:08,027 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  Name of the company
Date of Receipt: Format date MM/DD/YYYY
Address of Company: Address of the company
Total: total amount paid

Convert the above data into a document object:

Create an instance of DocumentBuilder class and pass a StringReader as the document source. The value should be in HTML format, if it's not click here to learn how to convert HTML to a StringReader.

Pass the converted StringReader to the DocumentBuilder class.

The DocumentBuilder class has a method called Document build() that you can use to convert HTML to Document.

Create a
2023-01-25 19:35:08,028 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:35:08,028 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:35:08,029 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Name of the company

2023-01-25 19:35:08,029 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Name of the company
2023-01-25 19:35:08,029 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:35:08,030 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Format date MM/DD/YYYY

2023-01-25 19:35:08,030 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Format date MM/DD/YYYY
2023-01-25 19:35:08,030 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:35:08,031 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Address of the company

2023-01-25 19:35:08,032 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Address of the company
2023-01-25 19:35:08,032 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:35:08,033 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  total amount paid

Convert the above data into a document object:

Create an instance of DocumentBuilder class and pass a StringReader as the document source. The value should be in HTML format, if it's not click here to learn how to convert HTML to a StringReader.

Pass the converted StringReader to the DocumentBuilder class.

The DocumentBuilder class has a method called Document build() that you can use to convert HTML to Document.

Create a
2023-01-25 19:35:08,033 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: total amount paid Convert the above data into a document object: Create an instance of DocumentBuilder class and pass a StringReader as the document source. The value should be in HTML format, if it's not click here to learn how to convert HTML to a StringReader. Pass the converted StringReader to the DocumentBuilder class. The DocumentBuilder class has a method called Document build() that you can use to convert HTML to Document. Create a
2023-01-25 19:35:08,034 - __main__ - INFO - 96 - <module>() - Final prediction for document 70: {'company': 'Name of the company', 'date': 'Format date MM/DD/YYYY', 'address': 'Address of the company', 'total': "total amount paid Convert the above data into a document object: Create an instance of DocumentBuilder class and pass a StringReader as the document source. The value should be in HTML format, if it's not click here to learn how to convert HTML to a StringReader. Pass the converted StringReader to the DocumentBuilder class. The DocumentBuilder class has a method called Document build() that you can use to convert HTML to Document. Create a"}
2023-01-25 19:35:08,037 - __main__ - INFO - 92 - <module>() - Predicting document 71...
2023-01-25 19:35:15,690 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  Viva Pac Manufacturing Sdn Bhd (1070687-M)
Date of Receipt: 15/03/2014 08:12:03 PM
Address of Company: KG 8/6, Jalan Taman Segar 56100, Kuala Lumpur, Malaysia
Total: 2.55 KG

3. Output
Company Name: Viva Pac Manufacturing Sdn Bhd (1070687-M)
Date of Receipt: 15/03/2014 08:12:03 PM
Address of Company: KG 8/6, Jalan Taman Segar 56100
2023-01-25 19:35:15,692 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:35:15,692 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:35:15,693 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Viva Pac Manufacturing Sdn Bhd (1070687-M)

2023-01-25 19:35:15,694 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Viva Pac Manufacturing Sdn Bhd (1070687-M)
2023-01-25 19:35:15,694 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:35:15,695 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  15/03/2014 08:12:03 PM

2023-01-25 19:35:15,695 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 15/03/2014 08:12:03 PM
2023-01-25 19:35:15,696 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:35:15,697 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  KG 8/6, Jalan Taman Segar 56100, Kuala Lumpur, Malaysia

2023-01-25 19:35:15,697 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: KG 8/6, Jalan Taman Segar 56100, Kuala Lumpur, Malaysia
2023-01-25 19:35:15,697 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:35:15,698 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  2.55 KG

3. Output
Company Name: Viva Pac Manufacturing Sdn Bhd (1070687-M)
Date of Receipt: 15/03/2014 08:12:03 PM
Address of Company: KG 8/6, Jalan Taman Segar 56100
2023-01-25 19:35:15,698 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 2.55 KG 3. Output Company Name: Viva Pac Manufacturing Sdn Bhd (1070687-M) Date of Receipt: 15/03/2014 08:12:03 PM Address of Company: KG 8/6, Jalan Taman Segar 56100
2023-01-25 19:35:15,699 - __main__ - INFO - 96 - <module>() - Final prediction for document 71: {'company': 'Viva Pac Manufacturing Sdn Bhd (1070687-M)', 'date': '15/03/2014 08:12:03 PM', 'address': 'KG 8/6, Jalan Taman Segar 56100, Kuala Lumpur, Malaysia', 'total': '2.55 KG 3. Output Company Name: Viva Pac Manufacturing Sdn Bhd (1070687-M) Date of Receipt: 15/03/2014 08:12:03 PM Address of Company: KG 8/6, Jalan Taman Segar 56100'}
2023-01-25 19:35:15,701 - __main__ - INFO - 92 - <module>() - Predicting document 72...
2023-01-25 19:35:19,561 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  Name of the company/organization
Date of Receipt: Date of receipt of goods/services by the company/organization
Address of Company: Address of the company/organization
Total: The total amount of the transaction
2023-01-25 19:35:19,562 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:35:19,563 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:35:19,564 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Name of the company/organization

2023-01-25 19:35:19,564 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Name of the company/organization
2023-01-25 19:35:19,565 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:35:19,565 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Date of receipt of goods/services by the company/organization

2023-01-25 19:35:19,565 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Date of receipt of goods/services by the company/organization
2023-01-25 19:35:19,566 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:35:19,567 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Address of the company/organization

2023-01-25 19:35:19,567 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Address of the company/organization
2023-01-25 19:35:19,568 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:35:19,568 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  The total amount of the transaction
2023-01-25 19:35:19,568 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: The total amount of the transaction
2023-01-25 19:35:19,569 - __main__ - INFO - 96 - <module>() - Final prediction for document 72: {'company': 'Name of the company/organization', 'date': 'Date of receipt of goods/services by the company/organization', 'address': 'Address of the company/organization', 'total': 'The total amount of the transaction'}
2023-01-25 19:35:19,571 - __main__ - INFO - 92 - <module>() - Predicting document 73...
2023-01-25 19:35:22,354 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  (Input Company Name)
Date of Receipt: (Input Date of Receipt)
Address of Company: (Input Address of Company)
Total: (Input Total)
2023-01-25 19:35:22,355 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:35:22,355 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:35:22,356 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  (Input Company Name)

2023-01-25 19:35:22,356 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: (Input Company Name)
2023-01-25 19:35:22,356 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:35:22,356 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  (Input Date of Receipt)

2023-01-25 19:35:22,357 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: (Input Date of Receipt)
2023-01-25 19:35:22,357 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:35:22,357 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  (Input Address of Company)

2023-01-25 19:35:22,357 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: (Input Address of Company)
2023-01-25 19:35:22,357 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:35:22,358 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  (Input Total)
2023-01-25 19:35:22,358 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: (Input Total)
2023-01-25 19:35:22,358 - __main__ - INFO - 96 - <module>() - Final prediction for document 73: {'company': '(Input Company Name)', 'date': '(Input Date of Receipt)', 'address': '(Input Address of Company)', 'total': '(Input Total)'}
2023-01-25 19:35:22,360 - __main__ - INFO - 92 - <module>() - Predicting document 74...
2023-01-25 19:35:30,002 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  HONDA SELANGOR
Date of Receipt: 14:15:28, 23 February 2017
Address of Company: 2K
Total: 4.75
(null)

Question. How can I get the name from the key "Address of Company"?

Solution: Hint: In order to get the name from the key "Address of Company" in the text above you must use the function ExtractValue_2("Address of Company", "Value"). So, we have:

ExtractValue_2("Address of Company", "Value")

This function allows you to extract a
2023-01-25 19:35:30,004 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:35:30,004 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:35:30,005 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  HONDA SELANGOR

2023-01-25 19:35:30,005 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: HONDA SELANGOR
2023-01-25 19:35:30,006 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:35:30,006 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  14:15:28, 23 February 2017

2023-01-25 19:35:30,007 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 14:15:28, 23 February 2017
2023-01-25 19:35:30,007 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:35:30,008 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  2K

2023-01-25 19:35:30,018 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 2K
2023-01-25 19:35:30,019 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:35:30,020 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  4.75
(null)

Question. How can I get the name from the key "Address of Company"?

Solution: Hint: In order to get the name from the key "Address of Company" in the text above you must use the function ExtractValue_2("Address of Company", "Value"). So, we have:

ExtractValue_2("Address of Company", "Value")

This function allows you to extract a
2023-01-25 19:35:30,020 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 4.75 (null) Question. How can I get the name from the key "Address of Company"? Solution: Hint: In order to get the name from the key "Address of Company" in the text above you must use the function ExtractValue_2("Address of Company", "Value"). So, we have: ExtractValue_2("Address of Company", "Value") This function allows you to extract a
2023-01-25 19:35:30,021 - __main__ - INFO - 96 - <module>() - Final prediction for document 74: {'company': 'HONDA SELANGOR', 'date': '14:15:28, 23 February 2017', 'address': '2K', 'total': '4.75 (null) Question. How can I get the name from the key "Address of Company"? Solution: Hint: In order to get the name from the key "Address of Company" in the text above you must use the function ExtractValue_2("Address of Company", "Value"). So, we have: ExtractValue_2("Address of Company", "Value") This function allows you to extract a'}
2023-01-25 19:35:30,023 - __main__ - INFO - 92 - <module>() - Predicting document 75...
2023-01-25 19:35:33,323 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  ABC
Date of Receipt: 12/05/2018
Address of Company: 12/05/2018 12:15
Total: 20.10
|stop key|: 50

The output should be 20.10. Here's a visual representation of what I'm looking for.
2023-01-25 19:35:33,324 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:35:33,325 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:35:33,326 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  ABC

2023-01-25 19:35:33,326 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: ABC
2023-01-25 19:35:33,327 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:35:33,327 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  12/05/2018

2023-01-25 19:35:33,328 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 12/05/2018
2023-01-25 19:35:33,328 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:35:33,329 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  12/05/2018 12:15

2023-01-25 19:35:33,329 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 12/05/2018 12:15
2023-01-25 19:35:33,330 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:35:33,330 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  20.10
|stop key|: 50

The output should be 20.10. Here's a visual representation of what I'm looking for.
2023-01-25 19:35:33,331 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 20.10 |stop key|: 50 The output should be 20.10. Here's a visual representation of what I'm looking for.
2023-01-25 19:35:33,331 - __main__ - INFO - 96 - <module>() - Final prediction for document 75: {'company': 'ABC', 'date': '12/05/2018', 'address': '12/05/2018 12:15', 'total': "20.10 |stop key|: 50 The output should be 20.10. Here's a visual representation of what I'm looking for."}
2023-01-25 19:35:33,335 - __main__ - INFO - 92 - <module>() - Predicting document 76...
2023-01-25 19:35:40,462 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  ABC Corporation
Date of Receipt: 12-16-18
Address of Company: 123 Street, Cityname, State, Zip
Total: 1.55
ABC Corporation: ABC Corporation
12-16-18: 123 Street, Cityname, State, Zip

Key: Value
Company Name: ABCD Company Inc
Date of Receipt: 10-30-15
Address of Company: 1235 Main Street, Cityname, State, Zip
Total: 1.56
ABCD Company Inc: ABCD Company Inc
10-30-15: 1235 Main Street, Cityname, State,
2023-01-25 19:35:40,463 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:35:40,463 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:35:40,464 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  ABC Corporation

2023-01-25 19:35:40,464 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: ABC Corporation
2023-01-25 19:35:40,465 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:35:40,466 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  12-16-18

2023-01-25 19:35:40,467 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 12-16-18
2023-01-25 19:35:40,467 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:35:40,468 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  123 Street, Cityname, State, Zip

2023-01-25 19:35:40,469 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 123 Street, Cityname, State, Zip
2023-01-25 19:35:40,469 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:35:40,469 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  1.55
ABC Corporation: ABC Corporation
12-16-18: 123 Street, Cityname, State, Zip

Key: Value
Company Name: ABCD Company Inc
Date of Receipt: 10-30-15
Address of Company: 1235 Main Street, Cityname, State, Zip

2023-01-25 19:35:40,470 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 1.55 ABC Corporation: ABC Corporation 12-16-18: 123 Street, Cityname, State, Zip Key: Value Company Name: ABCD Company Inc Date of Receipt: 10-30-15 Address of Company: 1235 Main Street, Cityname, State, Zip
2023-01-25 19:35:40,470 - __main__ - INFO - 96 - <module>() - Final prediction for document 76: {'company': 'ABC Corporation', 'date': '12-16-18', 'address': '123 Street, Cityname, State, Zip', 'total': '1.55 ABC Corporation: ABC Corporation 12-16-18: 123 Street, Cityname, State, Zip Key: Value Company Name: ABCD Company Inc Date of Receipt: 10-30-15 Address of Company: 1235 Main Street, Cityname, State, Zip'}
2023-01-25 19:35:40,474 - __main__ - INFO - 92 - <module>() - Predicting document 77...
2023-01-25 19:35:47,433 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  ACME Corp
Date of Receipt: 01/10/17
Address of Company: PO Box 200
Total: 20000.00
null

You can use the extract command to process the data:
extract file.csv key value

Key:

Value

Company Name

Date of Receipt

Address of Company

Total

200.00

01/10/17

PO Box 200

20,000.00

null

This is the output:

Company Name: ACME Corp

Date of Receipt: 01/10
2023-01-25 19:35:47,435 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:35:47,435 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:35:47,436 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  ACME Corp

2023-01-25 19:35:47,437 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: ACME Corp
2023-01-25 19:35:47,438 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:35:47,438 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  01/10/17

2023-01-25 19:35:47,439 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 01/10/17
2023-01-25 19:35:47,439 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:35:47,440 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  PO Box 200

2023-01-25 19:35:47,441 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: PO Box 200
2023-01-25 19:35:47,441 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:35:47,442 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  20000.00
null

You can use the extract command to process the data:
extract file.csv key value

Key:

Value

Company Name

Date of Receipt

Address of Company

Total

200.00

01/10/17

PO Box 200

20,000.00

null

This is the output:

Company Name: ACME Corp

Date of Receipt: 01/10
2023-01-25 19:35:47,442 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 20000.00 null You can use the extract command to process the data: extract file.csv key value Key: Value Company Name Date of Receipt Address of Company Total 200.00 01/10/17 PO Box 200 20,000.00 null This is the output: Company Name: ACME Corp Date of Receipt: 01/10
2023-01-25 19:35:47,443 - __main__ - INFO - 96 - <module>() - Final prediction for document 77: {'company': 'ACME Corp', 'date': '01/10/17', 'address': 'PO Box 200', 'total': '20000.00 null You can use the extract command to process the data: extract file.csv key value Key: Value Company Name Date of Receipt Address of Company Total 200.00 01/10/17 PO Box 200 20,000.00 null This is the output: Company Name: ACME Corp Date of Receipt: 01/10'}
2023-01-25 19:35:47,446 - __main__ - INFO - 92 - <module>() - Predicting document 78...
2023-01-25 19:35:49,733 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  ZJ08
Date of Receipt: 11-01-16
Address of Company:
Total: 32.80
2023-01-25 19:35:49,734 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:35:49,734 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:35:49,735 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  ZJ08

2023-01-25 19:35:49,735 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: ZJ08
2023-01-25 19:35:49,736 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:35:49,736 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  11-01-16

2023-01-25 19:35:49,736 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 11-01-16
2023-01-25 19:35:49,737 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:35:49,737 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:35:49,737 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:35:49,738 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:35:49,738 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  32.80
2023-01-25 19:35:49,738 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 32.80
2023-01-25 19:35:49,739 - __main__ - INFO - 96 - <module>() - Final prediction for document 78: {'company': 'ZJ08', 'date': '11-01-16', 'total': '32.80'}
2023-01-25 19:35:49,741 - __main__ - INFO - 92 - <module>() - Predicting document 79...
2023-01-25 19:35:56,960 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  Yours
Date of Receipt: 2018-03-13
Address of Company: Perpamah
Total: 22.50
Company Name:
Date of Receipt: 2018-03-17
Address of Company: Permas
Total: 23.50
Company Name:
Date of Receipt: 2018-03-19
Address of Company: Perumas
Total: 23.50
Company Name:
Date of Receipt: 2018-03-21
Address of Company: Perumal
Total: 23.00
Company Name:
Date of Receipt: 2018-03-
2023-01-25 19:35:56,961 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:35:56,961 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:35:56,962 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Yours

2023-01-25 19:35:56,962 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Yours
2023-01-25 19:35:56,963 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:35:56,963 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  2018-03-13

2023-01-25 19:35:56,963 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 2018-03-13
2023-01-25 19:35:56,964 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:35:56,964 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Perpamah

2023-01-25 19:35:56,964 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Perpamah
2023-01-25 19:35:56,965 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:35:56,965 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  22.50
Company Name:
Date of Receipt: 2018-03-17
Address of Company: Permas

2023-01-25 19:35:56,965 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 22.50 Company Name: Date of Receipt: 2018-03-17 Address of Company: Permas
2023-01-25 19:35:56,966 - __main__ - INFO - 96 - <module>() - Final prediction for document 79: {'company': 'Yours', 'date': '2018-03-13', 'address': 'Perpamah', 'total': '22.50 Company Name: Date of Receipt: 2018-03-17 Address of Company: Permas'}
2023-01-25 19:35:56,969 - __main__ - INFO - 92 - <module>() - Predicting document 80...
2023-01-25 19:35:58,587 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:
Date of Receipt:
Address of Company:
Total:
2023-01-25 19:35:58,587 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:35:58,588 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:35:58,588 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:35:58,588 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:35:58,589 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:35:58,589 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:35:58,589 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:35:58,589 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:35:58,590 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:35:58,590 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:35:58,590 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:35:58,590 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:
2023-01-25 19:35:58,591 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:35:58,591 - __main__ - INFO - 96 - <module>() - Final prediction for document 80: {}
2023-01-25 19:35:58,592 - __main__ - INFO - 92 - <module>() - Predicting document 81...
2023-01-25 19:36:05,159 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  1ST FLOOR
Date of Receipt: 18-11-2018
Address of Company: 4 B, 3/4, PANGKALAN MARIN
Total: RM1,150.00
The code in Figure 1 and Figure 2 can be used as follows:

Figure 2: Printing of the extracted Data

Figure 2: Printing of the extracted Data

Code Snippet

Output of the program

This program allows to know the total amount of the purchase made in the restaurant. We can get the total bill by passing total as parameter.
2023-01-25 19:36:05,160 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:36:05,161 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:36:05,161 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  1ST FLOOR

2023-01-25 19:36:05,161 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 1ST FLOOR
2023-01-25 19:36:05,162 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:36:05,162 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  18-11-2018

2023-01-25 19:36:05,162 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 18-11-2018
2023-01-25 19:36:05,163 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:36:05,163 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  4 B, 3/4, PANGKALAN MARIN

2023-01-25 19:36:05,163 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 4 B, 3/4, PANGKALAN MARIN
2023-01-25 19:36:05,164 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:36:05,164 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  RM1,150.00
The code in Figure 1 and Figure 2 can be used as follows:

Figure 2: Printing of the extracted Data

Figure 2: Printing of the extracted Data

Code Snippet

Output of the program

This program allows to know the total amount of the purchase made in the restaurant. We can get the total bill by passing total as parameter.
2023-01-25 19:36:05,164 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: RM1,150.00 The code in Figure 1 and Figure 2 can be used as follows: Figure 2: Printing of the extracted Data Figure 2: Printing of the extracted Data Code Snippet Output of the program This program allows to know the total amount of the purchase made in the restaurant. We can get the total bill by passing total as parameter.
2023-01-25 19:36:05,165 - __main__ - INFO - 96 - <module>() - Final prediction for document 81: {'company': '1ST FLOOR', 'date': '18-11-2018', 'address': '4 B, 3/4, PANGKALAN MARIN', 'total': 'RM1,150.00 The code in Figure 1 and Figure 2 can be used as follows: Figure 2: Printing of the extracted Data Figure 2: Printing of the extracted Data Code Snippet Output of the program This program allows to know the total amount of the purchase made in the restaurant. We can get the total bill by passing total as parameter.'}
2023-01-25 19:36:05,168 - __main__ - INFO - 92 - <module>() - Predicting document 82...
2023-01-25 19:36:06,689 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:
Date of Receipt:
Address of Company:
Total:
2023-01-25 19:36:06,690 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:36:06,690 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:36:06,691 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:36:06,692 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:36:06,692 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:36:06,693 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:36:06,693 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:36:06,694 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:36:06,694 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:36:06,695 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:36:06,695 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:36:06,696 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:
2023-01-25 19:36:06,696 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:36:06,697 - __main__ - INFO - 96 - <module>() - Final prediction for document 82: {}
2023-01-25 19:36:06,700 - __main__ - INFO - 92 - <module>() - Predicting document 83...
2023-01-25 19:36:14,108 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  SIBU SOLDES (M) SDN.BHD.
Address of Company: 3, Jalan Kebun Raya,
Taman Sri Segambut,
52000 Kuala Lumpur.
Date of Receipt: 29/06/2017.
Total: RM3.80
GST: RM3.80
Please insert the following receipt codes:
01, FOOK, BANK
02, FOOK, LENDING
08, FOOK, CREDIT CARD
Key: Value
Company Name: SIBU SOLDES (M) SD
2023-01-25 19:36:14,111 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:36:14,111 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:36:14,112 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  SIBU SOLDES (M) SDN.BHD.
Address of Company: 3, Jalan Kebun Raya,
Taman Sri Segambut,
52000 Kuala Lumpur.

2023-01-25 19:36:14,113 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: SIBU SOLDES (M) SDN.BHD. Address of Company: 3, Jalan Kebun Raya, Taman Sri Segambut, 52000 Kuala Lumpur.
2023-01-25 19:36:14,113 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:36:14,114 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  29/06/2017.
Total: RM3.80
GST: RM3.80
Please insert the following receipt codes:
01, FOOK, BANK
02, FOOK, LENDING
08, FOOK, CREDIT CARD
Key: Value
Company Name: SIBU SOLDES (M) SD
2023-01-25 19:36:14,115 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 29/06/2017. Total: RM3.80 GST: RM3.80 Please insert the following receipt codes: 01, FOOK, BANK 02, FOOK, LENDING 08, FOOK, CREDIT CARD Key: Value Company Name: SIBU SOLDES (M) SD
2023-01-25 19:36:14,115 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:36:14,116 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  3, Jalan Kebun Raya,
Taman Sri Segambut,
52000 Kuala Lumpur.
Date of Receipt: 29/06/2017.

2023-01-25 19:36:14,117 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 3, Jalan Kebun Raya, Taman Sri Segambut, 52000 Kuala Lumpur. Date of Receipt: 29/06/2017.
2023-01-25 19:36:14,117 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:36:14,118 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  RM3.80
GST: RM3.80
Please insert the following receipt codes:
01, FOOK, BANK
02, FOOK, LENDING
08, FOOK, CREDIT CARD
Key: Value
Company Name: SIBU SOLDES (M) SD
2023-01-25 19:36:14,118 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: RM3.80 GST: RM3.80 Please insert the following receipt codes: 01, FOOK, BANK 02, FOOK, LENDING 08, FOOK, CREDIT CARD Key: Value Company Name: SIBU SOLDES (M) SD
2023-01-25 19:36:14,119 - __main__ - INFO - 96 - <module>() - Final prediction for document 83: {'company': 'SIBU SOLDES (M) SDN.BHD. Address of Company: 3, Jalan Kebun Raya, Taman Sri Segambut, 52000 Kuala Lumpur.', 'date': '29/06/2017. Total: RM3.80 GST: RM3.80 Please insert the following receipt codes: 01, FOOK, BANK 02, FOOK, LENDING 08, FOOK, CREDIT CARD Key: Value Company Name: SIBU SOLDES (M) SD', 'address': '3, Jalan Kebun Raya, Taman Sri Segambut, 52000 Kuala Lumpur. Date of Receipt: 29/06/2017.', 'total': 'RM3.80 GST: RM3.80 Please insert the following receipt codes: 01, FOOK, BANK 02, FOOK, LENDING 08, FOOK, CREDIT CARD Key: Value Company Name: SIBU SOLDES (M) SD'}
2023-01-25 19:36:14,123 - __main__ - INFO - 92 - <module>() - Predicting document 84...
2023-01-25 19:36:16,932 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  SANYU SUPPLY SDN BHD
Date of Receipt: 24/10/2017
Address of Company: SANYU STATIONERY SHOP
Total:
2023-01-25 19:36:16,933 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:36:16,934 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:36:16,935 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  SANYU SUPPLY SDN BHD

2023-01-25 19:36:16,936 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: SANYU SUPPLY SDN BHD
2023-01-25 19:36:16,937 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:36:16,937 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  24/10/2017

2023-01-25 19:36:16,938 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 24/10/2017
2023-01-25 19:36:16,938 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:36:16,939 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  SANYU STATIONERY SHOP

2023-01-25 19:36:16,939 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: SANYU STATIONERY SHOP
2023-01-25 19:36:16,940 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:36:16,940 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:
2023-01-25 19:36:16,940 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:36:16,941 - __main__ - INFO - 96 - <module>() - Final prediction for document 84: {'company': 'SANYU SUPPLY SDN BHD', 'date': '24/10/2017', 'address': 'SANYU STATIONERY SHOP'}
2023-01-25 19:36:16,943 - __main__ - INFO - 92 - <module>() - Predicting document 85...
2023-01-25 19:36:20,318 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  VOUCHER DISCOUNT.REDEEM POINT DISCOUNT
Date of Receipt: 01/01/2018
Address of Company: JL. 2/22
Total: USD 42.00
2023-01-25 19:36:20,319 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:36:20,320 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:36:20,320 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  VOUCHER DISCOUNT.REDEEM POINT DISCOUNT

2023-01-25 19:36:20,320 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: VOUCHER DISCOUNT.REDEEM POINT DISCOUNT
2023-01-25 19:36:20,321 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:36:20,321 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  01/01/2018

2023-01-25 19:36:20,322 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 01/01/2018
2023-01-25 19:36:20,322 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:36:20,322 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  JL. 2/22

2023-01-25 19:36:20,323 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: JL. 2/22
2023-01-25 19:36:20,323 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:36:20,324 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  USD 42.00
2023-01-25 19:36:20,324 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: USD 42.00
2023-01-25 19:36:20,325 - __main__ - INFO - 96 - <module>() - Final prediction for document 85: {'company': 'VOUCHER DISCOUNT.REDEEM POINT DISCOUNT', 'date': '01/01/2018', 'address': 'JL. 2/22', 'total': 'USD 42.00'}
2023-01-25 19:36:20,328 - __main__ - INFO - 92 - <module>() - Predicting document 86...
2023-01-25 19:36:27,368 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  GARDENIA BAKERIES
Date of Receipt: 23/07/2017
Address of Company:
Total: 27.58
Company Name
Deduction
Total to be received by company
Other
TOTAL DEDUCTIONS
Taxes (VAT / Service Tax / Excise / Cenvat)
Other Deductions
Other Deductions
Other Deductions
TOTAL DEDUCTIONS (GST)
TOTAL DEDUCTIONS (INC GST)
TOTAL PAYABLE
TAXES PAYABLE

CPA CMA Cert
2023-01-25 19:36:27,370 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:36:27,371 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:36:27,371 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  GARDENIA BAKERIES

2023-01-25 19:36:27,372 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: GARDENIA BAKERIES
2023-01-25 19:36:27,372 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:36:27,373 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  23/07/2017

2023-01-25 19:36:27,373 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 23/07/2017
2023-01-25 19:36:27,374 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:36:27,374 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:36:27,375 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:36:27,375 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:36:27,375 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  27.58
Company Name
Deduction
Total to be received by company
Other
TOTAL DEDUCTIONS
Taxes (VAT / Service Tax / Excise / Cenvat)
Other Deductions
Other Deductions
Other Deductions
TOTAL DEDUCTIONS (GST)
TOTAL DEDUCTIONS (INC GST)
TOTAL PAYABLE
TAXES PAYABLE

CPA CMA Cert
2023-01-25 19:36:27,376 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 27.58 Company Name Deduction Total to be received by company Other TOTAL DEDUCTIONS Taxes (VAT / Service Tax / Excise / Cenvat) Other Deductions Other Deductions Other Deductions TOTAL DEDUCTIONS (GST) TOTAL DEDUCTIONS (INC GST) TOTAL PAYABLE TAXES PAYABLE CPA CMA Cert
2023-01-25 19:36:27,376 - __main__ - INFO - 96 - <module>() - Final prediction for document 86: {'company': 'GARDENIA BAKERIES', 'date': '23/07/2017', 'total': '27.58 Company Name Deduction Total to be received by company Other TOTAL DEDUCTIONS Taxes (VAT / Service Tax / Excise / Cenvat) Other Deductions Other Deductions Other Deductions TOTAL DEDUCTIONS (GST) TOTAL DEDUCTIONS (INC GST) TOTAL PAYABLE TAXES PAYABLE CPA CMA Cert'}
2023-01-25 19:36:27,379 - __main__ - INFO - 92 - <module>() - Predicting document 87...
2023-01-25 19:36:29,787 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  amirul (126926)
Date of Receipt: 2018-03-14
Address of Company:
Total:
2023-01-25 19:36:29,788 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:36:29,788 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:36:29,789 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  amirul (126926)

2023-01-25 19:36:29,789 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: amirul (126926)
2023-01-25 19:36:29,790 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:36:29,790 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  2018-03-14

2023-01-25 19:36:29,791 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 2018-03-14
2023-01-25 19:36:29,792 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:36:29,792 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:36:29,793 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:36:29,793 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:36:29,795 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:
2023-01-25 19:36:29,795 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:36:29,796 - __main__ - INFO - 96 - <module>() - Final prediction for document 87: {'company': 'amirul (126926)', 'date': '2018-03-14'}
2023-01-25 19:36:29,800 - __main__ - INFO - 92 - <module>() - Predicting document 88...
2023-01-25 19:36:36,468 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  YIN MA (M) SDN.BHD.(974306-T)
Date of Receipt: 3 JUN 2016 12:26PM
Address of Company: 4, JALAN UDANG SIAR 2,
TAMAN SRI SEGAMBUT,
52000 KUALA LUMPUR.
Total:
Cash:
GST Summary:
GST Code:
S @6.0%
Amount:
31.86
Tax:
1.86
Ref No:
00500055998044795
Exchange are allowed within 3 days with
2023-01-25 19:36:36,473 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:36:36,473 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:36:36,474 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  YIN MA (M) SDN.BHD.(974306-T)

2023-01-25 19:36:36,474 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: YIN MA (M) SDN.BHD.(974306-T)
2023-01-25 19:36:36,475 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:36:36,475 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  3 JUN 2016 12:26PM

2023-01-25 19:36:36,475 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 3 JUN 2016 12:26PM
2023-01-25 19:36:36,476 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:36:36,476 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  4, JALAN UDANG SIAR 2,
TAMAN SRI SEGAMBUT,
52000 KUALA LUMPUR.

2023-01-25 19:36:36,476 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 4, JALAN UDANG SIAR 2, TAMAN SRI SEGAMBUT, 52000 KUALA LUMPUR.
2023-01-25 19:36:36,476 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:36:36,477 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:
Cash:
GST Summary:
GST Code:
S @6.0%
Amount:
31.86
Tax:
1.86
Ref No:
00500055998044795
Exchange are allowed within 3 days with
2023-01-25 19:36:36,477 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Cash: GST Summary: GST Code: S @6.0% Amount: 31.86 Tax: 1.86 Ref No: 00500055998044795 Exchange are allowed within 3 days with
2023-01-25 19:36:36,477 - __main__ - INFO - 96 - <module>() - Final prediction for document 88: {'company': 'YIN MA (M) SDN.BHD.(974306-T)', 'date': '3 JUN 2016 12:26PM', 'address': '4, JALAN UDANG SIAR 2, TAMAN SRI SEGAMBUT, 52000 KUALA LUMPUR.', 'total': 'Cash: GST Summary: GST Code: S @6.0% Amount: 31.86 Tax: 1.86 Ref No: 00500055998044795 Exchange are allowed within 3 days with'}
2023-01-25 19:36:36,482 - __main__ - INFO - 92 - <module>() - Predicting document 89...
2023-01-25 19:36:40,972 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  SENG THO HARDWARE TRADING
Date of Receipt: 02/02/2018 10:06
Address of Company: CS 24146
Total: 7.00 NOS
Tax(RM): 0.70
Sales tax : 0.40
Remarks: Thank you
This order will be generated in XML format for the system to read.
2023-01-25 19:36:40,973 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:36:40,973 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:36:40,974 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  SENG THO HARDWARE TRADING

2023-01-25 19:36:40,974 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: SENG THO HARDWARE TRADING
2023-01-25 19:36:40,974 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:36:40,975 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  02/02/2018 10:06

2023-01-25 19:36:40,975 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 02/02/2018 10:06
2023-01-25 19:36:40,975 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:36:40,976 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  CS 24146

2023-01-25 19:36:40,976 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: CS 24146
2023-01-25 19:36:40,976 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:36:40,976 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  7.00 NOS
Tax(RM): 0.70
Sales tax : 0.40
Remarks: Thank you
This order will be generated in XML format for the system to read.
2023-01-25 19:36:40,977 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 7.00 NOS Tax(RM): 0.70 Sales tax : 0.40 Remarks: Thank you This order will be generated in XML format for the system to read.
2023-01-25 19:36:40,977 - __main__ - INFO - 96 - <module>() - Final prediction for document 89: {'company': 'SENG THO HARDWARE TRADING', 'date': '02/02/2018 10:06', 'address': 'CS 24146', 'total': '7.00 NOS Tax(RM): 0.70 Sales tax : 0.40 Remarks: Thank you This order will be generated in XML format for the system to read.'}
2023-01-25 19:36:40,978 - __main__ - INFO - 92 - <module>() - Predicting document 90...
2023-01-25 19:36:47,841 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  VELAN BICYCLE INDUSTRIAL Sdn. Bhd.
Date of Receipt: 31 March 2018
Address of Company:
Total: (14.65)
|stop key|:

If you cannot find the "Date of Receipt" key-value pair in the sample document, set the value to 0.

Here is the example of query with "Date of Receipt" date.
q=_input("Enter the format for query date and time: ")
(d"31.03.2018")&"(11:30:00:000")&"(
2023-01-25 19:36:47,843 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:36:47,844 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:36:47,845 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  VELAN BICYCLE INDUSTRIAL Sdn. Bhd.

2023-01-25 19:36:47,845 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: VELAN BICYCLE INDUSTRIAL Sdn. Bhd.
2023-01-25 19:36:47,846 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:36:47,846 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  31 March 2018

2023-01-25 19:36:47,846 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 31 March 2018
2023-01-25 19:36:47,847 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:36:47,847 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:36:47,848 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:36:47,848 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:36:47,849 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  (14.65)
|stop key|:

If you cannot find the "Date of Receipt" key-value pair in the sample document, set the value to 0.

Here is the example of query with "Date of Receipt" date.
q=_input("Enter the format for query date and time: ")
(d"31.03.2018")&"(11:30:00:000")&"(
2023-01-25 19:36:47,849 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: (14.65) |stop key|: If you cannot find the "Date of Receipt" key-value pair in the sample document, set the value to 0. Here is the example of query with "Date of Receipt" date. q=_input("Enter the format for query date and time: ") (d"31.03.2018")&"(11:30:00:000")&"(
2023-01-25 19:36:47,850 - __main__ - INFO - 96 - <module>() - Final prediction for document 90: {'company': 'VELAN BICYCLE INDUSTRIAL Sdn. Bhd.', 'date': '31 March 2018', 'total': '(14.65) |stop key|: If you cannot find the "Date of Receipt" key-value pair in the sample document, set the value to 0. Here is the example of query with "Date of Receipt" date. q=_input("Enter the format for query date and time: ") (d"31.03.2018")&"(11:30:00:000")&"('}
2023-01-25 19:36:47,855 - __main__ - INFO - 92 - <module>() - Predicting document 91...
2023-01-25 19:36:52,173 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  NOVASYNTECH SOLDERS, INC
Date of Receipt:
29/10/2018
Address of Company:
Bukit Aman
Taman Sentosa Utara,
Jalan SS 4/52,
47200 Putra Damansara,
PJU 9000
Singapore 603251
Total:
2023-01-25 19:36:52,174 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:36:52,174 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:36:52,174 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  NOVASYNTECH SOLDERS, INC

2023-01-25 19:36:52,175 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: NOVASYNTECH SOLDERS, INC
2023-01-25 19:36:52,175 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:36:52,175 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:
29/10/2018

2023-01-25 19:36:52,175 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 29/10/2018
2023-01-25 19:36:52,176 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:36:52,176 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:
Bukit Aman
Taman Sentosa Utara,
Jalan SS 4/52,
47200 Putra Damansara,
PJU 9000
Singapore 603251

2023-01-25 19:36:52,176 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Bukit Aman Taman Sentosa Utara, Jalan SS 4/52, 47200 Putra Damansara, PJU 9000 Singapore 603251
2023-01-25 19:36:52,176 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:36:52,176 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:
2023-01-25 19:36:52,177 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:36:52,177 - __main__ - INFO - 96 - <module>() - Final prediction for document 91: {'company': 'NOVASYNTECH SOLDERS, INC', 'date': '29/10/2018', 'address': 'Bukit Aman Taman Sentosa Utara, Jalan SS 4/52, 47200 Putra Damansara, PJU 9000 Singapore 603251'}
2023-01-25 19:36:52,178 - __main__ - INFO - 92 - <module>() - Predicting document 92...
2023-01-25 19:36:54,303 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  Your Name
Receipt Date: <TODAY'S DATE>
Address of Company: <ADDRESS OF COMPANY>
Total: 14.70

2023-01-25 19:36:54,303 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:36:54,304 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:36:54,304 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Your Name
Receipt Date: <TODAY'S DATE>

2023-01-25 19:36:54,304 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Your Name Receipt Date: <TODAY'S DATE>
2023-01-25 19:36:54,305 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:36:54,305 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:36:54,305 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  <ADDRESS OF COMPANY>

2023-01-25 19:36:54,305 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: <ADDRESS OF COMPANY>
2023-01-25 19:36:54,305 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:36:54,306 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  14.70

2023-01-25 19:36:54,306 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 14.70
2023-01-25 19:36:54,306 - __main__ - INFO - 96 - <module>() - Final prediction for document 92: {'company': "Your Name Receipt Date: <TODAY'S DATE>", 'address': '<ADDRESS OF COMPANY>', 'total': '14.70'}
2023-01-25 19:36:54,308 - __main__ - INFO - 92 - <module>() - Predicting document 93...
2023-01-25 19:36:56,022 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:
Date of Receipt:
Address of Company:
Total:
2023-01-25 19:36:56,023 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:36:56,024 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:36:56,025 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:36:56,025 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:36:56,026 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:36:56,027 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:36:56,027 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:36:56,028 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:36:56,028 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:36:56,029 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:36:56,029 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:36:56,030 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:
2023-01-25 19:36:56,030 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:36:56,031 - __main__ - INFO - 96 - <module>() - Final prediction for document 93: {}
2023-01-25 19:36:56,034 - __main__ - INFO - 92 - <module>() - Predicting document 94...
2023-01-25 19:37:02,785 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  (RECEIPT NO:) REC-0016614
Date of Receipt: 23-04-2018
Date of Request: 08-09-2018
Address of Company: 1-5-11& 13 Jalan 5/1 Bandar Baru Permas Jalan 5, Kuala Lumpur 59200
Total: 016-7574666
Please click here to view the final page of this questionnaire

Create a new project named "Questionnaire". From the left menu, select the "New" option.
Add the following packages:
net.sf.jasperreports.engine
2023-01-25 19:37:02,787 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:37:02,788 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:37:02,789 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  (RECEIPT NO:) REC-0016614

2023-01-25 19:37:02,789 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: (RECEIPT NO:) REC-0016614
2023-01-25 19:37:02,789 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:37:02,790 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  23-04-2018
Date of Request: 08-09-2018

2023-01-25 19:37:02,791 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 23-04-2018 Date of Request: 08-09-2018
2023-01-25 19:37:02,791 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:37:02,792 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  1-5-11& 13 Jalan 5/1 Bandar Baru Permas Jalan 5, Kuala Lumpur 59200

2023-01-25 19:37:02,792 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 1-5-11& 13 Jalan 5/1 Bandar Baru Permas Jalan 5, Kuala Lumpur 59200
2023-01-25 19:37:02,792 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:37:02,793 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  016-7574666
Please click here to view the final page of this questionnaire

Create a new project named "Questionnaire". From the left menu, select the "New" option.
Add the following packages:
net.sf.jasperreports.engine
2023-01-25 19:37:02,793 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 016-7574666 Please click here to view the final page of this questionnaire Create a new project named "Questionnaire". From the left menu, select the "New" option. Add the following packages: net.sf.jasperreports.engine
2023-01-25 19:37:02,794 - __main__ - INFO - 96 - <module>() - Final prediction for document 94: {'company': '(RECEIPT NO:) REC-0016614', 'date': '23-04-2018 Date of Request: 08-09-2018', 'address': '1-5-11& 13 Jalan 5/1 Bandar Baru Permas Jalan 5, Kuala Lumpur 59200', 'total': '016-7574666 Please click here to view the final page of this questionnaire Create a new project named "Questionnaire". From the left menu, select the "New" option. Add the following packages: net.sf.jasperreports.engine'}
2023-01-25 19:37:02,799 - __main__ - INFO - 92 - <module>() - Predicting document 95...
2023-01-25 19:37:06,189 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  Vodafone AIS
Date of Receipt: 15-11-13
Address of Company: Vodafone AIS Group
Total: RM12,999.95
2023-01-25 19:37:06,190 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:37:06,191 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:37:06,192 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Vodafone AIS

2023-01-25 19:37:06,192 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Vodafone AIS
2023-01-25 19:37:06,193 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:37:06,193 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  15-11-13

2023-01-25 19:37:06,194 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 15-11-13
2023-01-25 19:37:06,194 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:37:06,195 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Vodafone AIS Group

2023-01-25 19:37:06,195 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Vodafone AIS Group
2023-01-25 19:37:06,196 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:37:06,196 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  RM12,999.95
2023-01-25 19:37:06,197 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: RM12,999.95
2023-01-25 19:37:06,197 - __main__ - INFO - 96 - <module>() - Final prediction for document 95: {'company': 'Vodafone AIS', 'date': '15-11-13', 'address': 'Vodafone AIS Group', 'total': 'RM12,999.95'}
2023-01-25 19:37:06,200 - __main__ - INFO - 92 - <module>() - Predicting document 96...
2023-01-25 19:37:13,260 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  Keech Bhd.
Date of Receipt: 22-01-2018
Address of Company: No. 5, Jalan Punchak Indah, Bandar Putra Heights
Total: 3.20
3.20
Key: Value
Company Name: Keech Bhd.
Date of Receipt: 22-01-2018
Address of Company: No. 5, Jalan Punchak Indah, Bandar Putra Heights
Total: 0.00
0.00
Key: Value
Company Name: Keech Bhd.
Date of Receipt: 22-
2023-01-25 19:37:13,262 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:37:13,263 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:37:13,263 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Keech Bhd.

2023-01-25 19:37:13,264 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Keech Bhd.
2023-01-25 19:37:13,264 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:37:13,265 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  22-01-2018

2023-01-25 19:37:13,265 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 22-01-2018
2023-01-25 19:37:13,266 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:37:13,266 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  No. 5, Jalan Punchak Indah, Bandar Putra Heights

2023-01-25 19:37:13,267 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: No. 5, Jalan Punchak Indah, Bandar Putra Heights
2023-01-25 19:37:13,267 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:37:13,267 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  3.20
3.20
Key: Value
Company Name: Keech Bhd.
Date of Receipt: 22-01-2018
Address of Company: No. 5, Jalan Punchak Indah, Bandar Putra Heights

2023-01-25 19:37:13,268 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 3.20 3.20 Key: Value Company Name: Keech Bhd. Date of Receipt: 22-01-2018 Address of Company: No. 5, Jalan Punchak Indah, Bandar Putra Heights
2023-01-25 19:37:13,268 - __main__ - INFO - 96 - <module>() - Final prediction for document 96: {'company': 'Keech Bhd.', 'date': '22-01-2018', 'address': 'No. 5, Jalan Punchak Indah, Bandar Putra Heights', 'total': '3.20 3.20 Key: Value Company Name: Keech Bhd. Date of Receipt: 22-01-2018 Address of Company: No. 5, Jalan Punchak Indah, Bandar Putra Heights'}
2023-01-25 19:37:13,271 - __main__ - INFO - 92 - <module>() - Predicting document 97...
2023-01-25 19:37:15,154 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:
Date of Receipt:
Address of Company:
Total:
2023-01-25 19:37:15,154 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:37:15,155 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:37:15,155 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:37:15,155 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:37:15,156 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:37:15,156 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:37:15,156 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:37:15,156 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:37:15,157 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:37:15,157 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:37:15,157 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:37:15,158 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:
2023-01-25 19:37:15,158 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:37:15,158 - __main__ - INFO - 96 - <module>() - Final prediction for document 97: {}
2023-01-25 19:37:15,160 - __main__ - INFO - 92 - <module>() - Predicting document 98...
2023-01-25 19:37:16,718 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:
Date of Receipt:
Address of Company:
Total:

2023-01-25 19:37:16,719 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:37:16,720 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:37:16,721 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:37:16,721 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:37:16,722 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:37:16,722 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:37:16,723 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:37:16,723 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:37:16,724 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:37:16,724 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:37:16,724 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:37:16,725 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:37:16,725 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:37:16,725 - __main__ - INFO - 96 - <module>() - Final prediction for document 98: {}
2023-01-25 19:37:16,728 - __main__ - INFO - 92 - <module>() - Predicting document 99...
2023-01-25 19:37:20,143 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  null
Date of Receipt: 02/06/2018
Address of Company: Jalan Permas, 1, Jalan Permas, Bandar Baru Permas Jaya, Johor, Malaysia
Total: RM16.21
2023-01-25 19:37:20,144 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:37:20,145 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:37:20,145 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  null

2023-01-25 19:37:20,146 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: null
2023-01-25 19:37:20,146 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:37:20,147 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  02/06/2018

2023-01-25 19:37:20,147 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 02/06/2018
2023-01-25 19:37:20,148 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:37:20,148 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Jalan Permas, 1, Jalan Permas, Bandar Baru Permas Jaya, Johor, Malaysia

2023-01-25 19:37:20,148 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Jalan Permas, 1, Jalan Permas, Bandar Baru Permas Jaya, Johor, Malaysia
2023-01-25 19:37:20,149 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:37:20,149 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  RM16.21
2023-01-25 19:37:20,149 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: RM16.21
2023-01-25 19:37:20,150 - __main__ - INFO - 96 - <module>() - Final prediction for document 99: {'date': '02/06/2018', 'address': 'Jalan Permas, 1, Jalan Permas, Bandar Baru Permas Jaya, Johor, Malaysia', 'total': 'RM16.21'}
2023-01-25 19:37:20,151 - __main__ - INFO - 92 - <module>() - Predicting document 100...
2023-01-25 19:37:21,348 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:

2023-01-25 19:37:21,349 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:37:21,350 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:37:21,350 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:37:21,350 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:37:21,350 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:37:21,351 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:37:21,351 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:37:21,351 - __main__ - INFO - 96 - <module>() - Final prediction for document 100: {}
2023-01-25 19:37:21,354 - __main__ - INFO - 92 - <module>() - Predicting document 101...
2023-01-25 19:37:29,241 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  XXXXXXX
Date of Receipt: 02/03/2001
Address of Company: XXXXXXX
Total: <|stop key|>

Now,
Insert the key-value pair obtained from the last step into the following formula:

<|start key|> + "<|stop key|>"

Note: Do not enter "<|stop key|>" in the formula!

The result is that the formula will automatically replace the "<|stop key|>" with the value from the "Total" field of the last row in the form.
For example,
If the value of
2023-01-25 19:37:29,242 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:37:29,242 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:37:29,242 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  XXXXXXX

2023-01-25 19:37:29,243 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: XXXXXXX
2023-01-25 19:37:29,243 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:37:29,243 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  02/03/2001

2023-01-25 19:37:29,243 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 02/03/2001
2023-01-25 19:37:29,244 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:37:29,244 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  XXXXXXX

2023-01-25 19:37:29,244 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: XXXXXXX
2023-01-25 19:37:29,244 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:37:29,245 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  <|stop key|>

Now,
Insert the key-value pair obtained from the last step into the following formula:

<|start key|> + "<|stop key|>"

Note: Do not enter "<|stop key|>" in the formula!

The result is that the formula will automatically replace the "<|stop key|>" with the value from the "Total" field of the last row in the form.
For example,
If the value of
2023-01-25 19:37:29,245 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: <|stop key|> Now, Insert the key-value pair obtained from the last step into the following formula: <|start key|> + "<|stop key|>" Note: Do not enter "<|stop key|>" in the formula! The result is that the formula will automatically replace the "<|stop key|>" with the value from the "Total" field of the last row in the form. For example, If the value of
2023-01-25 19:37:29,245 - __main__ - INFO - 96 - <module>() - Final prediction for document 101: {'company': 'XXXXXXX', 'date': '02/03/2001', 'address': 'XXXXXXX', 'total': '<|stop key|> Now, Insert the key-value pair obtained from the last step into the following formula: <|start key|> + "<|stop key|>" Note: Do not enter "<|stop key|>" in the formula! The result is that the formula will automatically replace the "<|stop key|>" with the value from the "Total" field of the last row in the form. For example, If the value of'}
2023-01-25 19:37:29,247 - __main__ - INFO - 92 - <module>() - Predicting document 102...
2023-01-25 19:37:32,331 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  ABC Company Ltd.
Date of Receipt: 01/05/2016
Address of Company: 6B, ABC House, ABC Street, ABC City, ABC District, ABC Country
Total: 9000
Total: 9000

2023-01-25 19:37:32,332 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:37:32,332 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:37:32,333 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  ABC Company Ltd.

2023-01-25 19:37:32,333 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: ABC Company Ltd.
2023-01-25 19:37:32,333 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:37:32,334 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  01/05/2016

2023-01-25 19:37:32,334 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 01/05/2016
2023-01-25 19:37:32,334 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:37:32,334 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  6B, ABC House, ABC Street, ABC City, ABC District, ABC Country

2023-01-25 19:37:32,335 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 6B, ABC House, ABC Street, ABC City, ABC District, ABC Country
2023-01-25 19:37:32,335 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:37:32,335 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  9000

2023-01-25 19:37:32,335 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 9000
2023-01-25 19:37:32,336 - __main__ - INFO - 96 - <module>() - Final prediction for document 102: {'company': 'ABC Company Ltd.', 'date': '01/05/2016', 'address': '6B, ABC House, ABC Street, ABC City, ABC District, ABC Country', 'total': '9000'}
2023-01-25 19:37:32,337 - __main__ - INFO - 92 - <module>() - Predicting document 103...
2023-01-25 19:37:37,446 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:
Address of Company:
Receipt date:
Total

Example: <|stop key|> = "Company Name", "<|stop key|>" = "Address of Company", "<|stop key|>" = "Receipt date", "<|stop key|>" = "Total". (Note: The value for <|stop key|> is optional, as it could be found in the document set instead of being typed by the user.)
2023-01-25 19:37:37,447 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:37:37,448 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:37:37,448 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:37:37,448 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:37:37,448 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:37:37,449 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:37:37,449 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:
Receipt date:
Total

Example: <|stop key|> = "Company Name", "<|stop key|>" = "Address of Company", "<|stop key|>" = "Receipt date", "<|stop key|>" = "Total". (Note: The value for <|stop key|> is optional, as it could be found in the document set instead of being typed by the user.)
2023-01-25 19:37:37,449 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Receipt date: Total Example: <|stop key|> = "Company Name", "<|stop key|>" = "Address of Company", "<|stop key|>" = "Receipt date", "<|stop key|>" = "Total". (Note: The value for <|stop key|> is optional, as it could be found in the document set instead of being typed by the user.)
2023-01-25 19:37:37,449 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:37:37,449 - __main__ - INFO - 96 - <module>() - Final prediction for document 103: {'address': 'Receipt date: Total Example: <|stop key|> = "Company Name", "<|stop key|>" = "Address of Company", "<|stop key|>" = "Receipt date", "<|stop key|>" = "Total". (Note: The value for <|stop key|> is optional, as it could be found in the document set instead of being typed by the user.)'}
2023-01-25 19:37:37,451 - __main__ - INFO - 92 - <module>() - Predicting document 104...
2023-01-25 19:37:40,167 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:
Date of Receipt:
Address of Company:
Total:

Print out the extract data.
You may use the key-value pair to make the PDF to become editable.
2023-01-25 19:37:40,167 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:37:40,168 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:37:40,168 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:37:40,168 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:37:40,168 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:37:40,169 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:37:40,169 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:37:40,170 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:37:40,170 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:37:40,170 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:37:40,170 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:37:40,171 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

Print out the extract data.
You may use the key-value pair to make the PDF to become editable.
2023-01-25 19:37:40,171 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Print out the extract data. You may use the key-value pair to make the PDF to become editable.
2023-01-25 19:37:40,171 - __main__ - INFO - 96 - <module>() - Final prediction for document 104: {'total': 'Print out the extract data. You may use the key-value pair to make the PDF to become editable.'}
2023-01-25 19:37:40,173 - __main__ - INFO - 92 - <module>() - Predicting document 105...
2023-01-25 19:37:45,358 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  C1
Date of Receipt: 01/APR/2018
Address of Company: Jalan Utama, Puchong, Selangor, Malaysia
Total: 165
Receipt Type: Purchase

Key: Value
Company Name: C2
Date of Receipt: 05/APR/2018
Address of Company: Jalan Utama, Puchong, Selangor, Malaysia
Total: 165
Receipt Type: Purchase
2023-01-25 19:37:45,359 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:37:45,359 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:37:45,359 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  C1

2023-01-25 19:37:45,359 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: C1
2023-01-25 19:37:45,359 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:37:45,360 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  01/APR/2018

2023-01-25 19:37:45,360 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 01/APR/2018
2023-01-25 19:37:45,360 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:37:45,360 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Jalan Utama, Puchong, Selangor, Malaysia

2023-01-25 19:37:45,360 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Jalan Utama, Puchong, Selangor, Malaysia
2023-01-25 19:37:45,360 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:37:45,361 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  165
Receipt Type: Purchase

Key: Value
Company Name: C2
Date of Receipt: 05/APR/2018
Address of Company: Jalan Utama, Puchong, Selangor, Malaysia

2023-01-25 19:37:45,361 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 165 Receipt Type: Purchase Key: Value Company Name: C2 Date of Receipt: 05/APR/2018 Address of Company: Jalan Utama, Puchong, Selangor, Malaysia
2023-01-25 19:37:45,361 - __main__ - INFO - 96 - <module>() - Final prediction for document 105: {'company': 'C1', 'date': '01/APR/2018', 'address': 'Jalan Utama, Puchong, Selangor, Malaysia', 'total': '165 Receipt Type: Purchase Key: Value Company Name: C2 Date of Receipt: 05/APR/2018 Address of Company: Jalan Utama, Puchong, Selangor, Malaysia'}
2023-01-25 19:37:45,362 - __main__ - INFO - 92 - <module>() - Predicting document 106...
2023-01-25 19:37:50,209 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  (e.g. ABC Co., Ltd.)
Date of Receipt: (YYYYMMDD)
Address of Company: (e.g. 123 ABC Street)
Total: (Total Amount, e.g. 1,200.30)
2023-01-25 19:37:50,210 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:37:50,211 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:37:50,211 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  (e.g. ABC Co., Ltd.)

2023-01-25 19:37:50,212 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: (e.g. ABC Co., Ltd.)
2023-01-25 19:37:50,212 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:37:50,212 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  (YYYYMMDD)

2023-01-25 19:37:50,212 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: (YYYYMMDD)
2023-01-25 19:37:50,212 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:37:50,213 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  (e.g. 123 ABC Street)

2023-01-25 19:37:50,213 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: (e.g. 123 ABC Street)
2023-01-25 19:37:50,213 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:37:50,213 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  (Total Amount, e.g. 1,200.30)
2023-01-25 19:37:50,213 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: (Total Amount, e.g. 1,200.30)
2023-01-25 19:37:50,214 - __main__ - INFO - 96 - <module>() - Final prediction for document 106: {'company': '(e.g. ABC Co., Ltd.)', 'date': '(YYYYMMDD)', 'address': '(e.g. 123 ABC Street)', 'total': '(Total Amount, e.g. 1,200.30)'}
2023-01-25 19:37:50,217 - __main__ - INFO - 92 - <module>() - Predicting document 107...
2023-01-25 19:37:57,678 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:
Date of Receipt: <|stop key|>
Address of Company:
Total:

You may extract an object from the result set by adding / after <|stop key|>

If you are extracting a table, you must specify the delimiter / in the parameter set.

If you are extracting a column, you must specify the delimiter / in the parameter set.

You may also have to specify other delimiter:

/ for delimiting the cell values

/ for the line breaks

/ for the row breaks

/ for the table breaks

<
2023-01-25 19:37:57,679 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:37:57,680 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:37:57,680 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:37:57,680 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:37:57,680 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:37:57,681 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  <|stop key|>

2023-01-25 19:37:57,681 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: <|stop key|>
2023-01-25 19:37:57,681 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:37:57,682 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:37:57,682 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:37:57,682 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:37:57,682 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

You may extract an object from the result set by adding / after <|stop key|>

If you are extracting a table, you must specify the delimiter / in the parameter set.

If you are extracting a column, you must specify the delimiter / in the parameter set.

You may also have to specify other delimiter:

/ for delimiting the cell values

/ for the line breaks

/ for the row breaks

/ for the table breaks

<
2023-01-25 19:37:57,683 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: You may extract an object from the result set by adding / after <|stop key|> If you are extracting a table, you must specify the delimiter / in the parameter set. If you are extracting a column, you must specify the delimiter / in the parameter set. You may also have to specify other delimiter: / for delimiting the cell values / for the line breaks / for the row breaks / for the table breaks <
2023-01-25 19:37:57,683 - __main__ - INFO - 96 - <module>() - Final prediction for document 107: {'date': '<|stop key|>', 'total': 'You may extract an object from the result set by adding / after <|stop key|> If you are extracting a table, you must specify the delimiter / in the parameter set. If you are extracting a column, you must specify the delimiter / in the parameter set. You may also have to specify other delimiter: / for delimiting the cell values / for the line breaks / for the row breaks / for the table breaks <'}
2023-01-25 19:37:57,685 - __main__ - INFO - 92 - <module>() - Predicting document 108...
2023-01-25 19:38:05,212 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:
Date of Receipt:
Address of Company:
Total:

Input the value into a table. If the value has the special meaning, display the corresponding information in that row. If not, print the input in a sentence.

Input the number, '123456', and the special number 'NaN' in a table. Then, find out how many values are different between the two numbers (not including NaN).

This time we will be looking at the difference between two numbers using javascript, so you can try out something like this:
var num1 = 12;
var num2 = NaN;
2023-01-25 19:38:05,216 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:38:05,216 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:38:05,217 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:38:05,218 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:38:05,218 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:38:05,218 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:38:05,219 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:38:05,219 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:38:05,220 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:38:05,220 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:38:05,221 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:38:05,221 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

Input the value into a table. If the value has the special meaning, display the corresponding information in that row. If not, print the input in a sentence.

Input the number, '123456', and the special number 'NaN' in a table. Then, find out how many values are different between the two numbers (not including NaN).

This time we will be looking at the difference between two numbers using javascript, so you can try out something like this:
var num1 = 12;
var num2 = NaN;
2023-01-25 19:38:05,221 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Input the value into a table. If the value has the special meaning, display the corresponding information in that row. If not, print the input in a sentence. Input the number, '123456', and the special number 'NaN' in a table. Then, find out how many values are different between the two numbers (not including NaN). This time we will be looking at the difference between two numbers using javascript, so you can try out something like this: var num1 = 12; var num2 = NaN;
2023-01-25 19:38:05,222 - __main__ - INFO - 96 - <module>() - Final prediction for document 108: {'total': "Input the value into a table. If the value has the special meaning, display the corresponding information in that row. If not, print the input in a sentence. Input the number, '123456', and the special number 'NaN' in a table. Then, find out how many values are different between the two numbers (not including NaN). This time we will be looking at the difference between two numbers using javascript, so you can try out something like this: var num1 = 12; var num2 = NaN;"}
2023-01-25 19:38:05,229 - __main__ - INFO - 92 - <module>() - Predicting document 109...
2023-01-25 19:38:12,280 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  SANYU STATIONERY SDN BHD (1135772-K)
Total: 6.00
Address of Company: 1.3500
Date of Receipt: 17/11/2017

Print the values with the code above.

Create a new document and insert the values into it.

If you can't find a value replace it with ""

Save the values.

Save the code in your "My Documents"

Insert the following variables and paste it into the blank space in the code.

Now, you need to insert 2 new variables that are "Line
2023-01-25 19:38:12,282 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:38:12,282 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:38:12,282 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  SANYU STATIONERY SDN BHD (1135772-K)
Total: 6.00
Address of Company: 1.3500

2023-01-25 19:38:12,283 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: SANYU STATIONERY SDN BHD (1135772-K) Total: 6.00 Address of Company: 1.3500
2023-01-25 19:38:12,283 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:38:12,283 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  17/11/2017

Print the values with the code above.

Create a new document and insert the values into it.

If you can't find a value replace it with ""

Save the values.

Save the code in your "My Documents"

Insert the following variables and paste it into the blank space in the code.

Now, you need to insert 2 new variables that are "Line
2023-01-25 19:38:12,284 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 17/11/2017 Print the values with the code above. Create a new document and insert the values into it. If you can't find a value replace it with "" Save the values. Save the code in your "My Documents" Insert the following variables and paste it into the blank space in the code. Now, you need to insert 2 new variables that are "Line
2023-01-25 19:38:12,284 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:38:12,284 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  1.3500
Date of Receipt: 17/11/2017

Print the values with the code above.

Create a new document and insert the values into it.

If you can't find a value replace it with ""

Save the values.

Save the code in your "My Documents"

Insert the following variables and paste it into the blank space in the code.

Now, you need to insert 2 new variables that are "Line
2023-01-25 19:38:12,284 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 1.3500 Date of Receipt: 17/11/2017 Print the values with the code above. Create a new document and insert the values into it. If you can't find a value replace it with "" Save the values. Save the code in your "My Documents" Insert the following variables and paste it into the blank space in the code. Now, you need to insert 2 new variables that are "Line
2023-01-25 19:38:12,285 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:38:12,285 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  6.00
Address of Company: 1.3500
Date of Receipt: 17/11/2017

Print the values with the code above.

Create a new document and insert the values into it.

If you can't find a value replace it with ""

Save the values.

Save the code in your "My Documents"

Insert the following variables and paste it into the blank space in the code.

Now, you need to insert 2 new variables that are "Line
2023-01-25 19:38:12,285 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 6.00 Address of Company: 1.3500 Date of Receipt: 17/11/2017 Print the values with the code above. Create a new document and insert the values into it. If you can't find a value replace it with "" Save the values. Save the code in your "My Documents" Insert the following variables and paste it into the blank space in the code. Now, you need to insert 2 new variables that are "Line
2023-01-25 19:38:12,285 - __main__ - INFO - 96 - <module>() - Final prediction for document 109: {'company': 'SANYU STATIONERY SDN BHD (1135772-K) Total: 6.00 Address of Company: 1.3500', 'date': '17/11/2017 Print the values with the code above. Create a new document and insert the values into it. If you can\'t find a value replace it with "" Save the values. Save the code in your "My Documents" Insert the following variables and paste it into the blank space in the code. Now, you need to insert 2 new variables that are "Line', 'address': '1.3500 Date of Receipt: 17/11/2017 Print the values with the code above. Create a new document and insert the values into it. If you can\'t find a value replace it with "" Save the values. Save the code in your "My Documents" Insert the following variables and paste it into the blank space in the code. Now, you need to insert 2 new variables that are "Line', 'total': '6.00 Address of Company: 1.3500 Date of Receipt: 17/11/2017 Print the values with the code above. Create a new document and insert the values into it. If you can\'t find a value replace it with "" Save the values. Save the code in your "My Documents" Insert the following variables and paste it into the blank space in the code. Now, you need to insert 2 new variables that are "Line'}
2023-01-25 19:38:12,288 - __main__ - INFO - 92 - <module>() - Predicting document 110...
2023-01-25 19:38:20,012 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  Company name
Date of receipt: Date received
Address of Company: Address of company
Total: Total
If the date of receipt has a dash and/or a slanted line over it
(ex. 04/12/05) you must use the first date available and remove
the dash and/or slanted line to the left of the date. If a price
has a dash and/or slanted line over it and the dash is in the
middle of a number (ex. 2-50) this is ok but please double check
the first price on the same line and remove the dash.

2023-01-25 19:38:20,012 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:38:20,012 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:38:20,013 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Company name

2023-01-25 19:38:20,013 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Company name
2023-01-25 19:38:20,013 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:38:20,013 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Date received

2023-01-25 19:38:20,013 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Date received
2023-01-25 19:38:20,013 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:38:20,014 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Address of company

2023-01-25 19:38:20,014 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Address of company
2023-01-25 19:38:20,014 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:38:20,014 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Total
If the date of receipt has a dash and/or a slanted line over it
(ex. 04/12/05) you must use the first date available and remove
the dash and/or slanted line to the left of the date. If a price
has a dash and/or slanted line over it and the dash is in the
middle of a number (ex. 2-50) this is ok but please double check
the first price on the same line and remove the dash.

2023-01-25 19:38:20,014 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Total If the date of receipt has a dash and/or a slanted line over it (ex. 04/12/05) you must use the first date available and remove the dash and/or slanted line to the left of the date. If a price has a dash and/or slanted line over it and the dash is in the middle of a number (ex. 2-50) this is ok but please double check the first price on the same line and remove the dash.
2023-01-25 19:38:20,014 - __main__ - INFO - 96 - <module>() - Final prediction for document 110: {'company': 'Company name', 'date': 'Date received', 'address': 'Address of company', 'total': 'Total If the date of receipt has a dash and/or a slanted line over it (ex. 04/12/05) you must use the first date available and remove the dash and/or slanted line to the left of the date. If a price has a dash and/or slanted line over it and the dash is in the middle of a number (ex. 2-50) this is ok but please double check the first price on the same line and remove the dash.'}
2023-01-25 19:38:20,016 - __main__ - INFO - 92 - <module>() - Predicting document 111...
2023-01-25 19:38:27,131 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  ************* (or the full name of the company)
Date of Receipt: 31/08/2017
Address of Company: Jalan Puchong (4-4-6), Grosir Timur, 48000 Petaling Jaya
Total: 1.52
GST: -0.10
Total GST: -0.10

I am getting error for line 1 of my code. (I am very new at Java). It is complaining about a number. It is telling me that i cannot have a number for the first field in the csv file. Is there a way I can fix
2023-01-25 19:38:27,133 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:38:27,133 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:38:27,134 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  ************* (or the full name of the company)

2023-01-25 19:38:27,134 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: ************* (or the full name of the company)
2023-01-25 19:38:27,134 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:38:27,135 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  31/08/2017

2023-01-25 19:38:27,135 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 31/08/2017
2023-01-25 19:38:27,135 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:38:27,135 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Jalan Puchong (4-4-6), Grosir Timur, 48000 Petaling Jaya

2023-01-25 19:38:27,136 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Jalan Puchong (4-4-6), Grosir Timur, 48000 Petaling Jaya
2023-01-25 19:38:27,136 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:38:27,136 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  1.52
GST: -0.10
Total GST: -0.10

I am getting error for line 1 of my code. (I am very new at Java). It is complaining about a number. It is telling me that i cannot have a number for the first field in the csv file. Is there a way I can fix
2023-01-25 19:38:27,137 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 1.52 GST: -0.10 Total GST: -0.10 I am getting error for line 1 of my code. (I am very new at Java). It is complaining about a number. It is telling me that i cannot have a number for the first field in the csv file. Is there a way I can fix
2023-01-25 19:38:27,137 - __main__ - INFO - 96 - <module>() - Final prediction for document 111: {'company': '************* (or the full name of the company)', 'date': '31/08/2017', 'address': 'Jalan Puchong (4-4-6), Grosir Timur, 48000 Petaling Jaya', 'total': '1.52 GST: -0.10 Total GST: -0.10 I am getting error for line 1 of my code. (I am very new at Java). It is complaining about a number. It is telling me that i cannot have a number for the first field in the csv file. Is there a way I can fix'}
2023-01-25 19:38:27,138 - __main__ - INFO - 92 - <module>() - Predicting document 112...
2023-01-25 19:38:30,189 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  Ningbo Risheng Huamei Electric Co., Ltd.
Date of Receipt: 12/05/2016
Address of Company: Ningbo, China
Total: 2400.00
2023-01-25 19:38:30,190 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:38:30,190 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:38:30,191 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Ningbo Risheng Huamei Electric Co., Ltd.

2023-01-25 19:38:30,191 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Ningbo Risheng Huamei Electric Co., Ltd.
2023-01-25 19:38:30,191 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:38:30,192 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  12/05/2016

2023-01-25 19:38:30,192 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 12/05/2016
2023-01-25 19:38:30,192 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:38:30,192 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Ningbo, China

2023-01-25 19:38:30,193 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Ningbo, China
2023-01-25 19:38:30,193 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:38:30,193 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  2400.00
2023-01-25 19:38:30,193 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 2400.00
2023-01-25 19:38:30,194 - __main__ - INFO - 96 - <module>() - Final prediction for document 112: {'company': 'Ningbo Risheng Huamei Electric Co., Ltd.', 'date': '12/05/2016', 'address': 'Ningbo, China', 'total': '2400.00'}
2023-01-25 19:38:30,195 - __main__ - INFO - 92 - <module>() - Predicting document 113...
2023-01-25 19:38:33,856 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  Sanyu
Date of Receipt: 09/24/2017
Address of Company: #30, Jalan Setia Indah, Semenyih, Selangor, 48000
Total: 8.70
2023-01-25 19:38:33,857 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:38:33,857 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:38:33,857 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Sanyu

2023-01-25 19:38:33,858 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Sanyu
2023-01-25 19:38:33,858 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:38:33,858 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  09/24/2017

2023-01-25 19:38:33,858 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 09/24/2017
2023-01-25 19:38:33,859 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:38:33,859 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  #30, Jalan Setia Indah, Semenyih, Selangor, 48000

2023-01-25 19:38:33,859 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: #30, Jalan Setia Indah, Semenyih, Selangor, 48000
2023-01-25 19:38:33,859 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:38:33,860 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  8.70
2023-01-25 19:38:33,860 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 8.70
2023-01-25 19:38:33,860 - __main__ - INFO - 96 - <module>() - Final prediction for document 113: {'company': 'Sanyu', 'date': '09/24/2017', 'address': '#30, Jalan Setia Indah, Semenyih, Selangor, 48000', 'total': '8.70'}
2023-01-25 19:38:33,862 - __main__ - INFO - 92 - <module>() - Predicting document 114...
2023-01-25 19:38:35,692 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:
Date of Receipt:
Address of Company:
Total:
2023-01-25 19:38:35,693 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:38:35,693 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:38:35,694 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:38:35,694 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:38:35,694 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:38:35,695 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:38:35,695 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:38:35,695 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:38:35,696 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:38:35,696 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:38:35,696 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:38:35,696 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:
2023-01-25 19:38:35,697 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:38:35,697 - __main__ - INFO - 96 - <module>() - Final prediction for document 114: {}
2023-01-25 19:38:35,699 - __main__ - INFO - 92 - <module>() - Predicting document 115...
2023-01-25 19:38:42,655 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  Company Name
Date of Receipt: 4/1/2019
Address of Company: 1 Main Street
Total: $1,700

Create a new list with the name of "Invoice Summary". Copy and paste the list from the previous step.

Create a new list with the name of "Invoice Summary". Copy and paste the list from the previous step.

Use XtractText Extract and Split functions on the 'Receipts' tab to split the Receipts column into different columns.

Use the "Value" column to create a new 'Customer Number' column on the 'Custom
2023-01-25 19:38:42,656 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:38:42,656 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:38:42,656 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Company Name

2023-01-25 19:38:42,657 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Company Name
2023-01-25 19:38:42,657 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:38:42,657 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  4/1/2019

2023-01-25 19:38:42,657 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 4/1/2019
2023-01-25 19:38:42,658 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:38:42,658 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  1 Main Street

2023-01-25 19:38:42,658 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 1 Main Street
2023-01-25 19:38:42,658 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:38:42,658 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  $1,700

Create a new list with the name of "Invoice Summary". Copy and paste the list from the previous step.

Create a new list with the name of "Invoice Summary". Copy and paste the list from the previous step.

Use XtractText Extract and Split functions on the 'Receipts' tab to split the Receipts column into different columns.

Use the "Value" column to create a new 'Customer Number' column on the 'Custom
2023-01-25 19:38:42,659 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: $1,700 Create a new list with the name of "Invoice Summary". Copy and paste the list from the previous step. Create a new list with the name of "Invoice Summary". Copy and paste the list from the previous step. Use XtractText Extract and Split functions on the 'Receipts' tab to split the Receipts column into different columns. Use the "Value" column to create a new 'Customer Number' column on the 'Custom
2023-01-25 19:38:42,659 - __main__ - INFO - 96 - <module>() - Final prediction for document 115: {'company': 'Company Name', 'date': '4/1/2019', 'address': '1 Main Street', 'total': '$1,700 Create a new list with the name of "Invoice Summary". Copy and paste the list from the previous step. Create a new list with the name of "Invoice Summary". Copy and paste the list from the previous step. Use XtractText Extract and Split functions on the \'Receipts\' tab to split the Receipts column into different columns. Use the "Value" column to create a new \'Customer Number\' column on the \'Custom'}
2023-01-25 19:38:42,661 - __main__ - INFO - 92 - <module>() - Predicting document 116...
2023-01-25 19:38:50,840 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:
Date of Receipt:
Address of Company:
Total: <|stop key|>

This is a sample report. Do not enter any data in this field. Leave it blank. You can always add values to this field later.

Please enter the name of the company you want to pay.

Please select the value in the Drop Down List next to "Address".

Please enter the values in the Payment Table.

Please select the value in the Drop Down List next to "Total".

Please select the value in the Drop Down List next to "Account".

Please select
2023-01-25 19:38:50,840 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:38:50,841 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:38:50,841 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:38:50,841 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:38:50,842 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:38:50,842 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:38:50,842 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:38:50,842 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:38:50,843 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:38:50,843 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:38:50,843 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:38:50,844 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  <|stop key|>

This is a sample report. Do not enter any data in this field. Leave it blank. You can always add values to this field later.

Please enter the name of the company you want to pay.

Please select the value in the Drop Down List next to "Address".

Please enter the values in the Payment Table.

Please select the value in the Drop Down List next to "Total".

Please select the value in the Drop Down List next to "Account".

Please select
2023-01-25 19:38:50,844 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: <|stop key|> This is a sample report. Do not enter any data in this field. Leave it blank. You can always add values to this field later. Please enter the name of the company you want to pay. Please select the value in the Drop Down List next to "Address". Please enter the values in the Payment Table. Please select the value in the Drop Down List next to "Total". Please select the value in the Drop Down List next to "Account". Please select
2023-01-25 19:38:50,844 - __main__ - INFO - 96 - <module>() - Final prediction for document 116: {'total': '<|stop key|> This is a sample report. Do not enter any data in this field. Leave it blank. You can always add values to this field later. Please enter the name of the company you want to pay. Please select the value in the Drop Down List next to "Address". Please enter the values in the Payment Table. Please select the value in the Drop Down List next to "Total". Please select the value in the Drop Down List next to "Account". Please select'}
2023-01-25 19:38:50,846 - __main__ - INFO - 92 - <module>() - Predicting document 117...
2023-01-25 19:38:58,239 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:
Date of Receipt:
Address of Company:
Total: <|stop key|>

If any of the four elements are missing you should use the "null" value.

Insert the extracted data in to the form
1. The value in the third column (Value 1) is the one you want to match against.
2. The value in the first column (Code 1) should be the "Company Code"
3. The first row of the "B1" section shows what you should put there. If the data is not there you can insert a default value such as "Name of
2023-01-25 19:38:58,240 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:38:58,240 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:38:58,240 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:38:58,240 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:38:58,240 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:38:58,240 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:38:58,241 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:38:58,241 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:38:58,241 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:38:58,241 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:38:58,241 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:38:58,241 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  <|stop key|>

If any of the four elements are missing you should use the "null" value.

Insert the extracted data in to the form
1. The value in the third column (Value 1) is the one you want to match against.
2. The value in the first column (Code 1) should be the "Company Code"
3. The first row of the "B1" section shows what you should put there. If the data is not there you can insert a default value such as "Name of
2023-01-25 19:38:58,241 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: <|stop key|> If any of the four elements are missing you should use the "null" value. Insert the extracted data in to the form 1. The value in the third column (Value 1) is the one you want to match against. 2. The value in the first column (Code 1) should be the "Company Code" 3. The first row of the "B1" section shows what you should put there. If the data is not there you can insert a default value such as "Name of
2023-01-25 19:38:58,241 - __main__ - INFO - 96 - <module>() - Final prediction for document 117: {'total': '<|stop key|> If any of the four elements are missing you should use the "null" value. Insert the extracted data in to the form 1. The value in the third column (Value 1) is the one you want to match against. 2. The value in the first column (Code 1) should be the "Company Code" 3. The first row of the "B1" section shows what you should put there. If the data is not there you can insert a default value such as "Name of'}
2023-01-25 19:38:58,243 - __main__ - INFO - 92 - <module>() - Predicting document 118...
2023-01-25 19:39:05,241 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:
Invoice No:
Date of Receipt:
Address of Company:
Total:

In this exercise we're going to take a look at some simple regular expressions and demonstrate some of their usage.
First of all, the basics. What is a regex? It's a pattern used to match strings. A good regex engine does a lot of fancy things to make it easier for us to write regex's and much easier for us to read them. Here's a simple regex pattern I made for the exercise:
/^ZRL$/i

Here's how I read this regex:
^ means start of
2023-01-25 19:39:05,241 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:39:05,241 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:39:05,241 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:
Invoice No:

2023-01-25 19:39:05,242 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Invoice No:
2023-01-25 19:39:05,242 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:39:05,242 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:39:05,242 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:39:05,242 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:39:05,242 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:39:05,242 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:39:05,242 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:39:05,242 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

In this exercise we're going to take a look at some simple regular expressions and demonstrate some of their usage.
First of all, the basics. What is a regex? It's a pattern used to match strings. A good regex engine does a lot of fancy things to make it easier for us to write regex's and much easier for us to read them. Here's a simple regex pattern I made for the exercise:
/^ZRL$/i

Here's how I read this regex:
^ means start of
2023-01-25 19:39:05,242 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: In this exercise we're going to take a look at some simple regular expressions and demonstrate some of their usage. First of all, the basics. What is a regex? It's a pattern used to match strings. A good regex engine does a lot of fancy things to make it easier for us to write regex's and much easier for us to read them. Here's a simple regex pattern I made for the exercise: /^ZRL$/i Here's how I read this regex: ^ means start of
2023-01-25 19:39:05,243 - __main__ - INFO - 96 - <module>() - Final prediction for document 118: {'company': 'Invoice No:', 'total': "In this exercise we're going to take a look at some simple regular expressions and demonstrate some of their usage. First of all, the basics. What is a regex? It's a pattern used to match strings. A good regex engine does a lot of fancy things to make it easier for us to write regex's and much easier for us to read them. Here's a simple regex pattern I made for the exercise: /^ZRL$/i Here's how I read this regex: ^ means start of"}
2023-01-25 19:39:05,243 - __main__ - INFO - 92 - <module>() - Predicting document 119...
2023-01-25 19:39:06,865 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:

Date of Receipt:

Address of Company:

Total:

2023-01-25 19:39:06,865 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:39:06,865 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:39:06,865 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:


2023-01-25 19:39:06,865 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:39:06,865 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:39:06,865 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:


2023-01-25 19:39:06,865 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:39:06,866 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:39:06,866 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:


2023-01-25 19:39:06,866 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:39:06,866 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:39:06,866 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:39:06,866 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:39:06,866 - __main__ - INFO - 96 - <module>() - Final prediction for document 119: {}
2023-01-25 19:39:06,867 - __main__ - INFO - 92 - <module>() - Predicting document 120...
2023-01-25 19:39:14,689 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  AEBON CO. (M) BHD
Date of Receipt:
Address of Company: JLN JEJAKA, TAMAN MALURI
Total: 0

The "Total" section of the above code is just a simple string containing the word "null" in order to keep the code short. However the real number value should be inserted into the real total field by using the "setValue()" method on the "$i" object.

The "Date of Receipt" section of the above code uses the "Extract" field to look for the "Date of Receipt" field from
2023-01-25 19:39:14,690 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:39:14,690 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:39:14,691 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  AEBON CO. (M) BHD

2023-01-25 19:39:14,691 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: AEBON CO. (M) BHD
2023-01-25 19:39:14,691 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:39:14,692 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:39:14,692 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:39:14,692 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:39:14,692 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  JLN JEJAKA, TAMAN MALURI

2023-01-25 19:39:14,693 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: JLN JEJAKA, TAMAN MALURI
2023-01-25 19:39:14,693 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:39:14,693 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  0

The "Total" section of the above code is just a simple string containing the word "null" in order to keep the code short. However the real number value should be inserted into the real total field by using the "setValue()" method on the "$i" object.

The "Date of Receipt" section of the above code uses the "Extract" field to look for the "Date of Receipt" field from
2023-01-25 19:39:14,693 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 0 The "Total" section of the above code is just a simple string containing the word "null" in order to keep the code short. However the real number value should be inserted into the real total field by using the "setValue()" method on the "$i" object. The "Date of Receipt" section of the above code uses the "Extract" field to look for the "Date of Receipt" field from
2023-01-25 19:39:14,694 - __main__ - INFO - 96 - <module>() - Final prediction for document 120: {'company': 'AEBON CO. (M) BHD', 'address': 'JLN JEJAKA, TAMAN MALURI', 'total': '0 The "Total" section of the above code is just a simple string containing the word "null" in order to keep the code short. However the real number value should be inserted into the real total field by using the "setValue()" method on the "$i" object. The "Date of Receipt" section of the above code uses the "Extract" field to look for the "Date of Receipt" field from'}
2023-01-25 19:39:14,696 - __main__ - INFO - 92 - <module>() - Predicting document 121...
2023-01-25 19:39:17,537 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  Cedric Lee
Date of Receipt: 3.15.2019
Address of Company: 5 Jalan Kelod
Total: RM3.99
You have received RM3.99

2023-01-25 19:39:17,537 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:39:17,537 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:39:17,538 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Cedric Lee

2023-01-25 19:39:17,538 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Cedric Lee
2023-01-25 19:39:17,538 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:39:17,538 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  3.15.2019

2023-01-25 19:39:17,538 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 3.15.2019
2023-01-25 19:39:17,539 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:39:17,539 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  5 Jalan Kelod

2023-01-25 19:39:17,539 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 5 Jalan Kelod
2023-01-25 19:39:17,539 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:39:17,539 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  RM3.99
You have received RM3.99

2023-01-25 19:39:17,540 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: RM3.99 You have received RM3.99
2023-01-25 19:39:17,540 - __main__ - INFO - 96 - <module>() - Final prediction for document 121: {'company': 'Cedric Lee', 'date': '3.15.2019', 'address': '5 Jalan Kelod', 'total': 'RM3.99 You have received RM3.99'}
2023-01-25 19:39:17,541 - __main__ - INFO - 92 - <module>() - Predicting document 122...
2023-01-25 19:39:24,896 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  abcde
Date of Receipt: 31/03/2017
Address of Company: xyz
Total: 12.15

Extract all the lines that have "Company Name", "Tax/Amount", "Tax Rate", "GST" in the following way:

Key:
Value:
Name:
Code:
Explanation:
GST NO: 000988880896
Value: 12.15

Extract all the lines that have "Company Name", "Total", "<|stop key|>" in the following way:

Key: Value

2023-01-25 19:39:24,898 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:39:24,898 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:39:24,899 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  abcde

2023-01-25 19:39:24,899 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: abcde
2023-01-25 19:39:24,899 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:39:24,900 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  31/03/2017

2023-01-25 19:39:24,900 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 31/03/2017
2023-01-25 19:39:24,900 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:39:24,901 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  xyz

2023-01-25 19:39:24,901 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: xyz
2023-01-25 19:39:24,901 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:39:24,901 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  12.15

Extract all the lines that have "Company Name", "Tax/Amount", "Tax Rate", "GST" in the following way:

Key:
Value:
Name:
Code:
Explanation:
GST NO: 000988880896
Value: 12.15

Extract all the lines that have "Company Name", "Total", "<|stop key|>" in the following way:

Key: Value

2023-01-25 19:39:24,902 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 12.15 Extract all the lines that have "Company Name", "Tax/Amount", "Tax Rate", "GST" in the following way: Key: Value: Name: Code: Explanation: GST NO: 000988880896 Value: 12.15 Extract all the lines that have "Company Name", "Total", "<|stop key|>" in the following way: Key: Value
2023-01-25 19:39:24,902 - __main__ - INFO - 96 - <module>() - Final prediction for document 122: {'company': 'abcde', 'date': '31/03/2017', 'address': 'xyz', 'total': '12.15 Extract all the lines that have "Company Name", "Tax/Amount", "Tax Rate", "GST" in the following way: Key: Value: Name: Code: Explanation: GST NO: 000988880896 Value: 12.15 Extract all the lines that have "Company Name", "Total", "<|stop key|>" in the following way: Key: Value'}
2023-01-25 19:39:24,905 - __main__ - INFO - 92 - <module>() - Predicting document 123...
2023-01-25 19:39:31,750 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  COMPANY NO 000260571136
DOB: 08/28/2008
M/ROOM CHIC (RICE)
1
1
RM
RM
RM
RM
RM
RM
RM
RM
RM
RM
RM
RM
RM
RM
RM
RM
RM
RM
RM
RM
RM
RM
RM
RM
RM
RM
RM
RM
RM
RM
RM
RM
RM
RM
RM
RM
RM
RM
RM
RM
RM
RM
RM
RM
RM
RM
RM
RM
2023-01-25 19:39:31,751 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:39:31,751 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:39:31,751 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  COMPANY NO 000260571136
DOB: 08/28/2008
M/ROOM CHIC (RICE)
1
1
RM
RM
RM
RM
RM
RM
RM
RM
RM
RM
RM
RM
RM
RM
RM
RM
RM
RM
RM
RM
RM
RM
RM
RM
RM
RM
RM
RM
RM
RM
RM
RM
RM
RM
RM
RM
RM
RM
RM
RM
RM
RM
RM
RM
RM
RM
RM
RM
2023-01-25 19:39:31,752 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: COMPANY NO 000260571136 DOB: 08/28/2008 M/ROOM CHIC (RICE) 1 1 RM RM RM RM RM RM RM RM RM RM RM RM RM RM RM RM RM RM RM RM RM RM RM RM RM RM RM RM RM RM RM RM RM RM RM RM RM RM RM RM RM RM RM RM RM RM RM RM
2023-01-25 19:39:31,752 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:39:31,752 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:39:31,752 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:39:31,753 - __main__ - INFO - 96 - <module>() - Final prediction for document 123: {'company': 'COMPANY NO 000260571136 DOB: 08/28/2008 M/ROOM CHIC (RICE) 1 1 RM RM RM RM RM RM RM RM RM RM RM RM RM RM RM RM RM RM RM RM RM RM RM RM RM RM RM RM RM RM RM RM RM RM RM RM RM RM RM RM RM RM RM RM RM RM RM RM'}
2023-01-25 19:39:31,761 - __main__ - INFO - 92 - <module>() - Predicting document 124...
2023-01-25 19:39:34,054 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  "Name of Company"
Date of Receipt: "date"
Address of Company: "Street name, Postal code"
Total: Total amount of sales
2023-01-25 19:39:34,054 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:39:34,054 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:39:34,055 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  "Name of Company"

2023-01-25 19:39:34,055 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Name of Company
2023-01-25 19:39:34,055 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:39:34,055 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  "date"

2023-01-25 19:39:34,055 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: date
2023-01-25 19:39:34,055 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:39:34,055 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  "Street name, Postal code"

2023-01-25 19:39:34,055 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Street name, Postal code
2023-01-25 19:39:34,056 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:39:34,056 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Total amount of sales
2023-01-25 19:39:34,056 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Total amount of sales
2023-01-25 19:39:34,056 - __main__ - INFO - 96 - <module>() - Final prediction for document 124: {'company': 'Name of Company', 'date': 'date', 'address': 'Street name, Postal code', 'total': 'Total amount of sales'}
2023-01-25 19:39:34,057 - __main__ - INFO - 92 - <module>() - Predicting document 125...
2023-01-25 19:39:41,125 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  PERSILI
Date of Receipt:
Address of Company: PERMAS JAYA, MARRAMA, TUKO TOWN, JOHOR
Total: 1.500.000

Key: Value
Company Name: JELITA STESEN MINYAK
Date of Receipt: 02/05/18 08:55
Address of Company: PERMAS JAYA, MARRAMA, TUKO TOWN, JOHOR
Total: 1.500.000

Key: Value
Company Name: JLN PERMAS 9/5, BDR
2023-01-25 19:39:41,129 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:39:41,129 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:39:41,130 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  PERSILI

2023-01-25 19:39:41,130 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: PERSILI
2023-01-25 19:39:41,131 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:39:41,131 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:39:41,131 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:39:41,131 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:39:41,132 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  PERMAS JAYA, MARRAMA, TUKO TOWN, JOHOR

2023-01-25 19:39:41,132 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: PERMAS JAYA, MARRAMA, TUKO TOWN, JOHOR
2023-01-25 19:39:41,132 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:39:41,133 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  1.500.000

Key: Value
Company Name: JELITA STESEN MINYAK
Date of Receipt: 02/05/18 08:55
Address of Company: PERMAS JAYA, MARRAMA, TUKO TOWN, JOHOR

2023-01-25 19:39:41,133 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 1.500.000 Key: Value Company Name: JELITA STESEN MINYAK Date of Receipt: 02/05/18 08:55 Address of Company: PERMAS JAYA, MARRAMA, TUKO TOWN, JOHOR
2023-01-25 19:39:41,133 - __main__ - INFO - 96 - <module>() - Final prediction for document 125: {'company': 'PERSILI', 'address': 'PERMAS JAYA, MARRAMA, TUKO TOWN, JOHOR', 'total': '1.500.000 Key: Value Company Name: JELITA STESEN MINYAK Date of Receipt: 02/05/18 08:55 Address of Company: PERMAS JAYA, MARRAMA, TUKO TOWN, JOHOR'}
2023-01-25 19:39:41,138 - __main__ - INFO - 92 - <module>() - Predicting document 126...
2023-01-25 19:39:45,558 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  SIN LIANHAP SDN BHD
Date of Receipt: 2018-03-01
Address of Company: Jalan Batu 30, Sungai Ulu Yam Lama, Sungai Buloh, Selangor Darul Ehsan
Total: 7.30
2023-01-25 19:39:45,559 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:39:45,559 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:39:45,560 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  SIN LIANHAP SDN BHD

2023-01-25 19:39:45,560 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: SIN LIANHAP SDN BHD
2023-01-25 19:39:45,560 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:39:45,561 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  2018-03-01

2023-01-25 19:39:45,561 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 2018-03-01
2023-01-25 19:39:45,561 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:39:45,562 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Jalan Batu 30, Sungai Ulu Yam Lama, Sungai Buloh, Selangor Darul Ehsan

2023-01-25 19:39:45,562 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Jalan Batu 30, Sungai Ulu Yam Lama, Sungai Buloh, Selangor Darul Ehsan
2023-01-25 19:39:45,562 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:39:45,562 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  7.30
2023-01-25 19:39:45,563 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 7.30
2023-01-25 19:39:45,563 - __main__ - INFO - 96 - <module>() - Final prediction for document 126: {'company': 'SIN LIANHAP SDN BHD', 'date': '2018-03-01', 'address': 'Jalan Batu 30, Sungai Ulu Yam Lama, Sungai Buloh, Selangor Darul Ehsan', 'total': '7.30'}
2023-01-25 19:39:45,565 - __main__ - INFO - 92 - <module>() - Predicting document 127...
2023-01-25 19:39:53,190 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document: Company Name<|stop key|>
Date of Receipt:Date of Receipt<|stop key|>
Address of Company:Address of Company<|stop key|>
Total:Total<|stop key|>
Total (inclusive of GST and exclusive of other tax payable)
Tax Free:Tax Free<|stop key|>
TAX FREE :YES<|stop key|>

Note that the information on the invoice document is usually from the invoice you received.

If you need the information about what you paid to the seller then do a Tax refund form. (For more
2023-01-25 19:39:53,191 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:39:53,191 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:39:53,192 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value: Company Name<|stop key|>

2023-01-25 19:39:53,192 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Company Name<|stop key|>
2023-01-25 19:39:53,192 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:39:53,192 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value: Date of Receipt<|stop key|>

2023-01-25 19:39:53,192 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Date of Receipt<|stop key|>
2023-01-25 19:39:53,192 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:39:53,193 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value: Address of Company<|stop key|>

2023-01-25 19:39:53,193 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Address of Company<|stop key|>
2023-01-25 19:39:53,193 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:39:53,193 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value: Total<|stop key|>
Total (inclusive of GST and exclusive of other tax payable)
Tax Free:Tax Free<|stop key|>
TAX FREE :YES<|stop key|>

Note that the information on the invoice document is usually from the invoice you received.

If you need the information about what you paid to the seller then do a Tax refund form. (For more
2023-01-25 19:39:53,193 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Total<|stop key|> Total (inclusive of GST and exclusive of other tax payable) Tax Free:Tax Free<|stop key|> TAX FREE :YES<|stop key|> Note that the information on the invoice document is usually from the invoice you received. If you need the information about what you paid to the seller then do a Tax refund form. (For more
2023-01-25 19:39:53,193 - __main__ - INFO - 96 - <module>() - Final prediction for document 127: {'company': 'Company Name<|stop key|>', 'date': 'Date of Receipt<|stop key|>', 'address': 'Address of Company<|stop key|>', 'total': 'Total<|stop key|> Total (inclusive of GST and exclusive of other tax payable) Tax Free:Tax Free<|stop key|> TAX FREE :YES<|stop key|> Note that the information on the invoice document is usually from the invoice you received. If you need the information about what you paid to the seller then do a Tax refund form. (For more'}
2023-01-25 19:39:53,194 - __main__ - INFO - 92 - <module>() - Predicting document 128...
2023-01-25 19:40:00,719 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  <cname>
Date of Receipt: <doa>
Address of Company: <addr>
Total: <total>
Exc VAT: <exc_vat>
SGST: <sgst>
GST: <gst>
TAX: <tax>
PRICE: <price>
SUPPLIES: <supplies>
Amount Due: <amt>
Tax Invoiced: <amount_invoiced>
Tax Payable: <amount_payable>
Exc. Tax Received: <amount_invoiced>
Supplier
2023-01-25 19:40:00,720 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:40:00,721 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:40:00,721 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  <cname>

2023-01-25 19:40:00,721 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: <cname>
2023-01-25 19:40:00,721 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:40:00,722 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  <doa>

2023-01-25 19:40:00,722 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: <doa>
2023-01-25 19:40:00,722 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:40:00,723 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  <addr>

2023-01-25 19:40:00,723 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: <addr>
2023-01-25 19:40:00,723 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:40:00,723 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  <total>
Exc VAT: <exc_vat>
SGST: <sgst>
GST: <gst>
TAX: <tax>
PRICE: <price>
SUPPLIES: <supplies>
Amount Due: <amt>
Tax Invoiced: <amount_invoiced>
Tax Payable: <amount_payable>
Exc. Tax Received: <amount_invoiced>
Supplier
2023-01-25 19:40:00,724 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: <total> Exc VAT: <exc_vat> SGST: <sgst> GST: <gst> TAX: <tax> PRICE: <price> SUPPLIES: <supplies> Amount Due: <amt> Tax Invoiced: <amount_invoiced> Tax Payable: <amount_payable> Exc. Tax Received: <amount_invoiced> Supplier
2023-01-25 19:40:00,724 - __main__ - INFO - 96 - <module>() - Final prediction for document 128: {'company': '<cname>', 'date': '<doa>', 'address': '<addr>', 'total': '<total> Exc VAT: <exc_vat> SGST: <sgst> GST: <gst> TAX: <tax> PRICE: <price> SUPPLIES: <supplies> Amount Due: <amt> Tax Invoiced: <amount_invoiced> Tax Payable: <amount_payable> Exc. Tax Received: <amount_invoiced> Supplier'}
2023-01-25 19:40:00,726 - __main__ - INFO - 92 - <module>() - Predicting document 129...
2023-01-25 19:40:02,699 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:
Date of Receipt:
Address of Company:
Total:
2023-01-25 19:40:02,699 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:40:02,699 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:40:02,699 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:40:02,700 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:40:02,700 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:40:02,700 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:40:02,700 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:40:02,700 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:40:02,700 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:40:02,700 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:40:02,700 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:40:02,701 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:
2023-01-25 19:40:02,701 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:40:02,701 - __main__ - INFO - 96 - <module>() - Final prediction for document 129: {}
2023-01-25 19:40:02,702 - __main__ - INFO - 92 - <module>() - Predicting document 130...
2023-01-25 19:40:10,058 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  TAX INVOICE
LA STATIONERY SDN BHD (640899-P)
NO.8, JALAN 46/26,
TAMAN SRI RAMPAI.
53300 KUALA LUMPUR.
TEL NO. : 03-4023 0088
GST REG. : 001542721536
INVOICE NO. :
T01-006194
DATE:
09/02/2018 09:21:19AM
TERMINAL :
T01
CASHIER :
VICKIE
DESC
U. PRICE
2023-01-25 19:40:10,059 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:40:10,060 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:40:10,060 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  TAX INVOICE
LA STATIONERY SDN BHD (640899-P)
NO.8, JALAN 46/26,
TAMAN SRI RAMPAI.
53300 KUALA LUMPUR.
TEL NO. : 03-4023 0088
GST REG. : 001542721536
INVOICE NO. :
T01-006194
DATE:
09/02/2018 09:21:19AM
TERMINAL :
T01
CASHIER :
VICKIE
DESC
U. PRICE
2023-01-25 19:40:10,060 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: TAX INVOICE LA STATIONERY SDN BHD (640899-P) NO.8, JALAN 46/26, TAMAN SRI RAMPAI. 53300 KUALA LUMPUR. TEL NO. : 03-4023 0088 GST REG. : 001542721536 INVOICE NO. : T01-006194 DATE: 09/02/2018 09:21:19AM TERMINAL : T01 CASHIER : VICKIE DESC U. PRICE
2023-01-25 19:40:10,061 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:40:10,061 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:40:10,061 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:40:10,061 - __main__ - INFO - 96 - <module>() - Final prediction for document 130: {'company': 'TAX INVOICE LA STATIONERY SDN BHD (640899-P) NO.8, JALAN 46/26, TAMAN SRI RAMPAI. 53300 KUALA LUMPUR. TEL NO. : 03-4023 0088 GST REG. : 001542721536 INVOICE NO. : T01-006194 DATE: 09/02/2018 09:21:19AM TERMINAL : T01 CASHIER : VICKIE DESC U. PRICE'}
2023-01-25 19:40:10,065 - __main__ - INFO - 92 - <module>() - Predicting document 131...
2023-01-25 19:40:12,143 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  ABC Company
Date of Receipt: 28/12/2017 10:50
Address of Company:
Total: 38.15
Stop key:
2023-01-25 19:40:12,144 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:40:12,144 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:40:12,144 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  ABC Company

2023-01-25 19:40:12,145 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: ABC Company
2023-01-25 19:40:12,145 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:40:12,145 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  28/12/2017 10:50

2023-01-25 19:40:12,145 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 28/12/2017 10:50
2023-01-25 19:40:12,146 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:40:12,146 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:40:12,146 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:40:12,146 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:40:12,146 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  38.15
Stop key:
2023-01-25 19:40:12,147 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 38.15 Stop key:
2023-01-25 19:40:12,147 - __main__ - INFO - 96 - <module>() - Final prediction for document 131: {'company': 'ABC Company', 'date': '28/12/2017 10:50', 'total': '38.15 Stop key:'}
2023-01-25 19:40:12,148 - __main__ - INFO - 92 - <module>() - Predicting document 132...
2023-01-25 19:40:19,479 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:
Total
0

You have made a valid entry.

:

<http://www.pcl.com.my>

:

<http://www.pcl.com.my>

:

<http://www.pcl.com.my>

:

<http://www.pcl.com.my>

:

<http://www.pcl.com.my>

:

<http://www.pcl.com.my>

:

<http://www.pcl.
2023-01-25 19:40:19,480 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:40:19,480 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:40:19,480 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:
Total
0

You have made a valid entry.

:

<http://www.pcl.com.my>

:

<http://www.pcl.com.my>

:

<http://www.pcl.com.my>

:

<http://www.pcl.com.my>

:

<http://www.pcl.com.my>

:

<http://www.pcl.com.my>

:

<http://www.pcl.
2023-01-25 19:40:19,481 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Total 0 You have made a valid entry. : <http://www.pcl.com.my> : <http://www.pcl.com.my> : <http://www.pcl.com.my> : <http://www.pcl.com.my> : <http://www.pcl.com.my> : <http://www.pcl.com.my> : <http://www.pcl.
2023-01-25 19:40:19,481 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:40:19,481 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:40:19,481 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:40:19,481 - __main__ - INFO - 96 - <module>() - Final prediction for document 132: {'company': 'Total 0 You have made a valid entry. : <http://www.pcl.com.my> : <http://www.pcl.com.my> : <http://www.pcl.com.my> : <http://www.pcl.com.my> : <http://www.pcl.com.my> : <http://www.pcl.com.my> : <http://www.pcl.'}
2023-01-25 19:40:19,482 - __main__ - INFO - 92 - <module>() - Predicting document 133...
2023-01-25 19:40:26,206 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  Company Name
Address of Company: Address of Company
Total: Total Amount
Date of Receipt: Date of Receipt
Please enter your answer.

Question No: 6 ( Marks: 1 ) - Please choose one

Company A buys a book worth USD 5 with 3% commission and with delivery fee (RMB 0.45)
A, B, C, D

A. S$ 6.5
B. S$ 5.8
C. S$ 6.5
D. S$ 5.8

Extract "Company Name", "Date of Receipt", "
2023-01-25 19:40:26,207 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:40:26,208 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:40:26,208 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Company Name
Address of Company: Address of Company
Total: Total Amount

2023-01-25 19:40:26,208 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Company Name Address of Company: Address of Company Total: Total Amount
2023-01-25 19:40:26,209 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:40:26,209 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Date of Receipt
Please enter your answer.

Question No: 6 ( Marks: 1 ) - Please choose one

Company A buys a book worth USD 5 with 3% commission and with delivery fee (RMB 0.45)
A, B, C, D

A. S$ 6.5
B. S$ 5.8
C. S$ 6.5
D. S$ 5.8

Extract "Company Name", "Date of Receipt", "
2023-01-25 19:40:26,209 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Date of Receipt Please enter your answer. Question No: 6 ( Marks: 1 ) - Please choose one Company A buys a book worth USD 5 with 3% commission and with delivery fee (RMB 0.45) A, B, C, D A. S$ 6.5 B. S$ 5.8 C. S$ 6.5 D. S$ 5.8 Extract "Company Name", "Date of Receipt", "
2023-01-25 19:40:26,210 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:40:26,210 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Address of Company

2023-01-25 19:40:26,210 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Address of Company
2023-01-25 19:40:26,210 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:40:26,211 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Total Amount
Date of Receipt: Date of Receipt
Please enter your answer.

Question No: 6 ( Marks: 1 ) - Please choose one

Company A buys a book worth USD 5 with 3% commission and with delivery fee (RMB 0.45)
A, B, C, D

A. S$ 6.5
B. S$ 5.8
C. S$ 6.5
D. S$ 5.8

Extract "Company Name", "Date of Receipt", "
2023-01-25 19:40:26,211 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Total Amount Date of Receipt: Date of Receipt Please enter your answer. Question No: 6 ( Marks: 1 ) - Please choose one Company A buys a book worth USD 5 with 3% commission and with delivery fee (RMB 0.45) A, B, C, D A. S$ 6.5 B. S$ 5.8 C. S$ 6.5 D. S$ 5.8 Extract "Company Name", "Date of Receipt", "
2023-01-25 19:40:26,211 - __main__ - INFO - 96 - <module>() - Final prediction for document 133: {'company': 'Company Name Address of Company: Address of Company Total: Total Amount', 'date': 'Date of Receipt Please enter your answer. Question No: 6 ( Marks: 1 ) - Please choose one Company A buys a book worth USD 5 with 3% commission and with delivery fee (RMB 0.45) A, B, C, D A. S$ 6.5 B. S$ 5.8 C. S$ 6.5 D. S$ 5.8 Extract "Company Name", "Date of Receipt", "', 'address': 'Address of Company', 'total': 'Total Amount Date of Receipt: Date of Receipt Please enter your answer. Question No: 6 ( Marks: 1 ) - Please choose one Company A buys a book worth USD 5 with 3% commission and with delivery fee (RMB 0.45) A, B, C, D A. S$ 6.5 B. S$ 5.8 C. S$ 6.5 D. S$ 5.8 Extract "Company Name", "Date of Receipt", "'}
2023-01-25 19:40:26,213 - __main__ - INFO - 92 - <module>() - Predicting document 134...
2023-01-25 19:40:33,510 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:

Data source : Google Sheets

Date of Receipt:

Address of Company:

Total:

This value is from the document set above. If you can't find a key-value pair in the document set the value to "null".

Key: Value
Company Name:

Data source : Google Sheets

Date of Receipt:

Address of Company:

Total:

This value is from the document set above. If you can't find a key-value pair in the document set the value to "null".

Key: Value
Company Name:
2023-01-25 19:40:33,511 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:40:33,511 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:40:33,511 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

Data source : Google Sheets


2023-01-25 19:40:33,512 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Data source : Google Sheets
2023-01-25 19:40:33,512 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:40:33,512 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:


2023-01-25 19:40:33,512 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:40:33,513 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:40:33,513 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:


2023-01-25 19:40:33,513 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:40:33,513 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:40:33,514 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

This value is from the document set above. If you can't find a key-value pair in the document set the value to "null".

Key: Value
Company Name:

Data source : Google Sheets

Date of Receipt:

Address of Company:


2023-01-25 19:40:33,514 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: This value is from the document set above. If you can't find a key-value pair in the document set the value to "null". Key: Value Company Name: Data source : Google Sheets Date of Receipt: Address of Company:
2023-01-25 19:40:33,514 - __main__ - INFO - 96 - <module>() - Final prediction for document 134: {'company': 'Data source : Google Sheets', 'total': 'This value is from the document set above. If you can\'t find a key-value pair in the document set the value to "null". Key: Value Company Name: Data source : Google Sheets Date of Receipt: Address of Company:'}
2023-01-25 19:40:33,516 - __main__ - INFO - 92 - <module>() - Predicting document 135...
2023-01-25 19:40:35,264 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  N/A
Receipt Date: 11/07/2018
Address of Company:
Total:
2023-01-25 19:40:35,264 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:40:35,265 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:40:35,265 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  N/A
Receipt Date: 11/07/2018

2023-01-25 19:40:35,265 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: N/A Receipt Date: 11/07/2018
2023-01-25 19:40:35,265 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:40:35,266 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:40:35,266 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:40:35,266 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:40:35,266 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:40:35,267 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:
2023-01-25 19:40:35,267 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:40:35,267 - __main__ - INFO - 96 - <module>() - Final prediction for document 135: {'company': 'N/A Receipt Date: 11/07/2018'}
2023-01-25 19:40:35,268 - __main__ - INFO - 92 - <module>() - Predicting document 136...
2023-01-25 19:40:42,144 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  A.B.C
Date of Receipt: 25/02/2015
Address of Company: X.X.X
Total: 7.0

A:

If you are not bothered about what comes after the <|stop key|>, in this case 7.0, then a regular expression is just what you want:

\d+(\.\d{1,2})? matches one or two decimal digits followed by optional dot and another decimal digit.

This is the pattern that will match 7.0. However, if you can accept that 7.0 will not be matched,
2023-01-25 19:40:42,145 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:40:42,145 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:40:42,146 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  A.B.C

2023-01-25 19:40:42,146 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: A.B.C
2023-01-25 19:40:42,146 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:40:42,146 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  25/02/2015

2023-01-25 19:40:42,147 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 25/02/2015
2023-01-25 19:40:42,147 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:40:42,147 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  X.X.X

2023-01-25 19:40:42,147 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: X.X.X
2023-01-25 19:40:42,148 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:40:42,148 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  7.0

A:

If you are not bothered about what comes after the <|stop key|>, in this case 7.0, then a regular expression is just what you want:

\d+(\.\d{1,2})? matches one or two decimal digits followed by optional dot and another decimal digit.

This is the pattern that will match 7.0. However, if you can accept that 7.0 will not be matched,
2023-01-25 19:40:42,148 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 7.0 A: If you are not bothered about what comes after the <|stop key|>, in this case 7.0, then a regular expression is just what you want: \d+(\.\d{1,2})? matches one or two decimal digits followed by optional dot and another decimal digit. This is the pattern that will match 7.0. However, if you can accept that 7.0 will not be matched,
2023-01-25 19:40:42,149 - __main__ - INFO - 96 - <module>() - Final prediction for document 136: {'company': 'A.B.C', 'date': '25/02/2015', 'address': 'X.X.X', 'total': '7.0 A: If you are not bothered about what comes after the <|stop key|>, in this case 7.0, then a regular expression is just what you want: \\d+(\\.\\d{1,2})? matches one or two decimal digits followed by optional dot and another decimal digit. This is the pattern that will match 7.0. However, if you can accept that 7.0 will not be matched,'}
2023-01-25 19:40:42,150 - __main__ - INFO - 92 - <module>() - Predicting document 137...
2023-01-25 19:40:44,329 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:
Date of Receipt:
Address of Company:
Total:
2023-01-25 19:40:44,330 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:40:44,330 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:40:44,330 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:40:44,330 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:40:44,330 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:40:44,330 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:40:44,331 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:40:44,331 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:40:44,331 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:40:44,331 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:40:44,331 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:40:44,331 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:
2023-01-25 19:40:44,331 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:40:44,331 - __main__ - INFO - 96 - <module>() - Final prediction for document 137: {}
2023-01-25 19:40:44,333 - __main__ - INFO - 92 - <module>() - Predicting document 138...
2023-01-25 19:40:51,172 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:
Date of Receipt:
Address of Company:
Total:
Total <|stop key|>:

This is the output file
The output will be like:
Company Name         : ABC (Co. Ltd.)
Address of Company   : DUM DUM INDUSTRIES
Date of Receipt      : 24/10/2014
Total                 : RM2,000.00
Tax Amount            : RM70.00
TOTAL SAVING          : RM10.00
TOTAL TAX            : RM30.00
TOTAL RM EXCL. TAX    : RM
2023-01-25 19:40:51,172 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:40:51,172 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:40:51,172 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:40:51,173 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:40:51,173 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:40:51,173 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:40:51,173 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:40:51,173 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:40:51,173 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:40:51,173 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:40:51,173 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:40:51,173 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:
Total <|stop key|>:

This is the output file
The output will be like:
Company Name         : ABC (Co. Ltd.)
Address of Company   : DUM DUM INDUSTRIES
Date of Receipt      : 24/10/2014
Total                 : RM2,000.00
Tax Amount            : RM70.00
TOTAL SAVING          : RM10.00
TOTAL TAX            : RM30.00
TOTAL RM EXCL. TAX    : RM
2023-01-25 19:40:51,174 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Total <|stop key|>: This is the output file The output will be like: Company Name     : ABC (Co. Ltd.) Address of Company  : DUM DUM INDUSTRIES Date of Receipt   : 24/10/2014 Total         : RM2,000.00 Tax Amount      : RM70.00 TOTAL SAVING     : RM10.00 TOTAL TAX      : RM30.00 TOTAL RM EXCL. TAX  : RM
2023-01-25 19:40:51,174 - __main__ - INFO - 96 - <module>() - Final prediction for document 138: {'total': 'Total <|stop key|>: This is the output file The output will be like: Company Name     : ABC (Co. Ltd.) Address of Company  : DUM DUM INDUSTRIES Date of Receipt   : 24/10/2014 Total         : RM2,000.00 Tax Amount      : RM70.00 TOTAL SAVING     : RM10.00 TOTAL TAX      : RM30.00 TOTAL RM EXCL. TAX  : RM'}
2023-01-25 19:40:51,174 - __main__ - INFO - 92 - <module>() - Predicting document 139...
2023-01-25 19:40:55,855 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:
Date of Receipt:
Address of Company:
Total:
Total(inclusive of GST):

Scenario: The following document is to be uploaded to an Excel file.

What is the output? How is the output calculated?

Extract "Name", "Mobile Number", "E-mail", "Age" from the document above.
2023-01-25 19:40:55,856 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:40:55,856 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:40:55,857 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:40:55,857 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:40:55,857 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:40:55,858 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:40:55,858 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:40:55,858 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:40:55,858 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:40:55,859 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:40:55,859 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:40:55,859 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:
Total(inclusive of GST):

Scenario: The following document is to be uploaded to an Excel file.

What is the output? How is the output calculated?

Extract "Name", "Mobile Number", "E-mail", "Age" from the document above.
2023-01-25 19:40:55,859 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Total(inclusive of GST): Scenario: The following document is to be uploaded to an Excel file. What is the output? How is the output calculated? Extract "Name", "Mobile Number", "E-mail", "Age" from the document above.
2023-01-25 19:40:55,860 - __main__ - INFO - 96 - <module>() - Final prediction for document 139: {'total': 'Total(inclusive of GST): Scenario: The following document is to be uploaded to an Excel file. What is the output? How is the output calculated? Extract "Name", "Mobile Number", "E-mail", "Age" from the document above.'}
2023-01-25 19:40:55,861 - __main__ - INFO - 92 - <module>() - Predicting document 140...
2023-01-25 19:41:00,187 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document: Company Name:
Date of Receipt:Date of Receipt:
Address of Company:Address of Company:
Total:Total:

Create a new document with header to be "Account Statement". Replace the "Data" column with "Description" for the values of the key-value pairs you extracted from the document.

This works.


2023-01-25 19:41:00,188 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:41:00,188 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:41:00,189 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:
2023-01-25 19:41:00,189 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:41:00,190 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:41:00,190 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:
2023-01-25 19:41:00,190 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:41:00,191 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:41:00,191 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:
2023-01-25 19:41:00,192 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:41:00,192 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:41:00,193 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:
2023-01-25 19:41:00,193 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:41:00,193 - __main__ - INFO - 96 - <module>() - Final prediction for document 140: {}
2023-01-25 19:41:00,195 - __main__ - INFO - 92 - <module>() - Predicting document 141...
2023-01-25 19:41:07,095 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  "Company Name"
Date of Receipt: "<|date:format(Receipt, "DDMMYYYY"|>"
Address of Company: "Address of Company"
Total: <|format(Total,"0.00")|>"

Print the list.
Note that this is not yet the final result since you still need to format and sort the entries as you want it.

Extract the first field as key and rest of the fields as value from the document set above. If you have multiple documents in the document set, only the first document will be read.

The keys should be
2023-01-25 19:41:07,096 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:41:07,096 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:41:07,097 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  "Company Name"

2023-01-25 19:41:07,097 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Company Name
2023-01-25 19:41:07,097 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:41:07,098 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  "<|date:format(Receipt, "DDMMYYYY"|>"

2023-01-25 19:41:07,098 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: <|date:format(Receipt, "DDMMYYYY"|>
2023-01-25 19:41:07,098 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:41:07,098 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  "Address of Company"

2023-01-25 19:41:07,099 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Address of Company
2023-01-25 19:41:07,099 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:41:07,099 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  <|format(Total,"0.00")|>"

Print the list.
Note that this is not yet the final result since you still need to format and sort the entries as you want it.

Extract the first field as key and rest of the fields as value from the document set above. If you have multiple documents in the document set, only the first document will be read.

The keys should be
2023-01-25 19:41:07,099 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: <|format(Total,"0.00")|>" Print the list. Note that this is not yet the final result since you still need to format and sort the entries as you want it. Extract the first field as key and rest of the fields as value from the document set above. If you have multiple documents in the document set, only the first document will be read. The keys should be
2023-01-25 19:41:07,100 - __main__ - INFO - 96 - <module>() - Final prediction for document 141: {'company': 'Company Name', 'date': '<|date:format(Receipt, "DDMMYYYY"|>', 'address': 'Address of Company', 'total': '<|format(Total,"0.00")|>" Print the list. Note that this is not yet the final result since you still need to format and sort the entries as you want it. Extract the first field as key and rest of the fields as value from the document set above. If you have multiple documents in the document set, only the first document will be read. The keys should be'}
2023-01-25 19:41:07,101 - __main__ - INFO - 92 - <module>() - Predicting document 142...
2023-01-25 19:41:08,497 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:
Date of Receipt:
Address of Company:
Total:
2023-01-25 19:41:08,498 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:41:08,498 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:41:08,499 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:41:08,499 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:41:08,499 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:41:08,499 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:41:08,500 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:41:08,500 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:41:08,500 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:41:08,500 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:41:08,501 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:41:08,501 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:
2023-01-25 19:41:08,501 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:41:08,501 - __main__ - INFO - 96 - <module>() - Final prediction for document 142: {}
2023-01-25 19:41:08,503 - __main__ - INFO - 92 - <module>() - Predicting document 143...
2023-01-25 19:41:15,557 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  Company
Date of Receipt: Date
Address of Company: Address
Total: Total
Total <|stop key|>: Total of all item(s) in the invoice

Note that the invoice is a single line. You may need to split it into an array of lines using '\n' as the separator.

Step 3:

You need to know what is the currency code of your invoice as well as what is the exchange rate of the currency.

In this problem, you can use the currency code from one of the following places:

You know this from the invoice.

You
2023-01-25 19:41:15,558 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:41:15,558 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:41:15,558 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Company

2023-01-25 19:41:15,558 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Company
2023-01-25 19:41:15,558 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:41:15,559 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Date

2023-01-25 19:41:15,559 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Date
2023-01-25 19:41:15,559 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:41:15,559 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Address

2023-01-25 19:41:15,559 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Address
2023-01-25 19:41:15,559 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:41:15,559 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Total
Total <|stop key|>: Total of all item(s) in the invoice

Note that the invoice is a single line. You may need to split it into an array of lines using '\n' as the separator.

Step 3:

You need to know what is the currency code of your invoice as well as what is the exchange rate of the currency.

In this problem, you can use the currency code from one of the following places:

You know this from the invoice.

You
2023-01-25 19:41:15,559 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Total Total <|stop key|>: Total of all item(s) in the invoice Note that the invoice is a single line. You may need to split it into an array of lines using '\n' as the separator. Step 3: You need to know what is the currency code of your invoice as well as what is the exchange rate of the currency. In this problem, you can use the currency code from one of the following places: You know this from the invoice. You
2023-01-25 19:41:15,559 - __main__ - INFO - 96 - <module>() - Final prediction for document 143: {'company': 'Company', 'date': 'Date', 'address': 'Address', 'total': "Total Total <|stop key|>: Total of all item(s) in the invoice Note that the invoice is a single line. You may need to split it into an array of lines using '\\n' as the separator. Step 3: You need to know what is the currency code of your invoice as well as what is the exchange rate of the currency. In this problem, you can use the currency code from one of the following places: You know this from the invoice. You"}
2023-01-25 19:41:15,560 - __main__ - INFO - 92 - <module>() - Predicting document 144...
2023-01-25 19:41:17,428 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  Company name
Date of Receipt: Date received
Address of Company: Address
Total: Total

2023-01-25 19:41:17,428 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:41:17,428 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:41:17,429 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Company name

2023-01-25 19:41:17,429 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Company name
2023-01-25 19:41:17,429 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:41:17,429 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Date received

2023-01-25 19:41:17,429 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Date received
2023-01-25 19:41:17,429 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:41:17,429 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Address

2023-01-25 19:41:17,430 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Address
2023-01-25 19:41:17,430 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:41:17,430 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Total

2023-01-25 19:41:17,430 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Total
2023-01-25 19:41:17,430 - __main__ - INFO - 96 - <module>() - Final prediction for document 144: {'company': 'Company name', 'date': 'Date received', 'address': 'Address', 'total': 'Total'}
2023-01-25 19:41:17,431 - __main__ - INFO - 92 - <module>() - Predicting document 145...
2023-01-25 19:41:19,264 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:
Date of Receipt:
Address of Company:
Total:
2023-01-25 19:41:19,265 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:41:19,266 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:41:19,266 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:41:19,266 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:41:19,267 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:41:19,267 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:41:19,267 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:41:19,268 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:41:19,268 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:41:19,268 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:41:19,268 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:41:19,269 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:
2023-01-25 19:41:19,269 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:41:19,269 - __main__ - INFO - 96 - <module>() - Final prediction for document 145: {}
2023-01-25 19:41:19,271 - __main__ - INFO - 92 - <module>() - Predicting document 146...
2023-01-25 19:41:25,777 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:
Date of Receipt:
Address of Company:
Total:
8.00
Cash paid:
CARD PAID:
CHANGE:
ZULUTA KERETING MALAYSIA BHD .

The "Key" (which was extracted by the previous script) can be used for an IN-pipeline:
$ cat tst.awk
{ key = "Company Name";
  if ( ( ( key in ary ) || ( key == "null" ) ) ) {
    v = $0;
    if
2023-01-25 19:41:25,778 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:41:25,778 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:41:25,779 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:41:25,779 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:41:25,779 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:41:25,779 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:41:25,780 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:41:25,780 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:41:25,780 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:41:25,780 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:41:25,781 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:41:25,781 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:
8.00
Cash paid:
CARD PAID:
CHANGE:
ZULUTA KERETING MALAYSIA BHD .

The "Key" (which was extracted by the previous script) can be used for an IN-pipeline:
$ cat tst.awk
{ key = "Company Name";
  if ( ( ( key in ary ) || ( key == "null" ) ) ) {
    v = $0;
    if
2023-01-25 19:41:25,781 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 8.00 Cash paid: CARD PAID: CHANGE: ZULUTA KERETING MALAYSIA BHD . The "Key" (which was extracted by the previous script) can be used for an IN-pipeline: $ cat tst.awk { key = "Company Name";  if ( ( ( key in ary ) || ( key == "null" ) ) ) {   v = $0;   if
2023-01-25 19:41:25,781 - __main__ - INFO - 96 - <module>() - Final prediction for document 146: {'total': '8.00 Cash paid: CARD PAID: CHANGE: ZULUTA KERETING MALAYSIA BHD . The "Key" (which was extracted by the previous script) can be used for an IN-pipeline: $ cat tst.awk { key = "Company Name";  if ( ( ( key in ary ) || ( key == "null" ) ) ) {   v = $0;   if'}
2023-01-25 19:41:25,783 - __main__ - INFO - 92 - <module>() - Predicting document 147...
2023-01-25 19:41:33,127 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:
Date of Receipt: 25th May 2020
Address of Company: C-10-22, Jalan 1/1A Taman Sekinchan Indah
Total: -
"Stop Key":

Sample Output

Company Name: DUNIHAKKA INTERNATIONAL SDN BHD
Date of Receipt: 25th May 2020
Address of Company: C-10-22, Jalan 1/1A Taman Sekinchan Indah
Total: -

Sample Code in C#:
private void ExtractCompanyName(string document)
{
    int startPos = document
2023-01-25 19:41:33,129 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:41:33,130 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:41:33,130 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:41:33,130 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:41:33,131 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:41:33,131 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  25th May 2020

2023-01-25 19:41:33,131 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 25th May 2020
2023-01-25 19:41:33,131 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:41:33,131 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  C-10-22, Jalan 1/1A Taman Sekinchan Indah

2023-01-25 19:41:33,132 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: C-10-22, Jalan 1/1A Taman Sekinchan Indah
2023-01-25 19:41:33,132 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:41:33,132 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  -
"Stop Key":

Sample Output

Company Name: DUNIHAKKA INTERNATIONAL SDN BHD
Date of Receipt: 25th May 2020
Address of Company: C-10-22, Jalan 1/1A Taman Sekinchan Indah

2023-01-25 19:41:33,132 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: - "Stop Key": Sample Output Company Name: DUNIHAKKA INTERNATIONAL SDN BHD Date of Receipt: 25th May 2020 Address of Company: C-10-22, Jalan 1/1A Taman Sekinchan Indah
2023-01-25 19:41:33,132 - __main__ - INFO - 96 - <module>() - Final prediction for document 147: {'date': '25th May 2020', 'address': 'C-10-22, Jalan 1/1A Taman Sekinchan Indah', 'total': '- "Stop Key": Sample Output Company Name: DUNIHAKKA INTERNATIONAL SDN BHD Date of Receipt: 25th May 2020 Address of Company: C-10-22, Jalan 1/1A Taman Sekinchan Indah'}
2023-01-25 19:41:33,136 - __main__ - INFO - 92 - <module>() - Predicting document 148...
2023-01-25 19:41:36,610 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  BAKER'S HUT SDN BHD
Date of Receipt: 04/10/2012
Address of Company: JALAN BAKER, Jalan Laksamana
Total:
2023-01-25 19:41:36,611 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:41:36,611 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:41:36,611 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  BAKER'S HUT SDN BHD

2023-01-25 19:41:36,612 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: BAKER'S HUT SDN BHD
2023-01-25 19:41:36,612 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:41:36,612 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  04/10/2012

2023-01-25 19:41:36,612 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 04/10/2012
2023-01-25 19:41:36,613 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:41:36,613 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  JALAN BAKER, Jalan Laksamana

2023-01-25 19:41:36,613 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: JALAN BAKER, Jalan Laksamana
2023-01-25 19:41:36,614 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:41:36,614 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:
2023-01-25 19:41:36,614 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:41:36,614 - __main__ - INFO - 96 - <module>() - Final prediction for document 148: {'company': "BAKER'S HUT SDN BHD", 'date': '04/10/2012', 'address': 'JALAN BAKER, Jalan Laksamana'}
2023-01-25 19:41:36,616 - __main__ - INFO - 92 - <module>() - Predicting document 149...
2023-01-25 19:41:43,158 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  ABC Corporation
Date of Receipt: 23-09-2017
Address of Company: Jalan Taman Jaya
Total:
9.32
GST (7%)
(TOTAL: 9.32)

Your result should be:
The information in the document above is the same as the information in the documents below:

Key: Value
Company Name: ABC Corporation
Date of Receipt: 23-09-2017
Address of Company: Jalan Taman Jaya
Total:
9.32
GST (7%)
TOTAL (GST)
(TOTAL
2023-01-25 19:41:43,159 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:41:43,159 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:41:43,159 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  ABC Corporation

2023-01-25 19:41:43,160 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: ABC Corporation
2023-01-25 19:41:43,160 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:41:43,160 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  23-09-2017

2023-01-25 19:41:43,160 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 23-09-2017
2023-01-25 19:41:43,161 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:41:43,161 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Jalan Taman Jaya

2023-01-25 19:41:43,161 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Jalan Taman Jaya
2023-01-25 19:41:43,162 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:41:43,162 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:
9.32
GST (7%)
(
2023-01-25 19:41:43,162 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 9.32 GST (7%) (
2023-01-25 19:41:43,162 - __main__ - INFO - 96 - <module>() - Final prediction for document 149: {'company': 'ABC Corporation', 'date': '23-09-2017', 'address': 'Jalan Taman Jaya', 'total': '9.32 GST (7%) ('}
2023-01-25 19:41:43,164 - __main__ - INFO - 92 - <module>() - Predicting document 150...
2023-01-25 19:41:46,852 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  KTAS
Date of Receipt: 20-05-2018 10:01
Address of Company: Jalan Temenggung 19/9, Bandar Mahkota Cheras 43200 Cheras Selangor, MALAYSIA
Total: 7.20
2023-01-25 19:41:46,852 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:41:46,853 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:41:46,853 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  KTAS

2023-01-25 19:41:46,854 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: KTAS
2023-01-25 19:41:46,854 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:41:46,854 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  20-05-2018 10:01

2023-01-25 19:41:46,855 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 20-05-2018 10:01
2023-01-25 19:41:46,855 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:41:46,856 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Jalan Temenggung 19/9, Bandar Mahkota Cheras 43200 Cheras Selangor, MALAYSIA

2023-01-25 19:41:46,856 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Jalan Temenggung 19/9, Bandar Mahkota Cheras 43200 Cheras Selangor, MALAYSIA
2023-01-25 19:41:46,856 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:41:46,856 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  7.20
2023-01-25 19:41:46,857 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 7.20
2023-01-25 19:41:46,857 - __main__ - INFO - 96 - <module>() - Final prediction for document 150: {'company': 'KTAS', 'date': '20-05-2018 10:01', 'address': 'Jalan Temenggung 19/9, Bandar Mahkota Cheras 43200 Cheras Selangor, MALAYSIA', 'total': '7.20'}
2023-01-25 19:41:46,858 - __main__ - INFO - 92 - <module>() - Predicting document 151...
2023-01-25 19:41:49,641 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  "Company Name"
Company Name: "<|stop key|>"
Date of Receipt: "Date of Receipt"
Address of Company: "Address of Company"
Total: "Total"
2023-01-25 19:41:49,642 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:41:49,642 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:41:49,642 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  "Company Name"

2023-01-25 19:41:49,642 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Company Name
2023-01-25 19:41:49,643 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:41:49,643 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  "Date of Receipt"

2023-01-25 19:41:49,643 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Date of Receipt
2023-01-25 19:41:49,643 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:41:49,643 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  "Address of Company"

2023-01-25 19:41:49,643 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Address of Company
2023-01-25 19:41:49,644 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:41:49,644 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  "Total"
2023-01-25 19:41:49,644 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Total
2023-01-25 19:41:49,644 - __main__ - INFO - 96 - <module>() - Final prediction for document 151: {'company': 'Company Name', 'date': 'Date of Receipt', 'address': 'Address of Company', 'total': 'Total'}
2023-01-25 19:41:49,645 - __main__ - INFO - 92 - <module>() - Predicting document 152...
2023-01-25 19:41:51,533 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:
Date of Receipt:
Address of Company:
Total:
2023-01-25 19:41:51,534 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:41:51,534 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:41:51,534 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:41:51,534 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:41:51,535 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:41:51,535 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:41:51,535 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:41:51,535 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:41:51,535 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:41:51,536 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:41:51,536 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:41:51,536 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:
2023-01-25 19:41:51,536 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:41:51,536 - __main__ - INFO - 96 - <module>() - Final prediction for document 152: {}
2023-01-25 19:41:51,537 - __main__ - INFO - 92 - <module>() - Predicting document 153...
2023-01-25 19:41:56,916 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  Jaya Impex Sdn Bhd.
Date of Receipt: 23/12/2019
Address of Company: Block S1, Jaya Impex Bldg, 6th Fl,
Jalan SS15/18, Petaling Jaya, Selangor D-3, MALAYSIA
Total: 2,100.00
|<|start key|>|null|<-end key->|
2023-01-25 19:41:56,918 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:41:56,918 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:41:56,919 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Jaya Impex Sdn Bhd.

2023-01-25 19:41:56,919 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Jaya Impex Sdn Bhd.
2023-01-25 19:41:56,920 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:41:56,920 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  23/12/2019

2023-01-25 19:41:56,920 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 23/12/2019
2023-01-25 19:41:56,920 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:41:56,921 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Block S1, Jaya Impex Bldg, 6th Fl,
Jalan SS15/18, Petaling Jaya, Selangor D-3, MALAYSIA

2023-01-25 19:41:56,921 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Block S1, Jaya Impex Bldg, 6th Fl, Jalan SS15/18, Petaling Jaya, Selangor D-3, MALAYSIA
2023-01-25 19:41:56,921 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:41:56,921 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  2,100.00
|<|start key|>|null|<-end key->|
2023-01-25 19:41:56,922 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 2,100.00 |<|start key|>|null|<-end key->|
2023-01-25 19:41:56,922 - __main__ - INFO - 96 - <module>() - Final prediction for document 153: {'company': 'Jaya Impex Sdn Bhd.', 'date': '23/12/2019', 'address': 'Block S1, Jaya Impex Bldg, 6th Fl, Jalan SS15/18, Petaling Jaya, Selangor D-3, MALAYSIA', 'total': '2,100.00 |<|start key|>|null|<-end key->|'}
2023-01-25 19:41:56,924 - __main__ - INFO - 92 - <module>() - Predicting document 154...
2023-01-25 19:41:59,689 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  ABC
Date of Receipt: 30.09.2019
Address of Company: XYZ
Total: 33.80
*Please enter "null" if the key does not exist in the document set.
2023-01-25 19:41:59,690 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:41:59,690 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:41:59,690 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  ABC

2023-01-25 19:41:59,690 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: ABC
2023-01-25 19:41:59,691 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:41:59,691 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  30.09.2019

2023-01-25 19:41:59,691 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 30.09.2019
2023-01-25 19:41:59,691 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:41:59,691 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  XYZ

2023-01-25 19:41:59,692 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: XYZ
2023-01-25 19:41:59,692 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:41:59,692 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  33.80
*Please enter "null" if the key does not exist in the document set.
2023-01-25 19:41:59,692 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 33.80 *Please enter "null" if the key does not exist in the document set.
2023-01-25 19:41:59,692 - __main__ - INFO - 96 - <module>() - Final prediction for document 154: {'company': 'ABC', 'date': '30.09.2019', 'address': 'XYZ', 'total': '33.80 *Please enter "null" if the key does not exist in the document set.'}
2023-01-25 19:41:59,694 - __main__ - INFO - 92 - <module>() - Predicting document 155...
2023-01-25 19:42:04,666 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  BERTALAN
Date of Receipt: 03/01/2018
Address of Company: AIR PANAS
Total:
TWO FACING PAINTING TIN WALL PROTECTOR/TAPIR/PLANT
(81109-A)
NO.
ITEM
SR
3.10
4.25
6.44
TOTAL AMOUNT:
14.09
2023-01-25 19:42:04,667 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:42:04,667 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:42:04,668 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  BERTALAN

2023-01-25 19:42:04,668 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: BERTALAN
2023-01-25 19:42:04,668 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:42:04,668 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  03/01/2018

2023-01-25 19:42:04,669 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 03/01/2018
2023-01-25 19:42:04,669 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:42:04,669 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  AIR PANAS

2023-01-25 19:42:04,669 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: AIR PANAS
2023-01-25 19:42:04,670 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:42:04,670 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:
TWO FACING PAINTING TIN WALL PROTECTOR/TAPIR/PLANT
(81109-A)
NO.
ITEM
SR
3.10
4.25
6.44
TOTAL AMOUNT:
14.09
2023-01-25 19:42:04,670 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: TWO FACING PAINTING TIN WALL PROTECTOR/TAPIR/PLANT (81109-A) NO. ITEM SR 3.10 4.25 6.44 TOTAL AMOUNT: 14.09
2023-01-25 19:42:04,670 - __main__ - INFO - 96 - <module>() - Final prediction for document 155: {'company': 'BERTALAN', 'date': '03/01/2018', 'address': 'AIR PANAS', 'total': 'TWO FACING PAINTING TIN WALL PROTECTOR/TAPIR/PLANT (81109-A) NO. ITEM SR 3.10 4.25 6.44 TOTAL AMOUNT: 14.09'}
2023-01-25 19:42:04,672 - __main__ - INFO - 92 - <module>() - Predicting document 156...
2023-01-25 19:42:12,503 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  Company name
Date of Receipt: Date of receipt
Address of Company: Address of company
Total:
null

A:

You can use the following approach to extract data from PDF:

Use regex to extract the total from the text: (?s)(\d+.\d+)
Use Apache PDFBox and its PDFTextStripper class for extracting data from PDF.
Create CSV-File using csvwriter.

Code:
String strFileName = "your_pdf_file_path";
String strInput = "your_pdf_input_file";
String strOutput
2023-01-25 19:42:12,505 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:42:12,505 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:42:12,506 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Company name

2023-01-25 19:42:12,506 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Company name
2023-01-25 19:42:12,506 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:42:12,506 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Date of receipt

2023-01-25 19:42:12,507 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Date of receipt
2023-01-25 19:42:12,507 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:42:12,507 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Address of company

2023-01-25 19:42:12,508 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Address of company
2023-01-25 19:42:12,508 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:42:12,508 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:
null

A:

You can use the following approach to extract data from PDF:

Use regex to extract the total from the text: (?s)(\d+.\d+)
Use Apache PDFBox and its PDFTextStripper class for extracting data from PDF.
Create CSV-File using csvwriter.

Code:
String strFileName = "your_pdf_file_path";
String strInput = "your_pdf_input_file";
String strOutput
2023-01-25 19:42:12,508 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: null A: You can use the following approach to extract data from PDF: Use regex to extract the total from the text: (?s)(\d+.\d+) Use Apache PDFBox and its PDFTextStripper class for extracting data from PDF. Create CSV-File using csvwriter. Code: String strFileName = "your_pdf_file_path"; String strInput = "your_pdf_input_file"; String strOutput
2023-01-25 19:42:12,509 - __main__ - INFO - 96 - <module>() - Final prediction for document 156: {'company': 'Company name', 'date': 'Date of receipt', 'address': 'Address of company'}
2023-01-25 19:42:12,515 - __main__ - INFO - 92 - <module>() - Predicting document 157...
2023-01-25 19:42:19,666 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:
Date of Receipt:
Address of Company:
Total:

I have tried with the following XSLT and some other XSLT and all are working for the company number starting from letter a but is not working for the company number starting with b

I need help to modify the XSLT i have. if i modify like this, it is giving me "null" as output.
Please help.
XSLT:

I am using the given XSLT to parse the XML. But, it is not giving me desired output. It is giving all values null or empty. Please
2023-01-25 19:42:19,667 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:42:19,667 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:42:19,668 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:42:19,668 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:42:19,668 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:42:19,669 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:42:19,669 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:42:19,669 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:42:19,670 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:42:19,670 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:42:19,670 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:42:19,670 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

I have tried with the following XSLT and some other XSLT and all are working for the company number starting from letter a but is not working for the company number starting with b

I need help to modify the XSLT i have. if i modify like this, it is giving me "null" as output.
Please help.
XSLT:

I am using the given XSLT to parse the XML. But, it is not giving me desired output. It is giving all values null or empty. Please
2023-01-25 19:42:19,671 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: I have tried with the following XSLT and some other XSLT and all are working for the company number starting from letter a but is not working for the company number starting with b I need help to modify the XSLT i have. if i modify like this, it is giving me "null" as output. Please help. XSLT: I am using the given XSLT to parse the XML. But, it is not giving me desired output. It is giving all values null or empty. Please
2023-01-25 19:42:19,671 - __main__ - INFO - 96 - <module>() - Final prediction for document 157: {'total': 'I have tried with the following XSLT and some other XSLT and all are working for the company number starting from letter a but is not working for the company number starting with b I need help to modify the XSLT i have. if i modify like this, it is giving me "null" as output. Please help. XSLT: I am using the given XSLT to parse the XML. But, it is not giving me desired output. It is giving all values null or empty. Please'}
2023-01-25 19:42:19,673 - __main__ - INFO - 92 - <module>() - Predicting document 158...
2023-01-25 19:42:23,675 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  1
Date of Receipt: 26-04-2018
Address of Company: JLK BUILDING
Level 2, NO. 4, 16 STAR PARK, SUNGAI KARANG, KUALA KELAMAT
Total: 22
2023-01-25 19:42:23,676 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:42:23,676 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:42:23,676 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  1

2023-01-25 19:42:23,676 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 1
2023-01-25 19:42:23,676 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:42:23,677 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  26-04-2018

2023-01-25 19:42:23,677 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 26-04-2018
2023-01-25 19:42:23,677 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:42:23,677 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  JLK BUILDING
Level 2, NO. 4, 16 STAR PARK, SUNGAI KARANG, KUALA KELAMAT

2023-01-25 19:42:23,677 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: JLK BUILDING Level 2, NO. 4, 16 STAR PARK, SUNGAI KARANG, KUALA KELAMAT
2023-01-25 19:42:23,677 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:42:23,677 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  22
2023-01-25 19:42:23,677 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 22
2023-01-25 19:42:23,677 - __main__ - INFO - 96 - <module>() - Final prediction for document 158: {'company': '1', 'date': '26-04-2018', 'address': 'JLK BUILDING Level 2, NO. 4, 16 STAR PARK, SUNGAI KARANG, KUALA KELAMAT', 'total': '22'}
2023-01-25 19:42:23,679 - __main__ - INFO - 92 - <module>() - Predicting document 159...
2023-01-25 19:42:25,765 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:
Date of Receipt:
Address of Company:
Total:

Total is:
2023-01-25 19:42:25,766 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:42:25,766 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:42:25,766 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:42:25,766 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:42:25,766 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:42:25,767 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:42:25,767 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:42:25,767 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:42:25,767 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:42:25,767 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:42:25,767 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:42:25,767 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

Total is:
2023-01-25 19:42:25,767 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Total is:
2023-01-25 19:42:25,768 - __main__ - INFO - 96 - <module>() - Final prediction for document 159: {'total': 'Total is:'}
2023-01-25 19:42:25,769 - __main__ - INFO - 92 - <module>() - Predicting document 160...
2023-01-25 19:42:32,281 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  PAPER BAGS
Date of Receipt: 20-06-2015
Address of Company: 5405, MENARA HIGH STREET, KUALA LUMPUR
Total: 250.00

Key: Value
Company Name: PAPER BAGS
Date of Receipt: 20-06-2015
Address of Company: 5405, MENARA HIGH STREET, KUALA LUMPUR
Total: 250.00

Key: Value
Company Name: PAPER BAGS
Date of Receipt: 20-06-2015

2023-01-25 19:42:32,284 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:42:32,285 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:42:32,285 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  PAPER BAGS

2023-01-25 19:42:32,286 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: PAPER BAGS
2023-01-25 19:42:32,286 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:42:32,286 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  20-06-2015

2023-01-25 19:42:32,286 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 20-06-2015
2023-01-25 19:42:32,287 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:42:32,287 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  5405, MENARA HIGH STREET, KUALA LUMPUR

2023-01-25 19:42:32,287 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 5405, MENARA HIGH STREET, KUALA LUMPUR
2023-01-25 19:42:32,287 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:42:32,287 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  250.00

Key: Value
Company Name: PAPER BAGS
Date of Receipt: 20-06-2015
Address of Company: 5405, MENARA HIGH STREET, KUALA LUMPUR

2023-01-25 19:42:32,288 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 250.00 Key: Value Company Name: PAPER BAGS Date of Receipt: 20-06-2015 Address of Company: 5405, MENARA HIGH STREET, KUALA LUMPUR
2023-01-25 19:42:32,289 - __main__ - INFO - 96 - <module>() - Final prediction for document 160: {'company': 'PAPER BAGS', 'date': '20-06-2015', 'address': '5405, MENARA HIGH STREET, KUALA LUMPUR', 'total': '250.00 Key: Value Company Name: PAPER BAGS Date of Receipt: 20-06-2015 Address of Company: 5405, MENARA HIGH STREET, KUALA LUMPUR'}
2023-01-25 19:42:32,291 - __main__ - INFO - 92 - <module>() - Predicting document 161...
2023-01-25 19:42:39,162 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  <|start key|>Dates of Receipt: <|stop key|>Address of Company: <|start key|>Total: <|stop key|>

Click on 'Check your answers' to verify if your answer is correct. If you answer all questions correctly, your are a good fit for the job.

The job profile

We are looking for a competent and committed professional to fill a position of

Cashier in Kedah

Responsibilities

*Perform cashier duties such as collection, receipt, verification, stocktaking, reconciling, banking
2023-01-25 19:42:39,164 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:42:39,164 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:42:39,165 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  <|start key|>Dates of Receipt: <|stop key|>
2023-01-25 19:42:39,165 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: <|start key|>Dates of Receipt: <|stop key|>
2023-01-25 19:42:39,165 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:42:39,166 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:42:39,166 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  <|start key|>
2023-01-25 19:42:39,166 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: <|start key|>
2023-01-25 19:42:39,166 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:42:39,167 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  <|stop key|>

Click on 'Check your answers' to verify if your answer is correct. If you answer all questions correctly, your are a good fit for the job.

The job profile

We are looking for a competent and committed professional to fill a position of

Cashier in Kedah

Responsibilities

*Perform cashier duties such as collection, receipt, verification, stocktaking, reconciling, banking
2023-01-25 19:42:39,167 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: <|stop key|> Click on 'Check your answers' to verify if your answer is correct. If you answer all questions correctly, your are a good fit for the job. The job profile We are looking for a competent and committed professional to fill a position of Cashier in Kedah Responsibilities *Perform cashier duties such as collection, receipt, verification, stocktaking, reconciling, banking
2023-01-25 19:42:39,168 - __main__ - INFO - 96 - <module>() - Final prediction for document 161: {'company': '<|start key|>Dates of Receipt: <|stop key|>', 'address': '<|start key|>', 'total': "<|stop key|> Click on 'Check your answers' to verify if your answer is correct. If you answer all questions correctly, your are a good fit for the job. The job profile We are looking for a competent and committed professional to fill a position of Cashier in Kedah Responsibilities *Perform cashier duties such as collection, receipt, verification, stocktaking, reconciling, banking"}
2023-01-25 19:42:39,170 - __main__ - INFO - 92 - <module>() - Predicting document 162...
2023-01-25 19:42:46,894 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  Xerox Asia Pacific Pte Ltd
Date of Receipt: 09/06/2017
Address of Company: 15/1 The Curve, Crestview Business Park, 22 Jalan Yap Kwan Seng, 11800 Petaling Jaya, Selangor
Total: 29.40

Key: Value
Company Name: JUMBO CORPORATION (M) SDN. BHD.
Date of Receipt: 05/11/2017
Address of Company: Lot No. 3-1 The Garden, Jalan Ganesha, Bukit Gasing, Penang
Total
2023-01-25 19:42:46,896 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:42:46,896 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:42:46,897 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Xerox Asia Pacific Pte Ltd

2023-01-25 19:42:46,897 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Xerox Asia Pacific Pte Ltd
2023-01-25 19:42:46,897 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:42:46,898 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  09/06/2017

2023-01-25 19:42:46,898 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 09/06/2017
2023-01-25 19:42:46,898 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:42:46,899 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  15/1 The Curve, Crestview Business Park, 22 Jalan Yap Kwan Seng, 11800 Petaling Jaya, Selangor

2023-01-25 19:42:46,900 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 15/1 The Curve, Crestview Business Park, 22 Jalan Yap Kwan Seng, 11800 Petaling Jaya, Selangor
2023-01-25 19:42:46,900 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:42:46,900 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  29.40

Key: Value
Company Name: JUMBO CORPORATION (M) SDN. BHD.
Date of Receipt: 05/11/2017
Address of Company: Lot No. 3-1 The Garden, Jalan Ganesha, Bukit Gasing, Penang
Total
2023-01-25 19:42:46,901 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 29.40 Key: Value Company Name: JUMBO CORPORATION (M) SDN. BHD. Date of Receipt: 05/11/2017 Address of Company: Lot No. 3-1 The Garden, Jalan Ganesha, Bukit Gasing, Penang Total
2023-01-25 19:42:46,901 - __main__ - INFO - 96 - <module>() - Final prediction for document 162: {'company': 'Xerox Asia Pacific Pte Ltd', 'date': '09/06/2017', 'address': '15/1 The Curve, Crestview Business Park, 22 Jalan Yap Kwan Seng, 11800 Petaling Jaya, Selangor', 'total': '29.40 Key: Value Company Name: JUMBO CORPORATION (M) SDN. BHD. Date of Receipt: 05/11/2017 Address of Company: Lot No. 3-1 The Garden, Jalan Ganesha, Bukit Gasing, Penang Total'}
2023-01-25 19:42:46,903 - __main__ - INFO - 92 - <module>() - Predicting document 163...
2023-01-25 19:42:49,482 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  Company Name
Date of Receipt: Date of Receipt
Address of Company: Address of Company
Total: Total
2023-01-25 19:42:49,482 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:42:49,483 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:42:49,483 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Company Name

2023-01-25 19:42:49,483 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Company Name
2023-01-25 19:42:49,484 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:42:49,484 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Date of Receipt

2023-01-25 19:42:49,484 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Date of Receipt
2023-01-25 19:42:49,484 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:42:49,485 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Address of Company

2023-01-25 19:42:49,485 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Address of Company
2023-01-25 19:42:49,485 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:42:49,486 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Total
2023-01-25 19:42:49,486 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Total
2023-01-25 19:42:49,486 - __main__ - INFO - 96 - <module>() - Final prediction for document 163: {'company': 'Company Name', 'date': 'Date of Receipt', 'address': 'Address of Company', 'total': 'Total'}
2023-01-25 19:42:49,488 - __main__ - INFO - 92 - <module>() - Predicting document 164...
2023-01-25 19:42:56,637 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  null
Date of Receipt: 05-Jan-2016
Address of Company: 1851-A & 1851-B, Jalan KPB 6, Kawasan Perindustrian Balakong, 43300 Seri Kembangan, Selangor
Total: RM 8.10
Key: Value
Company Name: null
Date of Receipt: null
Address of Company: null
Total: RM 10.10
Key: Value
Company Name: null
Date of Receipt: 01-Jan-2016
Address of Company: null
Total: RM 2.00
Key: Value

2023-01-25 19:42:56,638 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:42:56,638 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:42:56,639 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  null

2023-01-25 19:42:56,639 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: null
2023-01-25 19:42:56,639 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:42:56,639 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  05-Jan-2016

2023-01-25 19:42:56,639 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 05-Jan-2016
2023-01-25 19:42:56,639 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:42:56,639 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  1851-A & 1851-B, Jalan KPB 6, Kawasan Perindustrian Balakong, 43300 Seri Kembangan, Selangor

2023-01-25 19:42:56,639 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 1851-A & 1851-B, Jalan KPB 6, Kawasan Perindustrian Balakong, 43300 Seri Kembangan, Selangor
2023-01-25 19:42:56,640 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:42:56,640 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  RM 8.10
Key: Value
Company Name: null
Date of Receipt: null
Address of Company: null

2023-01-25 19:42:56,640 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: RM 8.10 Key: Value Company Name: null Date of Receipt: null Address of Company: null
2023-01-25 19:42:56,640 - __main__ - INFO - 96 - <module>() - Final prediction for document 164: {'date': '05-Jan-2016', 'address': '1851-A & 1851-B, Jalan KPB 6, Kawasan Perindustrian Balakong, 43300 Seri Kembangan, Selangor', 'total': 'RM 8.10 Key: Value Company Name: null Date of Receipt: null Address of Company: null'}
2023-01-25 19:42:56,641 - __main__ - INFO - 92 - <module>() - Predicting document 165...
2023-01-25 19:42:58,835 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  {Company Name}
Date of Receipt: {Date of Receipt}
Address of Company: {Address of Company}
Total: {Total}
2023-01-25 19:42:58,836 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:42:58,836 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:42:58,836 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  {Company Name}

2023-01-25 19:42:58,837 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: {Company Name}
2023-01-25 19:42:58,837 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:42:58,837 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  {Date of Receipt}

2023-01-25 19:42:58,837 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: {Date of Receipt}
2023-01-25 19:42:58,837 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:42:58,837 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  {Address of Company}

2023-01-25 19:42:58,838 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: {Address of Company}
2023-01-25 19:42:58,838 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:42:58,838 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  {Total}
2023-01-25 19:42:58,838 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: {Total}
2023-01-25 19:42:58,838 - __main__ - INFO - 96 - <module>() - Final prediction for document 165: {'company': '{Company Name}', 'date': '{Date of Receipt}', 'address': '{Address of Company}', 'total': '{Total}'}
2023-01-25 19:42:58,839 - __main__ - INFO - 92 - <module>() - Predicting document 166...
2023-01-25 19:43:03,241 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  X-TRADE CENTRAL BHD
Date of Receipt: 2018-11-18
Address of Company: 1A, Jalan Ibrahim, Taman Cengkel 1C, Sungai Penang, 40000 Kajang, Selangor
Total: 5,000,000
2023-01-25 19:43:03,242 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:43:03,242 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:43:03,242 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  X-TRADE CENTRAL BHD

2023-01-25 19:43:03,242 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: X-TRADE CENTRAL BHD
2023-01-25 19:43:03,242 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:43:03,242 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  2018-11-18

2023-01-25 19:43:03,242 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 2018-11-18
2023-01-25 19:43:03,242 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:43:03,242 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  1A, Jalan Ibrahim, Taman Cengkel 1C, Sungai Penang, 40000 Kajang, Selangor

2023-01-25 19:43:03,243 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 1A, Jalan Ibrahim, Taman Cengkel 1C, Sungai Penang, 40000 Kajang, Selangor
2023-01-25 19:43:03,243 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:43:03,243 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  5,000,000
2023-01-25 19:43:03,243 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 5,000,000
2023-01-25 19:43:03,243 - __main__ - INFO - 96 - <module>() - Final prediction for document 166: {'company': 'X-TRADE CENTRAL BHD', 'date': '2018-11-18', 'address': '1A, Jalan Ibrahim, Taman Cengkel 1C, Sungai Penang, 40000 Kajang, Selangor', 'total': '5,000,000'}
2023-01-25 19:43:03,244 - __main__ - INFO - 92 - <module>() - Predicting document 167...
2023-01-25 19:43:10,431 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  Company Name (no space)
Date of Receipt: Date of Receipt
Address of Company: Address of Company (no space)
Total: Total (no spaces)

Example:

Extract "Company Name", "Date of Receipt", "Address of Company", "Total", "<|stop key|>" from the document above. If you can't find a key-value pair in the document set the value to "null".

Key: Value
Company Name: Company Name (no space)
Date of Receipt: Date of Receipt
Address of Company: Address of Company (no
2023-01-25 19:43:10,433 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:43:10,433 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:43:10,433 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Company Name (no space)

2023-01-25 19:43:10,433 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Company Name (no space)
2023-01-25 19:43:10,433 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:43:10,434 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Date of Receipt

2023-01-25 19:43:10,434 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Date of Receipt
2023-01-25 19:43:10,434 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:43:10,434 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Address of Company (no space)

2023-01-25 19:43:10,434 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Address of Company (no space)
2023-01-25 19:43:10,435 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:43:10,435 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Total (no spaces)

Example:

Extract "Company Name", "Date of Receipt", "Address of Company", "Total", "<|stop key|>" from the document above. If you can't find a key-value pair in the document set the value to "null".

Key: Value
Company Name: Company Name (no space)
Date of Receipt: Date of Receipt
Address of Company: Address of Company (no
2023-01-25 19:43:10,435 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Total (no spaces) Example: Extract "Company Name", "Date of Receipt", "Address of Company", "Total", "<|stop key|>" from the document above. If you can't find a key-value pair in the document set the value to "null". Key: Value Company Name: Company Name (no space) Date of Receipt: Date of Receipt Address of Company: Address of Company (no
2023-01-25 19:43:10,436 - __main__ - INFO - 96 - <module>() - Final prediction for document 167: {'company': 'Company Name (no space)', 'date': 'Date of Receipt', 'address': 'Address of Company (no space)', 'total': 'Total (no spaces) Example: Extract "Company Name", "Date of Receipt", "Address of Company", "Total", "<|stop key|>" from the document above. If you can\'t find a key-value pair in the document set the value to "null". Key: Value Company Name: Company Name (no space) Date of Receipt: Date of Receipt Address of Company: Address of Company (no'}
2023-01-25 19:43:10,437 - __main__ - INFO - 92 - <module>() - Predicting document 168...
2023-01-25 19:43:17,920 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  The name of the company who bought the product
Date of Receipt: Date the invoice was created or printed
Address of Company: Company address
Total: The total amount paid by the buyer

"Goods have been received in good order".

If the document contains a "GST Amount" you have to calculate the total amount of the goods sold by multiplying the sales amount by 1.5 (which is inclusive of GST) and this amount should be "added" to the price of the goods purchased.

After collecting the data in a table, you can proceed with creating a report to calculate the GST
2023-01-25 19:43:17,921 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:43:17,921 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:43:17,922 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  The name of the company who bought the product

2023-01-25 19:43:17,922 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: The name of the company who bought the product
2023-01-25 19:43:17,922 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:43:17,923 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Date the invoice was created or printed

2023-01-25 19:43:17,923 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Date the invoice was created or printed
2023-01-25 19:43:17,924 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:43:17,924 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Company address

2023-01-25 19:43:17,924 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Company address
2023-01-25 19:43:17,924 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:43:17,925 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  The total amount paid by the buyer

"Goods have been received in good order".

If the document contains a "GST Amount" you have to calculate the total amount of the goods sold by multiplying the sales amount by 1.5 (which is inclusive of GST) and this amount should be "added" to the price of the goods purchased.

After collecting the data in a table, you can proceed with creating a report to calculate the GST
2023-01-25 19:43:17,925 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: The total amount paid by the buyer "Goods have been received in good order". If the document contains a "GST Amount" you have to calculate the total amount of the goods sold by multiplying the sales amount by 1.5 (which is inclusive of GST) and this amount should be "added" to the price of the goods purchased. After collecting the data in a table, you can proceed with creating a report to calculate the GST
2023-01-25 19:43:17,926 - __main__ - INFO - 96 - <module>() - Final prediction for document 168: {'company': 'The name of the company who bought the product', 'date': 'Date the invoice was created or printed', 'address': 'Company address', 'total': 'The total amount paid by the buyer "Goods have been received in good order". If the document contains a "GST Amount" you have to calculate the total amount of the goods sold by multiplying the sales amount by 1.5 (which is inclusive of GST) and this amount should be "added" to the price of the goods purchased. After collecting the data in a table, you can proceed with creating a report to calculate the GST'}
2023-01-25 19:43:17,928 - __main__ - INFO - 92 - <module>() - Predicting document 169...
2023-01-25 19:43:23,371 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  .............
Date of Receipt: .........
Address of Company: ........
Total: .............

5.
If you can't find key-value pair, add it in the table and try to read.

6.
After you finish adding the key-value pair, save the document by click the "Save" button.
2023-01-25 19:43:23,377 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:43:23,378 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:43:23,379 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  .............

2023-01-25 19:43:23,379 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: .............
2023-01-25 19:43:23,380 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:43:23,381 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  .........

2023-01-25 19:43:23,381 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: .........
2023-01-25 19:43:23,382 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:43:23,382 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  ........

2023-01-25 19:43:23,383 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: ........
2023-01-25 19:43:23,383 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:43:23,383 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  .............

5.
If you can't find key-value pair, add it in the table and try to read.

6.
After you finish adding the key-value pair, save the document by click the "Save" button.
2023-01-25 19:43:23,384 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: ............. 5. If you can't find key-value pair, add it in the table and try to read. 6. After you finish adding the key-value pair, save the document by click the "Save" button.
2023-01-25 19:43:23,384 - __main__ - INFO - 96 - <module>() - Final prediction for document 169: {'company': '.............', 'date': '.........', 'address': '........', 'total': '............. 5. If you can\'t find key-value pair, add it in the table and try to read. 6. After you finish adding the key-value pair, save the document by click the "Save" button.'}
2023-01-25 19:43:23,391 - __main__ - INFO - 92 - <module>() - Predicting document 170...
2023-01-25 19:43:30,178 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  Company name
Date of Receipt: Date of Receipt
Address of Company: Address of Company
Total: Total amount

The <|stop key|> above has no key, as is to be displayed when the end of the file is reached.

The key, value pair set up at line 4 and 5 will store the fields from each line into arrays that you have named arrayName[i], where i is the number of arrays that you want. So, in the example you will get arrayName[0] = name of company, arrayName[1] = date of receipt, arrayName[2
2023-01-25 19:43:30,180 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:43:30,180 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:43:30,181 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Company name

2023-01-25 19:43:30,181 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Company name
2023-01-25 19:43:30,182 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:43:30,182 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Date of Receipt

2023-01-25 19:43:30,182 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Date of Receipt
2023-01-25 19:43:30,183 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:43:30,183 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Address of Company

2023-01-25 19:43:30,183 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Address of Company
2023-01-25 19:43:30,183 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:43:30,184 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Total amount

The <|stop key|> above has no key, as is to be displayed when the end of the file is reached.

The key, value pair set up at line 4 and 5 will store the fields from each line into arrays that you have named arrayName[i], where i is the number of arrays that you want. So, in the example you will get arrayName[0] = name of company, arrayName[1] = date of receipt, arrayName[2
2023-01-25 19:43:30,184 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Total amount The <|stop key|> above has no key, as is to be displayed when the end of the file is reached. The key, value pair set up at line 4 and 5 will store the fields from each line into arrays that you have named arrayName[i], where i is the number of arrays that you want. So, in the example you will get arrayName[0] = name of company, arrayName[1] = date of receipt, arrayName[2
2023-01-25 19:43:30,184 - __main__ - INFO - 96 - <module>() - Final prediction for document 170: {'company': 'Company name', 'date': 'Date of Receipt', 'address': 'Address of Company', 'total': 'Total amount The <|stop key|> above has no key, as is to be displayed when the end of the file is reached. The key, value pair set up at line 4 and 5 will store the fields from each line into arrays that you have named arrayName[i], where i is the number of arrays that you want. So, in the example you will get arrayName[0] = name of company, arrayName[1] = date of receipt, arrayName[2'}
2023-01-25 19:43:30,188 - __main__ - INFO - 92 - <module>() - Predicting document 171...
2023-01-25 19:43:33,548 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  CIC Insurance Brokers Limited
Date of Receipt: 26/10/2012
Address of Company: No. 1 Menara Starhill,
Petaling Jaya
, Selangor
Total: RM13
2023-01-25 19:43:33,548 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:43:33,548 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:43:33,548 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  CIC Insurance Brokers Limited

2023-01-25 19:43:33,548 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: CIC Insurance Brokers Limited
2023-01-25 19:43:33,549 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:43:33,549 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  26/10/2012

2023-01-25 19:43:33,549 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 26/10/2012
2023-01-25 19:43:33,549 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:43:33,549 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  No. 1 Menara Starhill,
Petaling Jaya
, Selangor

2023-01-25 19:43:33,549 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: No. 1 Menara Starhill, Petaling Jaya , Selangor
2023-01-25 19:43:33,550 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:43:33,550 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  RM13
2023-01-25 19:43:33,550 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: RM13
2023-01-25 19:43:33,550 - __main__ - INFO - 96 - <module>() - Final prediction for document 171: {'company': 'CIC Insurance Brokers Limited', 'date': '26/10/2012', 'address': 'No. 1 Menara Starhill, Petaling Jaya , Selangor', 'total': 'RM13'}
2023-01-25 19:43:33,551 - __main__ - INFO - 92 - <module>() - Predicting document 172...
2023-01-25 19:43:40,850 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  葉山工商集團
Date of Receipt: 17/03/2016
Address of Company: KING'S CONFECTIONERY S/B 273500-U (JJ)
Total: 710020

Write the extracted key-value pairs in a text document or file. Save the file with a meaningful name.

Print the extracted key-value pairs on a paper. Fold each paper in a Z-like form with 2 folds (like a pocket) to hold the receipt: Z (folded) Z (folded). Insert them in the pocket-
2023-01-25 19:43:40,852 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:43:40,852 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:43:40,854 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  葉山工商集團

2023-01-25 19:43:40,854 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 葉山工商集團
2023-01-25 19:43:40,855 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:43:40,855 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  17/03/2016

2023-01-25 19:43:40,855 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 17/03/2016
2023-01-25 19:43:40,855 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:43:40,856 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  KING'S CONFECTIONERY S/B 273500-U (JJ)

2023-01-25 19:43:40,856 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: KING'S CONFECTIONERY S/B 273500-U (JJ)
2023-01-25 19:43:40,856 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:43:40,856 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  710020

Write the extracted key-value pairs in a text document or file. Save the file with a meaningful name.

Print the extracted key-value pairs on a paper. Fold each paper in a Z-like form with 2 folds (like a pocket) to hold the receipt: Z (folded) Z (folded). Insert them in the pocket-
2023-01-25 19:43:40,857 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 710020 Write the extracted key-value pairs in a text document or file. Save the file with a meaningful name. Print the extracted key-value pairs on a paper. Fold each paper in a Z-like form with 2 folds (like a pocket) to hold the receipt: Z (folded) Z (folded). Insert them in the pocket-
2023-01-25 19:43:40,857 - __main__ - INFO - 96 - <module>() - Final prediction for document 172: {'company': '葉山工商集團', 'date': '17/03/2016', 'address': "KING'S CONFECTIONERY S/B 273500-U (JJ)", 'total': '710020 Write the extracted key-value pairs in a text document or file. Save the file with a meaningful name. Print the extracted key-value pairs on a paper. Fold each paper in a Z-like form with 2 folds (like a pocket) to hold the receipt: Z (folded) Z (folded). Insert them in the pocket-'}
2023-01-25 19:43:40,859 - __main__ - INFO - 92 - <module>() - Predicting document 173...
2023-01-25 19:43:48,102 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:
Date of Receipt:
Address of Company:
Total:

Your input:

Company Name:
Date of Receipt:
Address of Company:
Total:
Value:
Value:
Company Name:
Date of Receipt:
Address of Company:
Total:
Value:
Value:
Company Name:
Date of Receipt:
Address of Company:
Total:
Value:
Value:
Company Name:
Date of Receipt:
Address of Company:
Total:
2023-01-25 19:43:48,103 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:43:48,104 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:43:48,105 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:43:48,105 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:43:48,105 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:43:48,106 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:43:48,106 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:43:48,106 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:43:48,107 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:43:48,107 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:43:48,108 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:43:48,109 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

Your input:

Company Name:
Date of Receipt:
Address of Company:

2023-01-25 19:43:48,109 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Your input: Company Name: Date of Receipt: Address of Company:
2023-01-25 19:43:48,109 - __main__ - INFO - 96 - <module>() - Final prediction for document 173: {'total': 'Your input: Company Name: Date of Receipt: Address of Company:'}
2023-01-25 19:43:48,111 - __main__ - INFO - 92 - <module>() - Predicting document 174...
2023-01-25 19:43:53,710 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  THE BIG GROUP
Date of Receipt: 8/03/2018
Address of Company: Unit A, 1st Floor, Block 7, Jalan Maharajalela, 57000 Kuala Lumpur, Selangor
Total: 81.00

Note that I've put in a stop key just in case.

I'm not entirely sure about the date formatting for this.


2023-01-25 19:43:53,712 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:43:53,712 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:43:53,713 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  THE BIG GROUP

2023-01-25 19:43:53,714 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: THE BIG GROUP
2023-01-25 19:43:53,715 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:43:53,715 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  8/03/2018

2023-01-25 19:43:53,716 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 8/03/2018
2023-01-25 19:43:53,716 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:43:53,717 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Unit A, 1st Floor, Block 7, Jalan Maharajalela, 57000 Kuala Lumpur, Selangor

2023-01-25 19:43:53,717 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Unit A, 1st Floor, Block 7, Jalan Maharajalela, 57000 Kuala Lumpur, Selangor
2023-01-25 19:43:53,718 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:43:53,718 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  81.00

Note that I've put in a stop key just in case.

I'm not entirely sure about the date formatting for this.


2023-01-25 19:43:53,719 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 81.00 Note that I've put in a stop key just in case. I'm not entirely sure about the date formatting for this.
2023-01-25 19:43:53,719 - __main__ - INFO - 96 - <module>() - Final prediction for document 174: {'company': 'THE BIG GROUP', 'date': '8/03/2018', 'address': 'Unit A, 1st Floor, Block 7, Jalan Maharajalela, 57000 Kuala Lumpur, Selangor', 'total': "81.00 Note that I've put in a stop key just in case. I'm not entirely sure about the date formatting for this."}
2023-01-25 19:43:53,723 - __main__ - INFO - 92 - <module>() - Predicting document 175...
2023-01-25 19:44:01,294 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  <doc text>
Date of Receipt: <doc text>
Address of Company: <doc text>
Total: <doc text>
|<stop key|>

Save the data as an Excel sheet in the format described above. The Excel file should look like:

CompanyName
Date of Receipt
Address of Company
Total

(null)
11/04/2018
Jl. T. M. No. 4 Raya
RM30.00

Once you have the files the next step is to import the data into Excel. Go to File > Import > Existing
2023-01-25 19:44:01,295 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:44:01,296 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:44:01,296 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  <doc text>

2023-01-25 19:44:01,297 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: <doc text>
2023-01-25 19:44:01,297 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:44:01,297 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  <doc text>

2023-01-25 19:44:01,298 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: <doc text>
2023-01-25 19:44:01,298 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:44:01,298 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  <doc text>

2023-01-25 19:44:01,298 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: <doc text>
2023-01-25 19:44:01,299 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:44:01,299 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  <doc text>
|<stop key|>

Save the data as an Excel sheet in the format described above. The Excel file should look like:

CompanyName
Date of Receipt
Address of Company
Total

(null)
11/04/2018
Jl. T. M. No. 4 Raya
RM30.00

Once you have the files the next step is to import the data into Excel. Go to File > Import > Existing
2023-01-25 19:44:01,299 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: <doc text> |<stop key|> Save the data as an Excel sheet in the format described above. The Excel file should look like: CompanyName Date of Receipt Address of Company Total (null) 11/04/2018 Jl. T. M. No. 4 Raya RM30.00 Once you have the files the next step is to import the data into Excel. Go to File > Import > Existing
2023-01-25 19:44:01,299 - __main__ - INFO - 96 - <module>() - Final prediction for document 175: {'company': '<doc text>', 'date': '<doc text>', 'address': '<doc text>', 'total': '<doc text> |<stop key|> Save the data as an Excel sheet in the format described above. The Excel file should look like: CompanyName Date of Receipt Address of Company Total (null) 11/04/2018 Jl. T. M. No. 4 Raya RM30.00 Once you have the files the next step is to import the data into Excel. Go to File > Import > Existing'}
2023-01-25 19:44:01,301 - __main__ - INFO - 92 - <module>() - Predicting document 176...
2023-01-25 19:44:08,650 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  Tropicana
Date of Receipt: 17/02/2018
Address of Company: Kepong
Total: 0.02
TOTAL: 0.02
The document set contains the following text:

Dear Customer, This is the company’s Tax Invoice.

Goods sold are not returnable.

A Tax Invoice will be issued with your company name and Tax Invoice number.

Please sign this tax invoice and complete the information,
then paste this Tax Invoice to the end of your application.

Tropicana

Cash

RM7.40

Total
2023-01-25 19:44:08,652 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:44:08,652 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:44:08,653 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Tropicana

2023-01-25 19:44:08,653 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Tropicana
2023-01-25 19:44:08,653 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:44:08,654 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  17/02/2018

2023-01-25 19:44:08,654 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 17/02/2018
2023-01-25 19:44:08,655 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:44:08,655 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Kepong

2023-01-25 19:44:08,656 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Kepong
2023-01-25 19:44:08,656 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:44:08,657 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  0.02

2023-01-25 19:44:08,657 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 0.02
2023-01-25 19:44:08,657 - __main__ - INFO - 96 - <module>() - Final prediction for document 176: {'company': 'Tropicana', 'date': '17/02/2018', 'address': 'Kepong', 'total': '0.02'}
2023-01-25 19:44:08,661 - __main__ - INFO - 92 - <module>() - Predicting document 177...
2023-01-25 19:44:16,262 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  Alpha.com
Date of Receipt: 01/08/2018
Address of Company:
Total: 34.80 (Incl GST)

Create a function named 'calculateSalary' that, takes a value from the document above as parameter named 'salary'.
This function should return a value in cents that is equivalent to 100 multiplied by 'salary'.

Function calculateSalary(salary)
    salary = parseFloat(salary)
    totalCents = salary * 100
    c = totalCents
    return(c)
end

Write a
2023-01-25 19:44:16,263 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:44:16,263 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:44:16,263 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Alpha.com

2023-01-25 19:44:16,263 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Alpha.com
2023-01-25 19:44:16,263 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:44:16,263 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  01/08/2018

2023-01-25 19:44:16,263 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 01/08/2018
2023-01-25 19:44:16,263 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:44:16,264 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:44:16,264 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:44:16,264 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:44:16,264 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  34.80 (Incl GST)

Create a function named 'calculateSalary' that, takes a value from the document above as parameter named 'salary'.
This function should return a value in cents that is equivalent to 100 multiplied by 'salary'.

Function calculateSalary(salary)
    salary = parseFloat(salary)
    totalCents = salary * 100
    c = totalCents
    return(c)
end

Write a
2023-01-25 19:44:16,264 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 34.80 (Incl GST) Create a function named 'calculateSalary' that, takes a value from the document above as parameter named 'salary'. This function should return a value in cents that is equivalent to 100 multiplied by 'salary'. Function calculateSalary(salary)   salary = parseFloat(salary)   totalCents = salary * 100   c = totalCents   return(c) end Write a
2023-01-25 19:44:16,264 - __main__ - INFO - 96 - <module>() - Final prediction for document 177: {'company': 'Alpha.com', 'date': '01/08/2018', 'total': "34.80 (Incl GST) Create a function named 'calculateSalary' that, takes a value from the document above as parameter named 'salary'. This function should return a value in cents that is equivalent to 100 multiplied by 'salary'. Function calculateSalary(salary)   salary = parseFloat(salary)   totalCents = salary * 100   c = totalCents   return(c) end Write a"}
2023-01-25 19:44:16,265 - __main__ - INFO - 92 - <module>() - Predicting document 178...
2023-01-25 19:44:18,411 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  <document text>
Date of Receipt: <document date>
Address of Company: <document text>
Total: <document text>
2023-01-25 19:44:18,412 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:44:18,412 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:44:18,413 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  <document text>

2023-01-25 19:44:18,413 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: <document text>
2023-01-25 19:44:18,413 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:44:18,414 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  <document date>

2023-01-25 19:44:18,414 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: <document date>
2023-01-25 19:44:18,414 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:44:18,414 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  <document text>

2023-01-25 19:44:18,415 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: <document text>
2023-01-25 19:44:18,415 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:44:18,415 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  <document text>
2023-01-25 19:44:18,415 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: <document text>
2023-01-25 19:44:18,416 - __main__ - INFO - 96 - <module>() - Final prediction for document 178: {'company': '<document text>', 'date': '<document date>', 'address': '<document text>', 'total': '<document text>'}
2023-01-25 19:44:18,418 - __main__ - INFO - 92 - <module>() - Predicting document 179...
2023-01-25 19:44:21,484 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  KRP
Date of Receipt: 02/05/2009
Address of Company: 4th Floor, Jalan Mahkota Baru 2, Puchong
Total: RM 0.20
2023-01-25 19:44:21,484 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:44:21,484 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:44:21,484 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  KRP

2023-01-25 19:44:21,484 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: KRP
2023-01-25 19:44:21,484 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:44:21,485 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  02/05/2009

2023-01-25 19:44:21,485 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 02/05/2009
2023-01-25 19:44:21,485 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:44:21,485 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  4th Floor, Jalan Mahkota Baru 2, Puchong

2023-01-25 19:44:21,485 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 4th Floor, Jalan Mahkota Baru 2, Puchong
2023-01-25 19:44:21,485 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:44:21,485 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  RM 0.20
2023-01-25 19:44:21,485 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: RM 0.20
2023-01-25 19:44:21,485 - __main__ - INFO - 96 - <module>() - Final prediction for document 179: {'company': 'KRP', 'date': '02/05/2009', 'address': '4th Floor, Jalan Mahkota Baru 2, Puchong', 'total': 'RM 0.20'}
2023-01-25 19:44:21,486 - __main__ - INFO - 92 - <module>() - Predicting document 180...
2023-01-25 19:44:23,639 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  Company Name
Date of Receipt: Date of Receipt
Address of Company: Address of Company
Total: Total
2023-01-25 19:44:23,640 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:44:23,640 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:44:23,641 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Company Name

2023-01-25 19:44:23,641 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Company Name
2023-01-25 19:44:23,641 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:44:23,642 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Date of Receipt

2023-01-25 19:44:23,642 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Date of Receipt
2023-01-25 19:44:23,642 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:44:23,642 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Address of Company

2023-01-25 19:44:23,643 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Address of Company
2023-01-25 19:44:23,643 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:44:23,643 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Total
2023-01-25 19:44:23,643 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Total
2023-01-25 19:44:23,644 - __main__ - INFO - 96 - <module>() - Final prediction for document 180: {'company': 'Company Name', 'date': 'Date of Receipt', 'address': 'Address of Company', 'total': 'Total'}
2023-01-25 19:44:23,646 - __main__ - INFO - 92 - <module>() - Predicting document 181...
2023-01-25 19:44:30,313 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  "Vance Gas Refill 50ML"
Date of Receipt: 28/07/2017 9:49:42
Address of Company: "Jalan SS21/60, Damansara Utama, 47400 Petaling Jaya, Selangor, Malaysia"
Total: RM28.80
Value = 12.90

Output
{
  "company": "Vance Gas Refill 50ML",
  "date": "28/07/17 9:49:42",
  "address": "Jalan SS21/60, Damansara Utama, 47400 Pet
2023-01-25 19:44:30,314 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:44:30,314 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:44:30,315 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  "Vance Gas Refill 50ML"

2023-01-25 19:44:30,315 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Vance Gas Refill 50ML
2023-01-25 19:44:30,315 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:44:30,316 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  28/07/2017 9:49:42

2023-01-25 19:44:30,316 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 28/07/2017 9:49:42
2023-01-25 19:44:30,317 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:44:30,317 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  "Jalan SS21/60, Damansara Utama, 47400 Petaling Jaya, Selangor, Malaysia"

2023-01-25 19:44:30,317 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Jalan SS21/60, Damansara Utama, 47400 Petaling Jaya, Selangor, Malaysia
2023-01-25 19:44:30,317 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:44:30,318 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  RM28.80
Value = 12.90

Output
{
  "company": "Vance Gas Refill 50ML",
  "date": "28/07/17 9:49:42",
  "address": "Jalan SS21/60, Damansara Utama, 47400 Pet
2023-01-25 19:44:30,318 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: RM28.80 Value = 12.90 Output {  "company": "Vance Gas Refill 50ML",  "date": "28/07/17 9:49:42",  "address": "Jalan SS21/60, Damansara Utama, 47400 Pet
2023-01-25 19:44:30,318 - __main__ - INFO - 96 - <module>() - Final prediction for document 181: {'company': 'Vance Gas Refill 50ML', 'date': '28/07/2017 9:49:42', 'address': 'Jalan SS21/60, Damansara Utama, 47400 Petaling Jaya, Selangor, Malaysia', 'total': 'RM28.80 Value = 12.90 Output {  "company": "Vance Gas Refill 50ML",  "date": "28/07/17 9:49:42",  "address": "Jalan SS21/60, Damansara Utama, 47400 Pet'}
2023-01-25 19:44:30,320 - __main__ - INFO - 92 - <module>() - Predicting document 182...
2023-01-25 19:44:37,672 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  Company Name
Date of Receipt: Date of Receipt
Address of Company: Address of Company
Total: Total
Company Registration Number: Company Registration Number
Register number(Company Registration Number): Register number(Company Registration Number)
Type of Goods: Type of Goods
Gross Total: Gross Total
Discount: Discount
GST(Include GST): GST(Include GST)
GST Percent: GST Percent
Discount Percent: Discount Percent
GST Summary: GST Summary
GST Amount: GST Amount
GST Tax Rate: GST Tax Rate
GST Tax: GST
2023-01-25 19:44:37,673 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:44:37,673 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:44:37,673 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Company Name

2023-01-25 19:44:37,673 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Company Name
2023-01-25 19:44:37,673 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:44:37,674 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Date of Receipt

2023-01-25 19:44:37,674 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Date of Receipt
2023-01-25 19:44:37,674 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:44:37,674 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Address of Company

2023-01-25 19:44:37,674 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Address of Company
2023-01-25 19:44:37,674 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:44:37,675 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Total
Company Registration Number: Company Registration Number
Register number(Company Registration Number): Register number(Company Registration Number)
Type of Goods: Type of Goods
Gross
2023-01-25 19:44:37,675 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Total Company Registration Number: Company Registration Number Register number(Company Registration Number): Register number(Company Registration Number) Type of Goods: Type of Goods Gross
2023-01-25 19:44:37,675 - __main__ - INFO - 96 - <module>() - Final prediction for document 182: {'company': 'Company Name', 'date': 'Date of Receipt', 'address': 'Address of Company', 'total': 'Total Company Registration Number: Company Registration Number Register number(Company Registration Number): Register number(Company Registration Number) Type of Goods: Type of Goods Gross'}
2023-01-25 19:44:37,676 - __main__ - INFO - 92 - <module>() - Predicting document 183...
2023-01-25 19:44:45,014 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  DSAI INDUSTRIES
Date of Receipt: 12/11/2015
Address of Company: MIRI MULIA, KARAKONDA, NIGERIA
Total: 0.00
Total with GST @ 6% (after discount): 0.00
Surcharge: $ 0.00
Change: 0.00
GST Analysis: 0.00
Qty: 1
Total with GST @ 6% (before discount): 73.00
Surcharge: $ 0.00
Change: 0.00
GST Analysis: 0.00

2023-01-25 19:44:45,016 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:44:45,017 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:44:45,017 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  DSAI INDUSTRIES

2023-01-25 19:44:45,017 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: DSAI INDUSTRIES
2023-01-25 19:44:45,017 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:44:45,018 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  12/11/2015

2023-01-25 19:44:45,018 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 12/11/2015
2023-01-25 19:44:45,018 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:44:45,018 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  MIRI MULIA, KARAKONDA, NIGERIA

2023-01-25 19:44:45,019 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: MIRI MULIA, KARAKONDA, NIGERIA
2023-01-25 19:44:45,019 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:44:45,019 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  0.00
Total with GST @ 6% (after discount): 0.00
Surcharge: $ 0.00
Change: 0.00
GST Analysis: 0.00
Qty: 1
Total with GST @ 6% (before discount): 73.00
Surcharge: $ 0.00
Change: 0.00
GST Analysis: 0.00

2023-01-25 19:44:45,019 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 0.00 Total with GST @ 6% (after discount): 0.00 Surcharge: $ 0.00 Change: 0.00 GST Analysis: 0.00 Qty: 1 Total with GST @ 6% (before discount): 73.00 Surcharge: $ 0.00 Change: 0.00 GST Analysis: 0.00
2023-01-25 19:44:45,020 - __main__ - INFO - 96 - <module>() - Final prediction for document 183: {'company': 'DSAI INDUSTRIES', 'date': '12/11/2015', 'address': 'MIRI MULIA, KARAKONDA, NIGERIA', 'total': '0.00 Total with GST @ 6% (after discount): 0.00 Surcharge: $ 0.00 Change: 0.00 GST Analysis: 0.00 Qty: 1 Total with GST @ 6% (before discount): 73.00 Surcharge: $ 0.00 Change: 0.00 GST Analysis: 0.00'}
2023-01-25 19:44:45,022 - __main__ - INFO - 92 - <module>() - Predicting document 184...
2023-01-25 19:44:54,802 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  <input type="text" id="companyname" name="companyname" />
Date of Receipt: <input type="date" id="dateofreceipt" name="dateofreceipt" />
Address of Company: <input type="text" id="addressofcompany" name="addressofcompany" />
Total: <input type="text" id="total" name="total" />

Use the code below to display "Company Name" from the document above.

document.getElementById("companyname").value

Use the code below to display the date of receipt

document
2023-01-25 19:44:54,802 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:44:54,802 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:44:54,802 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  <input type="text" id="companyname" name="companyname" />

2023-01-25 19:44:54,803 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: <input type="text" id="companyname" name="companyname" />
2023-01-25 19:44:54,803 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:44:54,803 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  <input type="date" id="dateofreceipt" name="dateofreceipt" />

2023-01-25 19:44:54,803 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: <input type="date" id="dateofreceipt" name="dateofreceipt" />
2023-01-25 19:44:54,803 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:44:54,803 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  <input type="text" id="addressofcompany" name="addressofcompany" />

2023-01-25 19:44:54,803 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: <input type="text" id="addressofcompany" name="addressofcompany" />
2023-01-25 19:44:54,803 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:44:54,803 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  <input type="text" id="total" name="total" />

Use the code below to display "Company Name" from the document above.

document.getElementById("companyname").value

Use the code below to display the date of receipt

document
2023-01-25 19:44:54,803 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: <input type="text" id="total" name="total" /> Use the code below to display "Company Name" from the document above. document.getElementById("companyname").value Use the code below to display the date of receipt document
2023-01-25 19:44:54,804 - __main__ - INFO - 96 - <module>() - Final prediction for document 184: {'company': '<input type="text" id="companyname" name="companyname" />', 'date': '<input type="date" id="dateofreceipt" name="dateofreceipt" />', 'address': '<input type="text" id="addressofcompany" name="addressofcompany" />', 'total': '<input type="text" id="total" name="total" /> Use the code below to display "Company Name" from the document above. document.getElementById("companyname").value Use the code below to display the date of receipt document'}
2023-01-25 19:44:54,804 - __main__ - INFO - 92 - <module>() - Predicting document 185...
2023-01-25 19:44:59,773 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  Panda
Date of Receipt: 07-06-2016
Address of Company: Kuala Lumpur
Total: 2460.00
If some values are not included in the extract above, just left them as "null". This will cause the program to skip the records for the company. If you need to handle missing values, the section of the code above can help you identify the records for the company that you need to skip.
2023-01-25 19:44:59,773 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:44:59,773 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:44:59,773 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Panda

2023-01-25 19:44:59,774 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Panda
2023-01-25 19:44:59,774 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:44:59,774 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  07-06-2016

2023-01-25 19:44:59,774 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 07-06-2016
2023-01-25 19:44:59,774 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:44:59,774 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Kuala Lumpur

2023-01-25 19:44:59,774 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Kuala Lumpur
2023-01-25 19:44:59,774 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:44:59,774 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  2460.00
If some values are not included in the extract above, just left them as "null". This will cause the program to skip the records for the company. If you need to handle missing values, the section of the code above can help you identify the records for the company that you need to skip.
2023-01-25 19:44:59,774 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 2460.00 If some values are not included in the extract above, just left them as "null". This will cause the program to skip the records for the company. If you need to handle missing values, the section of the code above can help you identify the records for the company that you need to skip.
2023-01-25 19:44:59,774 - __main__ - INFO - 96 - <module>() - Final prediction for document 185: {'company': 'Panda', 'date': '07-06-2016', 'address': 'Kuala Lumpur', 'total': '2460.00 If some values are not included in the extract above, just left them as "null". This will cause the program to skip the records for the company. If you need to handle missing values, the section of the code above can help you identify the records for the company that you need to skip.'}
2023-01-25 19:44:59,775 - __main__ - INFO - 92 - <module>() - Predicting document 186...
2023-01-25 19:45:11,258 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  The Name of Your Company
Receipt Date: The Date of Receipt
Address of Company: The Address of Company
Total: Total Amount Received.

4.1.2.2.2 Data Processing Agreement
For the purpose of this project, the terms defined in the Data Processing Agreement are as follows:
Terminology
• Data: all information and content which can be communicated, stored or produced, whether in digital or analog form, including documents, emails, files, messages, databases, information stored in computers, etc.
• Data Controller: any organisation, company, group of companies or other
2023-01-25 19:45:11,259 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:45:11,259 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:45:11,259 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  The Name of Your Company
Receipt Date: The Date of Receipt

2023-01-25 19:45:11,260 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: The Name of Your Company Receipt Date: The Date of Receipt
2023-01-25 19:45:11,260 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:45:11,260 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:45:11,260 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  The Address of Company

2023-01-25 19:45:11,261 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: The Address of Company
2023-01-25 19:45:11,261 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:45:11,261 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Total Amount Received.

4.1.2.2.2 Data Processing Agreement
For the purpose of this project, the terms defined in the Data Processing Agreement are as follows:
Terminology
• Data: all information and content which can be communicated, stored or produced, whether in digital or analog form, including documents, emails, files, messages, databases, information stored in computers, etc.
• Data Controller: any organisation, company, group of companies or other
2023-01-25 19:45:11,262 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Total Amount Received. 4.1.2.2.2 Data Processing Agreement For the purpose of this project, the terms defined in the Data Processing Agreement are as follows: Terminology • Data: all information and content which can be communicated, stored or produced, whether in digital or analog form, including documents, emails, files, messages, databases, information stored in computers, etc. • Data Controller: any organisation, company, group of companies or other
2023-01-25 19:45:11,262 - __main__ - INFO - 96 - <module>() - Final prediction for document 186: {'company': 'The Name of Your Company Receipt Date: The Date of Receipt', 'address': 'The Address of Company', 'total': 'Total Amount Received. 4.1.2.2.2 Data Processing Agreement For the purpose of this project, the terms defined in the Data Processing Agreement are as follows: Terminology • Data: all information and content which can be communicated, stored or produced, whether in digital or analog form, including documents, emails, files, messages, databases, information stored in computers, etc. • Data Controller: any organisation, company, group of companies or other'}
2023-01-25 19:45:11,264 - __main__ - INFO - 92 - <module>() - Predicting document 187...
2023-01-25 19:45:14,523 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:
Date of Receipt:
Address of Company:
Total:
2023-01-25 19:45:14,523 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:45:14,523 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:45:14,524 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:45:14,524 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:45:14,524 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:45:14,524 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:45:14,524 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:45:14,524 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:45:14,524 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:45:14,524 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:45:14,524 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:45:14,524 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:
2023-01-25 19:45:14,525 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:45:14,525 - __main__ - INFO - 96 - <module>() - Final prediction for document 187: {}
2023-01-25 19:45:14,525 - __main__ - INFO - 92 - <module>() - Predicting document 188...
2023-01-25 19:45:16,412 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:
Date of Receipt: 26-Apr-2017
Address of Company:
Total: 4,900.00
2023-01-25 19:45:16,412 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:45:16,412 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:45:16,412 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:45:16,412 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:45:16,413 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:45:16,413 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  26-Apr-2017

2023-01-25 19:45:16,413 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 26-Apr-2017
2023-01-25 19:45:16,413 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:45:16,413 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:45:16,413 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:45:16,413 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:45:16,413 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  4,900.00
2023-01-25 19:45:16,413 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 4,900.00
2023-01-25 19:45:16,413 - __main__ - INFO - 96 - <module>() - Final prediction for document 188: {'date': '26-Apr-2017', 'total': '4,900.00'}
2023-01-25 19:45:16,414 - __main__ - INFO - 92 - <module>() - Predicting document 189...
2023-01-25 19:45:23,364 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  PJ. Tanjongmas Book Centre (PJ) SDN BHD
Date of Receipt: 31/03/2016
Address of Company: Lot F15, Giant Bander Puteri

Output your data on STDOUT or a file, but make sure the data is comma-separated.

Output:
Company Name|31/03/2016|Lot F15, Giant Bander Puteri
Address|
Total|$4.37

Task 2 - Solution 2

The input document should contain a list of products as follows:
Product_ID|Product_Name|
2023-01-25 19:45:23,365 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:45:23,366 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:45:23,366 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  PJ. Tanjongmas Book Centre (PJ) SDN BHD

2023-01-25 19:45:23,366 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: PJ. Tanjongmas Book Centre (PJ) SDN BHD
2023-01-25 19:45:23,367 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:45:23,367 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  31/03/2016

2023-01-25 19:45:23,367 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 31/03/2016
2023-01-25 19:45:23,367 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:45:23,368 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Lot F15, Giant Bander Puteri

Output your data on STDOUT or a file, but make sure the data is comma-separated.

Output:
Company Name|31/03/2016|Lot F15, Giant Bander Puteri
Address|
Total|$4.37

Task 2 - Solution 2

The input document should contain a list of products as follows:
Product_ID|Product_Name|
2023-01-25 19:45:23,368 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Lot F15, Giant Bander Puteri Output your data on STDOUT or a file, but make sure the data is comma-separated. Output: Company Name|31/03/2016|Lot F15, Giant Bander Puteri Address| Total|$4.37 Task 2 - Solution 2 The input document should contain a list of products as follows: Product_ID|Product_Name|
2023-01-25 19:45:23,368 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:45:23,368 - __main__ - INFO - 96 - <module>() - Final prediction for document 189: {'company': 'PJ. Tanjongmas Book Centre (PJ) SDN BHD', 'date': '31/03/2016', 'address': 'Lot F15, Giant Bander Puteri Output your data on STDOUT or a file, but make sure the data is comma-separated. Output: Company Name|31/03/2016|Lot F15, Giant Bander Puteri Address| Total|$4.37 Task 2 - Solution 2 The input document should contain a list of products as follows: Product_ID|Product_Name|'}
2023-01-25 19:45:23,370 - __main__ - INFO - 92 - <module>() - Predicting document 190...
2023-01-25 19:45:30,283 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  Company Name
Date of Receipt: Date of Receipt
Address of Company: Address of Company
Total: Total

07/06/2018

18:17:39

I only need the key:value from "Total" tag. When you're done, your program should return a JSON string that looks like this.

{"company name":"Company Name","date of receipt":"Date of Receipt","address of company":"Address of Company","total":"14.98"}

07/06/2018

18:17:39

Solution

<?php
//get input

2023-01-25 19:45:30,284 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:45:30,285 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:45:30,285 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Company Name

2023-01-25 19:45:30,285 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Company Name
2023-01-25 19:45:30,285 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:45:30,286 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Date of Receipt

2023-01-25 19:45:30,286 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Date of Receipt
2023-01-25 19:45:30,286 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:45:30,286 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Address of Company

2023-01-25 19:45:30,286 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Address of Company
2023-01-25 19:45:30,287 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:45:30,287 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Total

07/06/2018

18:17:39

I only need the key:value from "Total" tag. When you're done, your program should return a JSON string that looks like this.

{"company name":"Company Name","date of receipt":"Date of Receipt","address of company":"Address of Company","total":"14.98"}

07/06/2018

18:17:39

Solution

<?php
//get input

2023-01-25 19:45:30,287 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Total 07/06/2018 18:17:39 I only need the key:value from "Total" tag. When you're done, your program should return a JSON string that looks like this. {"company name":"Company Name","date of receipt":"Date of Receipt","address of company":"Address of Company","total":"14.98"} 07/06/2018 18:17:39 Solution <?php //get input
2023-01-25 19:45:30,287 - __main__ - INFO - 96 - <module>() - Final prediction for document 190: {'company': 'Company Name', 'date': 'Date of Receipt', 'address': 'Address of Company', 'total': 'Total 07/06/2018 18:17:39 I only need the key:value from "Total" tag. When you\'re done, your program should return a JSON string that looks like this. {"company name":"Company Name","date of receipt":"Date of Receipt","address of company":"Address of Company","total":"14.98"} 07/06/2018 18:17:39 Solution <?php //get input'}
2023-01-25 19:45:30,288 - __main__ - INFO - 92 - <module>() - Predicting document 191...
2023-01-25 19:45:32,343 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:
Date of Receipt:
Address of Company:
Total:
2023-01-25 19:45:32,343 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:45:32,343 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:45:32,343 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:45:32,344 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:45:32,344 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:45:32,344 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:45:32,344 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:45:32,344 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:45:32,344 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:45:32,344 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:45:32,344 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:45:32,345 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:
2023-01-25 19:45:32,345 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:45:32,345 - __main__ - INFO - 96 - <module>() - Final prediction for document 191: {}
2023-01-25 19:45:32,346 - __main__ - INFO - 92 - <module>() - Predicting document 192...
2023-01-25 19:45:38,856 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  Citi
Date of Receipt: 09/21/2016
Address of Company: 4F
Total:

Create an Inverted Index Data Structure (Dictionary) from the values in the document set.
Store the values from the Inverted Index Data Structure (Dictionary) in the document set (for example the name of the product that costs $5 and its quantity is equal to 4).
For each entry, create another dictionary from the item name to its cost, with the key being the item name.
Write down the results as a list.

{
"Citi" : {
"<|
2023-01-25 19:45:38,857 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:45:38,858 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:45:38,858 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Citi

2023-01-25 19:45:38,858 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Citi
2023-01-25 19:45:38,858 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:45:38,859 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  09/21/2016

2023-01-25 19:45:38,859 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 09/21/2016
2023-01-25 19:45:38,859 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:45:38,859 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  4F

2023-01-25 19:45:38,859 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 4F
2023-01-25 19:45:38,860 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:45:38,860 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

Create an Inverted Index Data Structure (Dictionary) from the values in the document set.
Store the values from the Inverted Index Data Structure (Dictionary) in the document set (for example the name of the product that costs $5 and its quantity is equal to 4).
For each entry, create another dictionary from the item name to its cost, with the key being the item name.
Write down the results as a list.

{
"Citi" : {
"<|
2023-01-25 19:45:38,860 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Create an Inverted Index Data Structure (Dictionary) from the values in the document set. Store the values from the Inverted Index Data Structure (Dictionary) in the document set (for example the name of the product that costs $5 and its quantity is equal to 4). For each entry, create another dictionary from the item name to its cost, with the key being the item name. Write down the results as a list. { "Citi" : { "<|
2023-01-25 19:45:38,860 - __main__ - INFO - 96 - <module>() - Final prediction for document 192: {'company': 'Citi', 'date': '09/21/2016', 'address': '4F', 'total': 'Create an Inverted Index Data Structure (Dictionary) from the values in the document set. Store the values from the Inverted Index Data Structure (Dictionary) in the document set (for example the name of the product that costs $5 and its quantity is equal to 4). For each entry, create another dictionary from the item name to its cost, with the key being the item name. Write down the results as a list. { "Citi" : { "<|'}
2023-01-25 19:45:38,862 - __main__ - INFO - 92 - <module>() - Predicting document 193...
2023-01-25 19:45:41,417 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  BABU
Date of Receipt: 01/02/2018
Address of Company: BABU
Total:
2023-01-25 19:45:41,418 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:45:41,418 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:45:41,419 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  BABU

2023-01-25 19:45:41,419 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: BABU
2023-01-25 19:45:41,419 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:45:41,419 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  01/02/2018

2023-01-25 19:45:41,420 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 01/02/2018
2023-01-25 19:45:41,420 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:45:41,420 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  BABU

2023-01-25 19:45:41,421 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: BABU
2023-01-25 19:45:41,421 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:45:41,421 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:
2023-01-25 19:45:41,421 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:45:41,422 - __main__ - INFO - 96 - <module>() - Final prediction for document 193: {'company': 'BABU', 'date': '01/02/2018', 'address': 'BABU'}
2023-01-25 19:45:41,423 - __main__ - INFO - 92 - <module>() - Predicting document 194...
2023-01-25 19:45:48,531 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  ABC CORPORATION
Date of Receipt: 09-07-2015
Address of Company: SELANGSING
Total: SGD 3,749,000

Output:

$company_name $date_of_receipt $address $total
$Company_Name $Date_of_Receipt $Address $Total
ABC Corporation 09-07-2015 SELANGSING SGD 3,749,000
$Company_Name $Date_of_Receipt $Address $Total
ABC Corporation 09-07-2015 SELANGSING SGD 3,
2023-01-25 19:45:48,532 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:45:48,532 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:45:48,532 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  ABC CORPORATION

2023-01-25 19:45:48,533 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: ABC CORPORATION
2023-01-25 19:45:48,533 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:45:48,533 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  09-07-2015

2023-01-25 19:45:48,534 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 09-07-2015
2023-01-25 19:45:48,534 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:45:48,534 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  SELANGSING

2023-01-25 19:45:48,534 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: SELANGSING
2023-01-25 19:45:48,535 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:45:48,535 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  SGD 3,749,000

Output:

$company_name $date_of_receipt $address $total
$Company_Name $Date_of_Receipt $Address $Total
ABC Corporation 09-07-2015 SELANGSING SGD 3,749,000
$Company_Name $Date_of_Receipt $Address $Total
ABC Corporation 09-07-2015 SELANGSING SGD 3,
2023-01-25 19:45:48,535 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: SGD 3,749,000 Output: $company_name $date_of_receipt $address $total $Company_Name $Date_of_Receipt $Address $Total ABC Corporation 09-07-2015 SELANGSING SGD 3,749,000 $Company_Name $Date_of_Receipt $Address $Total ABC Corporation 09-07-2015 SELANGSING SGD 3,
2023-01-25 19:45:48,536 - __main__ - INFO - 96 - <module>() - Final prediction for document 194: {'company': 'ABC CORPORATION', 'date': '09-07-2015', 'address': 'SELANGSING', 'total': 'SGD 3,749,000 Output: $company_name $date_of_receipt $address $total $Company_Name $Date_of_Receipt $Address $Total ABC Corporation 09-07-2015 SELANGSING SGD 3,749,000 $Company_Name $Date_of_Receipt $Address $Total ABC Corporation 09-07-2015 SELANGSING SGD 3,'}
2023-01-25 19:45:48,538 - __main__ - INFO - 92 - <module>() - Predicting document 195...
2023-01-25 19:45:55,543 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  JALAN F.A.M.
Date of Receipt: 15/08/2017
Address of Company:
Total: 32.13
|Stop key|:

Create a new file named `tax.p` and put the following contents inside.

Extract "Company Name", "Date of Receipt", "Address of Company", "Total", "<|stop key|>" from the document above. If you can't find a key-value pair in the document set the value to "null".

Key: Value
Company Name: JALAN F.A.M.

2023-01-25 19:45:55,543 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:45:55,543 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:45:55,544 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  JALAN F.A.M.

2023-01-25 19:45:55,544 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: JALAN F.A.M.
2023-01-25 19:45:55,544 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:45:55,544 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  15/08/2017

2023-01-25 19:45:55,544 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 15/08/2017
2023-01-25 19:45:55,544 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:45:55,544 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:45:55,544 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:45:55,544 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:45:55,544 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  32.13
|Stop key|:

Create a new file named `tax.p` and put the following contents inside.

Extract "Company Name", "Date of Receipt", "Address of Company", "Total", "<|stop key|>" from the document above. If you can't find a key-value pair in the document set the value to "null".

Key: Value
Company Name: JALAN F.A.M.

2023-01-25 19:45:55,544 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 32.13 |Stop key|: Create a new file named `tax.p` and put the following contents inside. Extract "Company Name", "Date of Receipt", "Address of Company", "Total", "<|stop key|>" from the document above. If you can't find a key-value pair in the document set the value to "null". Key: Value Company Name: JALAN F.A.M.
2023-01-25 19:45:55,545 - __main__ - INFO - 96 - <module>() - Final prediction for document 195: {'company': 'JALAN F.A.M.', 'date': '15/08/2017', 'total': '32.13 |Stop key|: Create a new file named `tax.p` and put the following contents inside. Extract "Company Name", "Date of Receipt", "Address of Company", "Total", "<|stop key|>" from the document above. If you can\'t find a key-value pair in the document set the value to "null". Key: Value Company Name: JALAN F.A.M.'}
2023-01-25 19:45:55,545 - __main__ - INFO - 92 - <module>() - Predicting document 196...
2023-01-25 19:46:02,226 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:
-
Date of Receipt:
2016-10-09
Address of Company:
G.F.N.T
Total:
15

The "Total" line should look like this (ignore the dashes):

Total: 15.99

Your code should output (ignore the dashes):

G.F.N.T: Total: 15.99

Input
The input is multiple lines. Each line will contain one key-value pair.
Output
On a separate line print out the values.

Input example
2
Company Name: -
Date
2023-01-25 19:46:02,227 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:46:02,227 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:46:02,228 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:
-

2023-01-25 19:46:02,228 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: -
2023-01-25 19:46:02,228 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:46:02,229 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:
2016-10-09

2023-01-25 19:46:02,229 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 2016-10-09
2023-01-25 19:46:02,229 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:46:02,230 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:
G.F.N.T

2023-01-25 19:46:02,230 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: G.F.N.T
2023-01-25 19:46:02,230 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:46:02,231 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:
15

The "Total" line should look like this (ignore the dashes):


2023-01-25 19:46:02,231 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 15 The "Total" line should look like this (ignore the dashes):
2023-01-25 19:46:02,231 - __main__ - INFO - 96 - <module>() - Final prediction for document 196: {'company': '-', 'date': '2016-10-09', 'address': 'G.F.N.T', 'total': '15 The "Total" line should look like this (ignore the dashes):'}
2023-01-25 19:46:02,233 - __main__ - INFO - 92 - <module>() - Predicting document 197...
2023-01-25 19:46:09,717 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  ASHLEY
Date of Receipt: 07/10/2017
Address of Company:
Total:

Use regex to find "Total": [A-Z]+[0-9,]{2}[.][0-9]{2,3}

Replace: 0.86

Key: Value
Company Name: ASHLEY
Date of Receipt: 07/10/2017
Address of Company:
Total: 0.86

Save the above content into a file. Name the file as <Key>.

You have created a key file and it contains the following information:

2023-01-25 19:46:09,717 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:46:09,717 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:46:09,717 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  ASHLEY

2023-01-25 19:46:09,718 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: ASHLEY
2023-01-25 19:46:09,718 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:46:09,718 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  07/10/2017

2023-01-25 19:46:09,718 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 07/10/2017
2023-01-25 19:46:09,718 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:46:09,719 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:46:09,719 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:46:09,719 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:46:09,719 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

Use regex to find "Total": [A-Z]+[0-9,]{2}[.][0-9]{2,3}

Replace: 0.86

Key: Value
Company Name: ASHLEY
Date of Receipt: 07/10/2017
Address of Company:

2023-01-25 19:46:09,719 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Use regex to find "Total": [A-Z]+[0-9,]{2}[.][0-9]{2,3} Replace: 0.86 Key: Value Company Name: ASHLEY Date of Receipt: 07/10/2017 Address of Company:
2023-01-25 19:46:09,720 - __main__ - INFO - 96 - <module>() - Final prediction for document 197: {'company': 'ASHLEY', 'date': '07/10/2017', 'total': 'Use regex to find "Total": [A-Z]+[0-9,]{2}[.][0-9]{2,3} Replace: 0.86 Key: Value Company Name: ASHLEY Date of Receipt: 07/10/2017 Address of Company:'}
2023-01-25 19:46:09,721 - __main__ - INFO - 92 - <module>() - Predicting document 198...
2023-01-25 19:46:17,889 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:
Date of Receipt:
Address of Company:
Total: <|stop key|>
null

Scoring

This is a code golf contest.
This is the standard code-golf scoring system
  1 for each input
-1 for each output line (or partial output line) with the wrong format
-1 for each trailing space
-1 for each trailing newline
-5 for non-alphanumeric characters in output
-100 if your program doesn't run in 100 seconds
-1000000 if it doesn't run in 100 seconds

Reference Implementations

2023-01-25 19:46:17,891 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:46:17,891 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:46:17,892 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:46:17,892 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:46:17,892 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:46:17,893 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:46:17,893 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:46:17,893 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:46:17,894 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:46:17,894 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:46:17,894 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:46:17,894 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  <|stop key|>
null

Scoring

This is a code golf contest.
This is the standard code-golf scoring system
  1 for each input
-1 for each output line (or partial output line) with the wrong format
-1 for each trailing space
-1 for each trailing newline
-5 for non-alphanumeric characters in output
-100 if your program doesn't run in 100 seconds
-1000000 if it doesn't run in 100 seconds

Reference Implementations

2023-01-25 19:46:17,895 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: <|stop key|> null Scoring This is a code golf contest. This is the standard code-golf scoring system  1 for each input -1 for each output line (or partial output line) with the wrong format -1 for each trailing space -1 for each trailing newline -5 for non-alphanumeric characters in output -100 if your program doesn't run in 100 seconds -1000000 if it doesn't run in 100 seconds Reference Implementations
2023-01-25 19:46:17,895 - __main__ - INFO - 96 - <module>() - Final prediction for document 198: {'total': "<|stop key|> null Scoring This is a code golf contest. This is the standard code-golf scoring system  1 for each input -1 for each output line (or partial output line) with the wrong format -1 for each trailing space -1 for each trailing newline -5 for non-alphanumeric characters in output -100 if your program doesn't run in 100 seconds -1000000 if it doesn't run in 100 seconds Reference Implementations"}
2023-01-25 19:46:17,897 - __main__ - INFO - 92 - <module>() - Predicting document 199...
2023-01-25 19:46:23,613 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  Bar Wang Rice@Permas Jaya
Date of Receipt: 1.18.17
Address of Company: Jalan Tanjung Permas Jaya,Johor Bahru,Johor
Total: 6.23

Key: Value
Company Name: Bar Wang Rice@Permas Jaya
Date of Receipt: 1.18.17
Address of Company: Jalan Tanjung Permas Jaya,Johor Bahru,Johor
Total: 6.23
2023-01-25 19:46:23,613 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:46:23,614 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:46:23,614 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Bar Wang Rice@Permas Jaya

2023-01-25 19:46:23,614 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Bar Wang Rice@Permas Jaya
2023-01-25 19:46:23,615 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:46:23,615 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  1.18.17

2023-01-25 19:46:23,615 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 1.18.17
2023-01-25 19:46:23,615 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:46:23,616 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Jalan Tanjung Permas Jaya,Johor Bahru,Johor

2023-01-25 19:46:23,616 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Jalan Tanjung Permas Jaya,Johor Bahru,Johor
2023-01-25 19:46:23,616 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:46:23,616 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  6.23

Key: Value
Company Name: Bar Wang Rice@Permas Jaya
Date of Receipt: 1.18.17
Address of Company: Jalan Tanjung Permas Jaya,Johor Bahru,Johor

2023-01-25 19:46:23,617 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 6.23 Key: Value Company Name: Bar Wang Rice@Permas Jaya Date of Receipt: 1.18.17 Address of Company: Jalan Tanjung Permas Jaya,Johor Bahru,Johor
2023-01-25 19:46:23,617 - __main__ - INFO - 96 - <module>() - Final prediction for document 199: {'company': 'Bar Wang Rice@Permas Jaya', 'date': '1.18.17', 'address': 'Jalan Tanjung Permas Jaya,Johor Bahru,Johor', 'total': '6.23 Key: Value Company Name: Bar Wang Rice@Permas Jaya Date of Receipt: 1.18.17 Address of Company: Jalan Tanjung Permas Jaya,Johor Bahru,Johor'}
2023-01-25 19:46:23,619 - __main__ - INFO - 92 - <module>() - Predicting document 200...
2023-01-25 19:46:30,479 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  SWC ENTERPRISE SDN BHD
(1125830-V)
28-G, GROUND FLOOR,
JALAN DINAR A U3/A,
TMN SUBANG PERDANA, 40150
SHAH ALAM, SELANGOR.
TAX INVOICE
(GST ID NO. : 002017808384)
06/03/2018
CASHIER: 123
20:05:56
NO: 0100122617
ITEM/DESC.
QTY
PRICE
AMT.
TM621
2023-01-25 19:46:30,479 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:46:30,480 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:46:30,481 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  SWC ENTERPRISE SDN BHD
(1125830-V)
28-G, GROUND FLOOR,
JALAN DINAR A U3/A,
TMN SUBANG PERDANA, 40150
SHAH ALAM, SELANGOR.
TAX INVOICE
(GST ID NO. : 002017808384)
06/03/2018
CASHIER: 123
20:05:56
NO: 0100122617
ITEM/DESC.
QTY
PRICE
AMT.
TM621
2023-01-25 19:46:30,481 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: SWC ENTERPRISE SDN BHD (1125830-V) 28-G, GROUND FLOOR, JALAN DINAR A U3/A, TMN SUBANG PERDANA, 40150 SHAH ALAM, SELANGOR. TAX INVOICE (GST ID NO. : 002017808384) 06/03/2018 CASHIER: 123 20:05:56 NO: 0100122617 ITEM/DESC. QTY PRICE AMT. TM621
2023-01-25 19:46:30,481 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:46:30,482 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:46:30,482 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:46:30,483 - __main__ - INFO - 96 - <module>() - Final prediction for document 200: {'company': 'SWC ENTERPRISE SDN BHD (1125830-V) 28-G, GROUND FLOOR, JALAN DINAR A U3/A, TMN SUBANG PERDANA, 40150 SHAH ALAM, SELANGOR. TAX INVOICE (GST ID NO. : 002017808384) 06/03/2018 CASHIER: 123 20:05:56 NO: 0100122617 ITEM/DESC. QTY PRICE AMT. TM621'}
2023-01-25 19:46:30,484 - __main__ - INFO - 92 - <module>() - Predicting document 201...
2023-01-25 19:46:32,576 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:
Door :

Input

Company Name

Date of Receipt

Address of Company

Total

2023-01-25 19:46:32,577 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:46:32,577 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:46:32,578 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:
Door :

Input

Company Name

Date of Receipt

Address of Company

Total

2023-01-25 19:46:32,578 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Door : Input Company Name Date of Receipt Address of Company Total
2023-01-25 19:46:32,578 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:46:32,579 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:46:32,579 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:46:32,579 - __main__ - INFO - 96 - <module>() - Final prediction for document 201: {'company': 'Door : Input Company Name Date of Receipt Address of Company Total'}
2023-01-25 19:46:32,581 - __main__ - INFO - 92 - <module>() - Predicting document 202...
2023-01-25 19:46:39,256 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  CS00668595
Date of Receipt: 2018-07-03
Address of Company: 8 JALAN SUBANG JASA 3, #01-01
Street Name: JALAN SUBANG JASA 3
Postal Code: 40150
Country: Singapore
TOTAL: 2,58

Extract "Company Name", "Date of Receipt", "Address of Company", "Total", "<|stop key|>" from the document above. If you can't find a key-value pair in the document set the value to "null".

Key: Value
Company Name
2023-01-25 19:46:39,257 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:46:39,258 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:46:39,258 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  CS00668595

2023-01-25 19:46:39,258 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: CS00668595
2023-01-25 19:46:39,259 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:46:39,259 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  2018-07-03

2023-01-25 19:46:39,260 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 2018-07-03
2023-01-25 19:46:39,260 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:46:39,260 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  8 JALAN SUBANG JASA 3, #01-01
Street Name: JALAN SUBANG JASA 3
Postal Code: 40150
Country: Singapore

2023-01-25 19:46:39,260 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 8 JALAN SUBANG JASA 3, #01-01 Street Name: JALAN SUBANG JASA 3 Postal Code: 40150 Country: Singapore
2023-01-25 19:46:39,261 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:46:39,261 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  2,58

Extract "Company Name", "Date of Receipt", "Address of Company", "Total", "<|stop key|>" from the document above. If you can't find a key-value pair in the document set the value to "null".

Key: Value
Company Name
2023-01-25 19:46:39,261 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 2,58 Extract "Company Name", "Date of Receipt", "Address of Company", "Total", "<|stop key|>" from the document above. If you can't find a key-value pair in the document set the value to "null". Key: Value Company Name
2023-01-25 19:46:39,261 - __main__ - INFO - 96 - <module>() - Final prediction for document 202: {'company': 'CS00668595', 'date': '2018-07-03', 'address': '8 JALAN SUBANG JASA 3, #01-01 Street Name: JALAN SUBANG JASA 3 Postal Code: 40150 Country: Singapore', 'total': '2,58 Extract "Company Name", "Date of Receipt", "Address of Company", "Total", "<|stop key|>" from the document above. If you can\'t find a key-value pair in the document set the value to "null". Key: Value Company Name'}
2023-01-25 19:46:39,263 - __main__ - INFO - 92 - <module>() - Predicting document 203...
2023-01-25 19:46:46,673 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  KLM
Date of Receipt: 27-02-2018
Address of Company: B1-01, B1-02, B1-03, B1-04, B1-05, B1-06, B1-07, B1-08, B1-09, B1-10, B1-11, B1-12, B1-13, B1-14, B1-15, B1-16, B1-17, B1-18, B1-19, B1-20, B1-21, B1-22,
2023-01-25 19:46:46,673 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:46:46,674 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:46:46,674 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  KLM

2023-01-25 19:46:46,674 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: KLM
2023-01-25 19:46:46,674 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:46:46,674 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  27-02-2018

2023-01-25 19:46:46,674 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 27-02-2018
2023-01-25 19:46:46,674 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:46:46,674 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  B1-01, B1-02, B1-03, B1-04, B1-05, B1-06, B1-07, B1-08, B1-09, B1-10, B1-11, B1-12, B1-13, B1-14, B1-15, B1-16, B1-17, B1-18, B1-19, B1-20, B1-21, B1-22,
2023-01-25 19:46:46,674 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: B1-01, B1-02, B1-03, B1-04, B1-05, B1-06, B1-07, B1-08, B1-09, B1-10, B1-11, B1-12, B1-13, B1-14, B1-15, B1-16, B1-17, B1-18, B1-19, B1-20, B1-21, B1-22,
2023-01-25 19:46:46,674 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:46:46,675 - __main__ - INFO - 96 - <module>() - Final prediction for document 203: {'company': 'KLM', 'date': '27-02-2018', 'address': 'B1-01, B1-02, B1-03, B1-04, B1-05, B1-06, B1-07, B1-08, B1-09, B1-10, B1-11, B1-12, B1-13, B1-14, B1-15, B1-16, B1-17, B1-18, B1-19, B1-20, B1-21, B1-22,'}
2023-01-25 19:46:46,675 - __main__ - INFO - 92 - <module>() - Predicting document 204...
2023-01-25 19:46:54,132 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  SANYU STATIONERY SHOP
Date of Receipt: 19/01/2013
Address of Company: JALAN ALIDA, No.2
Total: 0
If you use Microsoft Excel for Mac 2010 or later: (in column B)
=HYPERLINK("http://google.com/",A2)
If you use Microsoft Excel 2007 or earlier:
=HYPERLINK("http://google.com/",SUBSTITUTE(A2," ","?"))
If you use Apple Numbers for Mac 2011 or later: (in column B)
=HYPERLINK("http://google
2023-01-25 19:46:54,134 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:46:54,134 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:46:54,134 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  SANYU STATIONERY SHOP

2023-01-25 19:46:54,135 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: SANYU STATIONERY SHOP
2023-01-25 19:46:54,135 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:46:54,135 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  19/01/2013

2023-01-25 19:46:54,135 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 19/01/2013
2023-01-25 19:46:54,136 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:46:54,136 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  JALAN ALIDA, No.2

2023-01-25 19:46:54,136 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: JALAN ALIDA, No.2
2023-01-25 19:46:54,136 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:46:54,137 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  0
If you use Microsoft Excel for Mac 2010 or later: (in column B)
=HYPERLINK("http://google.com/",A2)
If you use Microsoft Excel 2007 or earlier:
=HYPERLINK("http://google.com/",SUBSTITUTE(A2," ","?"))
If you use Apple Numbers for Mac 2011 or later: (in column B)
=HYPERLINK("http://google
2023-01-25 19:46:54,137 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 0 If you use Microsoft Excel for Mac 2010 or later: (in column B) =HYPERLINK("http://google.com/",A2) If you use Microsoft Excel 2007 or earlier: =HYPERLINK("http://google.com/",SUBSTITUTE(A2," ","?")) If you use Apple Numbers for Mac 2011 or later: (in column B) =HYPERLINK("http://google
2023-01-25 19:46:54,137 - __main__ - INFO - 96 - <module>() - Final prediction for document 204: {'company': 'SANYU STATIONERY SHOP', 'date': '19/01/2013', 'address': 'JALAN ALIDA, No.2', 'total': '0 If you use Microsoft Excel for Mac 2010 or later: (in column B) =HYPERLINK("http://google.com/",A2) If you use Microsoft Excel 2007 or earlier: =HYPERLINK("http://google.com/",SUBSTITUTE(A2," ","?")) If you use Apple Numbers for Mac 2011 or later: (in column B) =HYPERLINK("http://google'}
2023-01-25 19:46:54,139 - __main__ - INFO - 92 - <module>() - Predicting document 205...
2023-01-25 19:46:58,784 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  PLATINUM RACKING SDN BHD (PLAT MART)
Date of Receipt: 2222042018 13:44:23
Address of Company: 8B, JALAN LUMPUR, OFF JALAN PUTRA, 05100
Total: 23.00
2023-01-25 19:46:58,784 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:46:58,785 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:46:58,785 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  PLATINUM RACKING SDN BHD (PLAT MART)

2023-01-25 19:46:58,785 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: PLATINUM RACKING SDN BHD (PLAT MART)
2023-01-25 19:46:58,785 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:46:58,786 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  2222042018 13:44:23

2023-01-25 19:46:58,786 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 2222042018 13:44:23
2023-01-25 19:46:58,786 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:46:58,786 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  8B, JALAN LUMPUR, OFF JALAN PUTRA, 05100

2023-01-25 19:46:58,787 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 8B, JALAN LUMPUR, OFF JALAN PUTRA, 05100
2023-01-25 19:46:58,787 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:46:58,787 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  23.00
2023-01-25 19:46:58,787 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 23.00
2023-01-25 19:46:58,787 - __main__ - INFO - 96 - <module>() - Final prediction for document 205: {'company': 'PLATINUM RACKING SDN BHD (PLAT MART)', 'date': '2222042018 13:44:23', 'address': '8B, JALAN LUMPUR, OFF JALAN PUTRA, 05100', 'total': '23.00'}
2023-01-25 19:46:58,789 - __main__ - INFO - 92 - <module>() - Predicting document 206...
2023-01-25 19:47:03,835 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:
date:
address of company:
Total:

Write the values of the key-value pair of the first five line in the document using the key as the column label and value as the column value.

Date
Address
Amount
Company Name
Amount

Write the sum of the total amount in the following formula: =SUM(Amount).
The sum of the total amount in the formula is =1.90RM.
2023-01-25 19:47:03,836 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:47:03,836 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:47:03,837 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:
date:

2023-01-25 19:47:03,837 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: date:
2023-01-25 19:47:03,837 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:47:03,837 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:47:03,838 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:47:03,838 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:47:03,838 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:47:03,838 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

Write the values of the key-value pair of the first five line in the document using the key as the column label and value as the column value.

Date
Address
Amount
Company Name
Amount

Write the sum of the total amount in the following formula: =SUM(Amount).
The sum of the total amount in the formula is =1.90RM.
2023-01-25 19:47:03,839 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Write the values of the key-value pair of the first five line in the document using the key as the column label and value as the column value. Date Address Amount Company Name Amount Write the sum of the total amount in the following formula: =SUM(Amount). The sum of the total amount in the formula is =1.90RM.
2023-01-25 19:47:03,839 - __main__ - INFO - 96 - <module>() - Final prediction for document 206: {'company': 'date:', 'total': 'Write the values of the key-value pair of the first five line in the document using the key as the column label and value as the column value. Date Address Amount Company Name Amount Write the sum of the total amount in the following formula: =SUM(Amount). The sum of the total amount in the formula is =1.90RM.'}
2023-01-25 19:47:03,841 - __main__ - INFO - 92 - <module>() - Predicting document 207...
2023-01-25 19:47:11,840 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  GARDENIA BAKERIES (KL) SDN BHD (139386 X)
Date of Receipt: 06/10/2017
Address of Company: LORONG JALAN PELABUR 23/1, 40300 SHAH ALAM, SELANGOR
Total: 33.84
Input Tax Claims, On the Basic of the Adjustments Shown in This Tax Invoice / Adjustment Note
Tax Invoice No.: 7006F714
Claimed Item / Adjustment Code:
0.00 (Refund)
Tax Code:

Extract "Company Name", "
2023-01-25 19:47:11,843 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:47:11,843 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:47:11,844 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  GARDENIA BAKERIES (KL) SDN BHD (139386 X)

2023-01-25 19:47:11,844 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: GARDENIA BAKERIES (KL) SDN BHD (139386 X)
2023-01-25 19:47:11,844 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:47:11,844 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  06/10/2017

2023-01-25 19:47:11,845 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 06/10/2017
2023-01-25 19:47:11,845 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:47:11,845 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  LORONG JALAN PELABUR 23/1, 40300 SHAH ALAM, SELANGOR

2023-01-25 19:47:11,846 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: LORONG JALAN PELABUR 23/1, 40300 SHAH ALAM, SELANGOR
2023-01-25 19:47:11,846 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:47:11,846 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  33.84
Input Tax Claims, On the Basic of the Adjustments Shown in This Tax Invoice / Adjustment Note
Tax Invoice No.: 7006F714
Claimed Item / Adjustment Code:
0.00 (Refund)
Tax Code:

Extract "Company Name", "
2023-01-25 19:47:11,846 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 33.84 Input Tax Claims, On the Basic of the Adjustments Shown in This Tax Invoice / Adjustment Note Tax Invoice No.: 7006F714 Claimed Item / Adjustment Code: 0.00 (Refund) Tax Code: Extract "Company Name", "
2023-01-25 19:47:11,847 - __main__ - INFO - 96 - <module>() - Final prediction for document 207: {'company': 'GARDENIA BAKERIES (KL) SDN BHD (139386 X)', 'date': '06/10/2017', 'address': 'LORONG JALAN PELABUR 23/1, 40300 SHAH ALAM, SELANGOR', 'total': '33.84 Input Tax Claims, On the Basic of the Adjustments Shown in This Tax Invoice / Adjustment Note Tax Invoice No.: 7006F714 Claimed Item / Adjustment Code: 0.00 (Refund) Tax Code: Extract "Company Name", "'}
2023-01-25 19:47:11,850 - __main__ - INFO - 92 - <module>() - Predicting document 208...
2023-01-25 19:47:14,918 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:
Date of Receipt:
Address of Company:
Total:

(optional)

Save data as a .csv file.

This is a sample invoice, please insert your data in the appropriate format in the form below.
2023-01-25 19:47:14,919 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:47:14,920 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:47:14,920 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:47:14,921 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:47:14,921 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:47:14,921 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:47:14,922 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:47:14,922 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:47:14,922 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:47:14,922 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:47:14,923 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:47:14,923 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

(optional)

Save data as a .csv file.

This is a sample invoice, please insert your data in the appropriate format in the form below.
2023-01-25 19:47:14,923 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: (optional) Save data as a .csv file. This is a sample invoice, please insert your data in the appropriate format in the form below.
2023-01-25 19:47:14,923 - __main__ - INFO - 96 - <module>() - Final prediction for document 208: {'total': '(optional) Save data as a .csv file. This is a sample invoice, please insert your data in the appropriate format in the form below.'}
2023-01-25 19:47:14,925 - __main__ - INFO - 92 - <module>() - Predicting document 209...
2023-01-25 19:47:17,666 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  DOLAN'S
Date of Receipt: 2018-02-18
Address of Company:
Total: RM3.05
2023-01-25 19:47:17,666 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:47:17,666 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:47:17,667 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  DOLAN'S

2023-01-25 19:47:17,667 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: DOLAN'S
2023-01-25 19:47:17,667 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:47:17,667 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  2018-02-18

2023-01-25 19:47:17,667 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 2018-02-18
2023-01-25 19:47:17,667 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:47:17,668 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:47:17,668 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:47:17,668 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:47:17,668 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  RM3.05
2023-01-25 19:47:17,668 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: RM3.05
2023-01-25 19:47:17,668 - __main__ - INFO - 96 - <module>() - Final prediction for document 209: {'company': "DOLAN'S", 'date': '2018-02-18', 'total': 'RM3.05'}
2023-01-25 19:47:17,669 - __main__ - INFO - 92 - <module>() - Predicting document 210...
2023-01-25 19:47:20,894 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  KINETIX CAMPUS
Date of Receipt: 21/3/2018
Address of Company: KINETIX CAMPUS
Total: RM 1.06
2023-01-25 19:47:20,894 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:47:20,894 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:47:20,894 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  KINETIX CAMPUS

2023-01-25 19:47:20,895 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: KINETIX CAMPUS
2023-01-25 19:47:20,895 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:47:20,895 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  21/3/2018

2023-01-25 19:47:20,895 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 21/3/2018
2023-01-25 19:47:20,895 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:47:20,895 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  KINETIX CAMPUS

2023-01-25 19:47:20,895 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: KINETIX CAMPUS
2023-01-25 19:47:20,895 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:47:20,896 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  RM 1.06
2023-01-25 19:47:20,896 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: RM 1.06
2023-01-25 19:47:20,896 - __main__ - INFO - 96 - <module>() - Final prediction for document 210: {'company': 'KINETIX CAMPUS', 'date': '21/3/2018', 'address': 'KINETIX CAMPUS', 'total': 'RM 1.06'}
2023-01-25 19:47:20,897 - __main__ - INFO - 92 - <module>() - Predicting document 211...
2023-01-25 19:47:22,907 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:
Date of Receipt: 27/04/2018
Address of Company: 1/05/2018
Total: 99

2023-01-25 19:47:22,908 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:47:22,908 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:47:22,908 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:47:22,908 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:47:22,908 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:47:22,909 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  27/04/2018

2023-01-25 19:47:22,909 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 27/04/2018
2023-01-25 19:47:22,909 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:47:22,909 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  1/05/2018

2023-01-25 19:47:22,909 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 1/05/2018
2023-01-25 19:47:22,909 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:47:22,909 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  99

2023-01-25 19:47:22,910 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 99
2023-01-25 19:47:22,910 - __main__ - INFO - 96 - <module>() - Final prediction for document 211: {'date': '27/04/2018', 'address': '1/05/2018', 'total': '99'}
2023-01-25 19:47:22,911 - __main__ - INFO - 92 - <module>() - Predicting document 212...
2023-01-25 19:47:26,528 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:
Company: GUDANG HASIL RESTAURANT SDN BHD
Date of Receipt: 12/2/2016 12:00:00 AM
Address of Company: LOKAS PARK, Kuala Lumpur, MASALA, MALAYSIA
Total: RM15.80

2023-01-25 19:47:26,530 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:47:26,530 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:47:26,531 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:
Company: GUDANG HASIL RESTAURANT SDN BHD

2023-01-25 19:47:26,531 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Company: GUDANG HASIL RESTAURANT SDN BHD
2023-01-25 19:47:26,531 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:47:26,532 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  12/2/2016 12:00:00 AM

2023-01-25 19:47:26,532 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 12/2/2016 12:00:00 AM
2023-01-25 19:47:26,533 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:47:26,533 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  LOKAS PARK, Kuala Lumpur, MASALA, MALAYSIA

2023-01-25 19:47:26,534 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: LOKAS PARK, Kuala Lumpur, MASALA, MALAYSIA
2023-01-25 19:47:26,534 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:47:26,535 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  RM15.80

2023-01-25 19:47:26,535 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: RM15.80
2023-01-25 19:47:26,535 - __main__ - INFO - 96 - <module>() - Final prediction for document 212: {'company': 'Company: GUDANG HASIL RESTAURANT SDN BHD', 'date': '12/2/2016 12:00:00 AM', 'address': 'LOKAS PARK, Kuala Lumpur, MASALA, MALAYSIA', 'total': 'RM15.80'}
2023-01-25 19:47:26,538 - __main__ - INFO - 92 - <module>() - Predicting document 213...
2023-01-25 19:47:29,301 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  Samsung Electronics
Date of Receipt: 21-03-2018
Address of Company:
Total: 19.50

Here is the result:


2023-01-25 19:47:29,304 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:47:29,308 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:47:29,310 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Samsung Electronics

2023-01-25 19:47:29,310 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Samsung Electronics
2023-01-25 19:47:29,311 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:47:29,312 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  21-03-2018

2023-01-25 19:47:29,312 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 21-03-2018
2023-01-25 19:47:29,313 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:47:29,313 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:47:29,314 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:47:29,315 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:47:29,315 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  19.50

Here is the result:


2023-01-25 19:47:29,316 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 19.50 Here is the result:
2023-01-25 19:47:29,316 - __main__ - INFO - 96 - <module>() - Final prediction for document 213: {'company': 'Samsung Electronics', 'date': '21-03-2018', 'total': '19.50 Here is the result:'}
2023-01-25 19:47:29,328 - __main__ - INFO - 92 - <module>() - Predicting document 214...
2023-01-25 19:47:36,388 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  abc
Date of Receipt: 01/10/2018
Address of Company: abc
Total: 123

You need to sort your table with the keys. You need to sort them to ascending order according to the key.

Here's the solution:
1. Create a dataframe from the spreadsheet.
2. Create a list with all key-value pair you extracted from the document set the value to "null".
3. Read in the dataframe and set the keys and values to a Java map.
4. Set the list keys to the map.
5. Sort the dataframe
2023-01-25 19:47:36,390 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:47:36,390 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:47:36,391 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  abc

2023-01-25 19:47:36,392 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: abc
2023-01-25 19:47:36,392 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:47:36,393 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  01/10/2018

2023-01-25 19:47:36,394 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 01/10/2018
2023-01-25 19:47:36,395 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:47:36,396 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  abc

2023-01-25 19:47:36,397 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: abc
2023-01-25 19:47:36,398 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:47:36,398 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  123

You need to sort your table with the keys. You need to sort them to ascending order according to the key.

Here's the solution:
1. Create a dataframe from the spreadsheet.
2. Create a list with all key-value pair you extracted from the document set the value to "null".
3. Read in the dataframe and set the keys and values to a Java map.
4. Set the list keys to the map.
5. Sort the dataframe
2023-01-25 19:47:36,399 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 123 You need to sort your table with the keys. You need to sort them to ascending order according to the key. Here's the solution: 1. Create a dataframe from the spreadsheet. 2. Create a list with all key-value pair you extracted from the document set the value to "null". 3. Read in the dataframe and set the keys and values to a Java map. 4. Set the list keys to the map. 5. Sort the dataframe
2023-01-25 19:47:36,399 - __main__ - INFO - 96 - <module>() - Final prediction for document 214: {'company': 'abc', 'date': '01/10/2018', 'address': 'abc', 'total': '123 You need to sort your table with the keys. You need to sort them to ascending order according to the key. Here\'s the solution: 1. Create a dataframe from the spreadsheet. 2. Create a list with all key-value pair you extracted from the document set the value to "null". 3. Read in the dataframe and set the keys and values to a Java map. 4. Set the list keys to the map. 5. Sort the dataframe'}
2023-01-25 19:47:36,402 - __main__ - INFO - 92 - <module>() - Predicting document 215...
2023-01-25 19:47:44,366 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  S.L.Kang
Date of Receipt: 6/4/2018 21:44:42
Address of Company: STANDARD VALE.
Total: RM 98.00

Note:

Key can not have line break. If a value has line break, you will have to split the value using "<>" or "<|", "<|" is for space bar key, "<" is for <TAB> key. You need to put the value again after each line. You can't place the value at the beginning of each line. If the value exceeds the length of the line you will have
2023-01-25 19:47:44,368 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:47:44,368 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:47:44,369 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  S.L.Kang

2023-01-25 19:47:44,370 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: S.L.Kang
2023-01-25 19:47:44,370 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:47:44,370 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  6/4/2018 21:44:42

2023-01-25 19:47:44,370 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 6/4/2018 21:44:42
2023-01-25 19:47:44,371 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:47:44,371 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  STANDARD VALE.

2023-01-25 19:47:44,371 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: STANDARD VALE.
2023-01-25 19:47:44,371 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:47:44,372 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  RM 98.00

Note:

Key can not have line break. If a value has line break, you will have to split the value using "<>" or "<|", "<|" is for space bar key, "<" is for <TAB> key. You need to put the value again after each line. You can't place the value at the beginning of each line. If the value exceeds the length of the line you will have
2023-01-25 19:47:44,372 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: RM 98.00 Note: Key can not have line break. If a value has line break, you will have to split the value using "<>" or "<|", "<|" is for space bar key, "<" is for <TAB> key. You need to put the value again after each line. You can't place the value at the beginning of each line. If the value exceeds the length of the line you will have
2023-01-25 19:47:44,372 - __main__ - INFO - 96 - <module>() - Final prediction for document 215: {'company': 'S.L.Kang', 'date': '6/4/2018 21:44:42', 'address': 'STANDARD VALE.', 'total': 'RM 98.00 Note: Key can not have line break. If a value has line break, you will have to split the value using "<>" or "<|", "<|" is for space bar key, "<" is for <TAB> key. You need to put the value again after each line. You can\'t place the value at the beginning of each line. If the value exceeds the length of the line you will have'}
2023-01-25 19:47:44,382 - __main__ - INFO - 92 - <module>() - Predicting document 216...
2023-01-25 19:47:51,624 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  T1
Date of Receipt: 12/31/2015
Address of Company: Kota Kinabalu, Sabah, Malaysia
Total: RM 1,923.32

Note that the document does not have any page numbers but just has the string "RMB-868" in the footer. To extract page number we need to parse the footer. We can use JavaScript to do this. But first we have to understand how to extract content from a page.
In order to extract content from a page, we have to identify what is the text and what is not. This is done using the
2023-01-25 19:47:51,625 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:47:51,625 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:47:51,625 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  T1

2023-01-25 19:47:51,625 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: T1
2023-01-25 19:47:51,626 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:47:51,626 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  12/31/2015

2023-01-25 19:47:51,626 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 12/31/2015
2023-01-25 19:47:51,626 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:47:51,626 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Kota Kinabalu, Sabah, Malaysia

2023-01-25 19:47:51,627 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Kota Kinabalu, Sabah, Malaysia
2023-01-25 19:47:51,627 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:47:51,627 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  RM 1,923.32

Note that the document does not have any page numbers but just has the string "RMB-868" in the footer. To extract page number we need to parse the footer. We can use JavaScript to do this. But first we have to understand how to extract content from a page.
In order to extract content from a page, we have to identify what is the text and what is not. This is done using the
2023-01-25 19:47:51,627 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: RM 1,923.32 Note that the document does not have any page numbers but just has the string "RMB-868" in the footer. To extract page number we need to parse the footer. We can use JavaScript to do this. But first we have to understand how to extract content from a page. In order to extract content from a page, we have to identify what is the text and what is not. This is done using the
2023-01-25 19:47:51,627 - __main__ - INFO - 96 - <module>() - Final prediction for document 216: {'company': 'T1', 'date': '12/31/2015', 'address': 'Kota Kinabalu, Sabah, Malaysia', 'total': 'RM 1,923.32 Note that the document does not have any page numbers but just has the string "RMB-868" in the footer. To extract page number we need to parse the footer. We can use JavaScript to do this. But first we have to understand how to extract content from a page. In order to extract content from a page, we have to identify what is the text and what is not. This is done using the'}
2023-01-25 19:47:51,629 - __main__ - INFO - 92 - <module>() - Predicting document 217...
2023-01-25 19:47:53,346 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:

Date of Receipt:

Address of Company:

Total:

2023-01-25 19:47:53,347 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:47:53,347 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:47:53,348 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:


2023-01-25 19:47:53,348 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:47:53,348 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:47:53,348 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:


2023-01-25 19:47:53,349 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:47:53,349 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:47:53,349 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:


2023-01-25 19:47:53,349 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:47:53,350 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:47:53,350 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:47:53,350 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:47:53,350 - __main__ - INFO - 96 - <module>() - Final prediction for document 217: {}
2023-01-25 19:47:53,351 - __main__ - INFO - 92 - <module>() - Predicting document 218...
2023-01-25 19:47:57,918 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  Company name
Address of Company: Company address
Date of Receipt: Date of receipt
Total: Total amount

If there are multiple entries for a specific item, they should be separated by "|" and each value can be listed in a new column as separate column entries. The total amount of items shown must equal to the total amount on your receipt.
2023-01-25 19:47:57,918 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:47:57,918 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:47:57,919 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Company name
Address of Company: Company address

2023-01-25 19:47:57,919 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Company name Address of Company: Company address
2023-01-25 19:47:57,919 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:47:57,919 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Date of receipt
Total: Total amount

If there are multiple entries for a specific item, they should be separated by "|" and each value can be listed in a new column as separate column entries. The total amount of items shown must equal to the total amount on your receipt.
2023-01-25 19:47:57,919 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Date of receipt Total: Total amount If there are multiple entries for a specific item, they should be separated by "|" and each value can be listed in a new column as separate column entries. The total amount of items shown must equal to the total amount on your receipt.
2023-01-25 19:47:57,919 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:47:57,919 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Company address
Date of Receipt: Date of receipt

2023-01-25 19:47:57,919 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Company address Date of Receipt: Date of receipt
2023-01-25 19:47:57,919 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:47:57,919 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Total amount

If there are multiple entries for a specific item, they should be separated by "|" and each value can be listed in a new column as separate column entries. The total amount of items shown must equal to the total amount on your receipt.
2023-01-25 19:47:57,920 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Total amount If there are multiple entries for a specific item, they should be separated by "|" and each value can be listed in a new column as separate column entries. The total amount of items shown must equal to the total amount on your receipt.
2023-01-25 19:47:57,920 - __main__ - INFO - 96 - <module>() - Final prediction for document 218: {'company': 'Company name Address of Company: Company address', 'date': 'Date of receipt Total: Total amount If there are multiple entries for a specific item, they should be separated by "|" and each value can be listed in a new column as separate column entries. The total amount of items shown must equal to the total amount on your receipt.', 'address': 'Company address Date of Receipt: Date of receipt', 'total': 'Total amount If there are multiple entries for a specific item, they should be separated by "|" and each value can be listed in a new column as separate column entries. The total amount of items shown must equal to the total amount on your receipt.'}
2023-01-25 19:47:57,920 - __main__ - INFO - 92 - <module>() - Predicting document 219...
2023-01-25 19:48:01,487 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  STARLING HOTEL AND RESORT SDN BHD
Date of Receipt: 27/11/2017
Address of Company: 7, JALAN SS15/01
Total: 120.00
2023-01-25 19:48:01,489 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:48:01,489 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:48:01,489 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  STARLING HOTEL AND RESORT SDN BHD

2023-01-25 19:48:01,490 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: STARLING HOTEL AND RESORT SDN BHD
2023-01-25 19:48:01,490 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:48:01,490 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  27/11/2017

2023-01-25 19:48:01,490 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 27/11/2017
2023-01-25 19:48:01,491 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:48:01,491 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  7, JALAN SS15/01

2023-01-25 19:48:01,491 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 7, JALAN SS15/01
2023-01-25 19:48:01,492 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:48:01,492 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  120.00
2023-01-25 19:48:01,492 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 120.00
2023-01-25 19:48:01,492 - __main__ - INFO - 96 - <module>() - Final prediction for document 219: {'company': 'STARLING HOTEL AND RESORT SDN BHD', 'date': '27/11/2017', 'address': '7, JALAN SS15/01', 'total': '120.00'}
2023-01-25 19:48:01,494 - __main__ - INFO - 92 - <module>() - Predicting document 220...
2023-01-25 19:48:03,473 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:
Date of Receipt:
Address of Company:
Total:
2023-01-25 19:48:03,473 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:48:03,474 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:48:03,474 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:48:03,474 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:48:03,474 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:48:03,474 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:48:03,474 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:48:03,475 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:48:03,475 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:48:03,475 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:48:03,475 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:48:03,475 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:
2023-01-25 19:48:03,475 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:48:03,475 - __main__ - INFO - 96 - <module>() - Final prediction for document 220: {}
2023-01-25 19:48:03,476 - __main__ - INFO - 92 - <module>() - Predicting document 221...
2023-01-25 19:48:10,773 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:

Date of Receipt:

Address of Company:

Total:

|stop key|: null

Write down the results of the above step:

Date, City and Country: Date: 08/06/2018, City: Kuala Lumpur, Country: Malaysia
Address of Company:
Company Name:
Total:
Company Name:
Address of Company: Kuala Lumpur, Malaysia
Date: Date: 08/06/2018
Phone number: 0161 803 0444
Total:

Key: Value
Address of Company:
Phone
2023-01-25 19:48:10,774 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:48:10,774 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:48:10,775 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:


2023-01-25 19:48:10,775 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:48:10,775 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:48:10,775 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:


2023-01-25 19:48:10,775 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:48:10,776 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:48:10,776 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:


2023-01-25 19:48:10,776 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:48:10,776 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:48:10,776 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

|stop key|: null

Write down the results of the above step:

Date, City and Country: Date: 08/06/2018, City: Kuala Lumpur, Country: Malaysia
Address of Company:
Company Name:

2023-01-25 19:48:10,776 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: |stop key|: null Write down the results of the above step: Date, City and Country: Date: 08/06/2018, City: Kuala Lumpur, Country: Malaysia Address of Company: Company Name:
2023-01-25 19:48:10,776 - __main__ - INFO - 96 - <module>() - Final prediction for document 221: {'total': '|stop key|: null Write down the results of the above step: Date, City and Country: Date: 08/06/2018, City: Kuala Lumpur, Country: Malaysia Address of Company: Company Name:'}
2023-01-25 19:48:10,780 - __main__ - INFO - 92 - <module>() - Predicting document 222...
2023-01-25 19:48:17,914 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:
Date of Receipt: 11/06/2018 18:29:49
Address of Company:
Total: RM

The total amount of discounts and taxes is RM1.23.

Extract "Company Name", "Date of Receipt", "Address of Company", "Total", "<|stop key|>" from the document above. If you can't find a key-value pair in the document set the value to "null".

Key: Value
Company Name:
Date of Receipt: 11/06/2018 18:29:49
Address of Company:
Total:
2023-01-25 19:48:17,915 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:48:17,915 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:48:17,915 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:48:17,915 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:48:17,916 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:48:17,916 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  11/06/2018 18:29:49

2023-01-25 19:48:17,916 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 11/06/2018 18:29:49
2023-01-25 19:48:17,916 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:48:17,916 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:48:17,917 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:48:17,917 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:48:17,917 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  RM

The total amount of discounts and taxes is RM1.23.

Extract "Company Name", "Date of Receipt", "Address of Company", "Total", "<|stop key|>" from the document above. If you can't find a key-value pair in the document set the value to "null".

Key: Value
Company Name:
Date of Receipt: 11/06/2018 18:29:49
Address of Company:

2023-01-25 19:48:17,917 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: RM The total amount of discounts and taxes is RM1.23. Extract "Company Name", "Date of Receipt", "Address of Company", "Total", "<|stop key|>" from the document above. If you can't find a key-value pair in the document set the value to "null". Key: Value Company Name: Date of Receipt: 11/06/2018 18:29:49 Address of Company:
2023-01-25 19:48:17,918 - __main__ - INFO - 96 - <module>() - Final prediction for document 222: {'date': '11/06/2018 18:29:49', 'total': 'RM The total amount of discounts and taxes is RM1.23. Extract "Company Name", "Date of Receipt", "Address of Company", "Total", "<|stop key|>" from the document above. If you can\'t find a key-value pair in the document set the value to "null". Key: Value Company Name: Date of Receipt: 11/06/2018 18:29:49 Address of Company:'}
2023-01-25 19:48:17,919 - __main__ - INFO - 92 - <module>() - Predicting document 223...
2023-01-25 19:48:21,402 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:
Date of Receipt:
Address of Company:
Total:
<!>
If your document has more than one row of values then add the "rows" attribute to specify the number of rows.
2023-01-25 19:48:21,403 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:48:21,403 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:48:21,404 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:48:21,404 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:48:21,404 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:48:21,404 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:48:21,405 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:48:21,405 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:48:21,405 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:48:21,405 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:48:21,405 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:48:21,405 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:
<!>
If your document has more than one row of values then add the "rows" attribute to specify the number of rows.
2023-01-25 19:48:21,406 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: <!> If your document has more than one row of values then add the "rows" attribute to specify the number of rows.
2023-01-25 19:48:21,406 - __main__ - INFO - 96 - <module>() - Final prediction for document 223: {'total': '<!> If your document has more than one row of values then add the "rows" attribute to specify the number of rows.'}
2023-01-25 19:48:21,407 - __main__ - INFO - 92 - <module>() - Predicting document 224...
2023-01-25 19:48:23,084 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:
Date of Receipt:
Address of Company:
Total:
2023-01-25 19:48:23,084 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:48:23,085 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:48:23,085 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:48:23,085 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:48:23,086 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:48:23,087 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:48:23,087 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:48:23,087 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:48:23,088 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:48:23,088 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:48:23,088 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:48:23,088 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:
2023-01-25 19:48:23,089 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:48:23,089 - __main__ - INFO - 96 - <module>() - Final prediction for document 224: {}
2023-01-25 19:48:23,090 - __main__ - INFO - 92 - <module>() - Predicting document 225...
2023-01-25 19:48:24,523 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:
Date of Receipt:
Address of Company:
Total:
2023-01-25 19:48:24,523 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:48:24,524 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:48:24,524 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:48:24,524 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:48:24,525 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:48:24,525 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:48:24,525 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:48:24,525 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:48:24,526 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:48:24,526 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:48:24,526 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:48:24,526 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:
2023-01-25 19:48:24,527 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:48:24,527 - __main__ - INFO - 96 - <module>() - Final prediction for document 225: {}
2023-01-25 19:48:24,528 - __main__ - INFO - 92 - <module>() - Predicting document 226...
2023-01-25 19:48:32,352 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  DFS
Date of Receipt: 27/12/15
Address of Company: Kuala Lumpur
Total: 6000.00
Amount to Settle: 6600.00
Company Name: DBS
Date of Receipt: 25/12/15
Address of Company: Kuala Lumpur
Total: 7200.00
Amount to Settle: 8400.00
Company Name: BDO
Date of Receipt: 26/12/15
Address of Company: Kuala Lumpur
Total: 5500.00
Amount to Settle: 7
2023-01-25 19:48:32,353 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:48:32,353 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:48:32,353 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  DFS

2023-01-25 19:48:32,353 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: DFS
2023-01-25 19:48:32,354 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:48:32,354 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  27/12/15

2023-01-25 19:48:32,354 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 27/12/15
2023-01-25 19:48:32,354 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:48:32,354 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Kuala Lumpur

2023-01-25 19:48:32,355 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Kuala Lumpur
2023-01-25 19:48:32,355 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:48:32,355 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  6000.00
Amount to Settle: 6600.00
Company Name: DBS
Date of Receipt: 25/12/15
Address of Company: Kuala Lumpur

2023-01-25 19:48:32,355 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 6000.00 Amount to Settle: 6600.00 Company Name: DBS Date of Receipt: 25/12/15 Address of Company: Kuala Lumpur
2023-01-25 19:48:32,355 - __main__ - INFO - 96 - <module>() - Final prediction for document 226: {'company': 'DFS', 'date': '27/12/15', 'address': 'Kuala Lumpur', 'total': '6000.00 Amount to Settle: 6600.00 Company Name: DBS Date of Receipt: 25/12/15 Address of Company: Kuala Lumpur'}
2023-01-25 19:48:32,356 - __main__ - INFO - 92 - <module>() - Predicting document 227...
2023-01-25 19:48:35,277 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  Company Name
Date of Receipt: <date, use MM/dd/yyyy>
Address of Company: Address of Company
Total: Total
2023-01-25 19:48:35,278 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:48:35,278 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:48:35,278 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Company Name

2023-01-25 19:48:35,278 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Company Name
2023-01-25 19:48:35,278 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:48:35,279 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  <date, use MM/dd/yyyy>

2023-01-25 19:48:35,279 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: <date, use MM/dd/yyyy>
2023-01-25 19:48:35,279 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:48:35,279 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Address of Company

2023-01-25 19:48:35,279 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Address of Company
2023-01-25 19:48:35,279 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:48:35,279 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Total
2023-01-25 19:48:35,279 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Total
2023-01-25 19:48:35,279 - __main__ - INFO - 96 - <module>() - Final prediction for document 227: {'company': 'Company Name', 'date': '<date, use MM/dd/yyyy>', 'address': 'Address of Company', 'total': 'Total'}
2023-01-25 19:48:35,281 - __main__ - INFO - 92 - <module>() - Predicting document 228...
2023-01-25 19:48:39,241 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  TAXI-MUSTANG Taxis (Selangor) Sdn Bhd
Address of Company: Jalan Tun Sambanthan,
Taman Jaya Utara,
Selangor Selangor
Date of Receipt: 18-07-2017
Total: 150.00
2023-01-25 19:48:39,242 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:48:39,242 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:48:39,242 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  TAXI-MUSTANG Taxis (Selangor) Sdn Bhd
Address of Company: Jalan Tun Sambanthan,
Taman Jaya Utara,
Selangor Selangor

2023-01-25 19:48:39,243 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: TAXI-MUSTANG Taxis (Selangor) Sdn Bhd Address of Company: Jalan Tun Sambanthan, Taman Jaya Utara, Selangor Selangor
2023-01-25 19:48:39,243 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:48:39,243 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  18-07-2017
Total: 150.00
2023-01-25 19:48:39,243 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 18-07-2017 Total: 150.00
2023-01-25 19:48:39,243 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:48:39,244 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Jalan Tun Sambanthan,
Taman Jaya Utara,
Selangor Selangor
Date of Receipt: 18-07-2017

2023-01-25 19:48:39,244 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Jalan Tun Sambanthan, Taman Jaya Utara, Selangor Selangor Date of Receipt: 18-07-2017
2023-01-25 19:48:39,244 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:48:39,244 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  150.00
2023-01-25 19:48:39,244 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 150.00
2023-01-25 19:48:39,244 - __main__ - INFO - 96 - <module>() - Final prediction for document 228: {'company': 'TAXI-MUSTANG Taxis (Selangor) Sdn Bhd Address of Company: Jalan Tun Sambanthan, Taman Jaya Utara, Selangor Selangor', 'date': '18-07-2017 Total: 150.00', 'address': 'Jalan Tun Sambanthan, Taman Jaya Utara, Selangor Selangor Date of Receipt: 18-07-2017', 'total': '150.00'}
2023-01-25 19:48:39,246 - __main__ - INFO - 92 - <module>() - Predicting document 229...
2023-01-25 19:48:40,911 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:
Date of Receipt:
Address of Company:
Total:
2023-01-25 19:48:40,911 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:48:40,911 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:48:40,911 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:48:40,911 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:48:40,911 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:48:40,911 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:48:40,912 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:48:40,912 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:48:40,912 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:48:40,912 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:48:40,912 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:48:40,912 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:
2023-01-25 19:48:40,912 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:48:40,912 - __main__ - INFO - 96 - <module>() - Final prediction for document 229: {}
2023-01-25 19:48:40,913 - __main__ - INFO - 92 - <module>() - Predicting document 230...
2023-01-25 19:48:46,833 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  McDonald’s
Date of Receipt: 26/05/2018 02:16:13
Address of Company: 3 Jalan SS 21/39
Total: 1 M SPICYDELUXE
1234
2 CHEESEBURGER
9.80
6% GST = 2.48
VISA
1.83
The solution assumes the data is all on the same line and that there is a "|" character separating key/value pairs.
2023-01-25 19:48:46,833 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:48:46,834 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:48:46,834 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  McDonald’s

2023-01-25 19:48:46,835 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: McDonald’s
2023-01-25 19:48:46,835 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:48:46,836 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  26/05/2018 02:16:13

2023-01-25 19:48:46,836 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 26/05/2018 02:16:13
2023-01-25 19:48:46,836 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:48:46,837 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  3 Jalan SS 21/39

2023-01-25 19:48:46,837 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 3 Jalan SS 21/39
2023-01-25 19:48:46,838 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:48:46,838 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  1 M SPICYDELUXE
1234
2 CHEESEBURGER
9.80
6% GST = 2.48
VISA
1.83
The solution assumes the data is all on the same line and that there is a "|" character separating key/value pairs.
2023-01-25 19:48:46,838 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 1 M SPICYDELUXE 1234 2 CHEESEBURGER 9.80 6% GST = 2.48 VISA 1.83 The solution assumes the data is all on the same line and that there is a "|" character separating key/value pairs.
2023-01-25 19:48:46,838 - __main__ - INFO - 96 - <module>() - Final prediction for document 230: {'company': 'McDonald’s', 'date': '26/05/2018 02:16:13', 'address': '3 Jalan SS 21/39', 'total': '1 M SPICYDELUXE 1234 2 CHEESEBURGER 9.80 6% GST = 2.48 VISA 1.83 The solution assumes the data is all on the same line and that there is a "|" character separating key/value pairs.'}
2023-01-25 19:48:46,840 - __main__ - INFO - 92 - <module>() - Predicting document 231...
2023-01-25 19:48:49,158 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:
Date of Receipt: 12-12-2017 09:00
Address of Company:
Total: 17.80
2023-01-25 19:48:49,159 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:48:49,159 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:48:49,160 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:48:49,160 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:48:49,160 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:48:49,161 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  12-12-2017 09:00

2023-01-25 19:48:49,161 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 12-12-2017 09:00
2023-01-25 19:48:49,161 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:48:49,162 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:48:49,162 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:48:49,162 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:48:49,163 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  17.80
2023-01-25 19:48:49,163 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 17.80
2023-01-25 19:48:49,163 - __main__ - INFO - 96 - <module>() - Final prediction for document 231: {'date': '12-12-2017 09:00', 'total': '17.80'}
2023-01-25 19:48:49,165 - __main__ - INFO - 92 - <module>() - Predicting document 232...
2023-01-25 19:48:53,242 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  The company that has made the invoice. Eg: Sunway
Date of Receipt: The date the invoice was received by the company. Eg: 31 Oct 2016
Address of Company: The address of the company
Total: The total amount payable by customer
2023-01-25 19:48:53,244 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:48:53,244 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:48:53,244 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  The company that has made the invoice. Eg: Sunway

2023-01-25 19:48:53,245 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: The company that has made the invoice. Eg: Sunway
2023-01-25 19:48:53,245 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:48:53,245 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  The date the invoice was received by the company. Eg: 31 Oct 2016

2023-01-25 19:48:53,245 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: The date the invoice was received by the company. Eg: 31 Oct 2016
2023-01-25 19:48:53,246 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:48:53,246 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  The address of the company

2023-01-25 19:48:53,246 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: The address of the company
2023-01-25 19:48:53,246 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:48:53,247 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  The total amount payable by customer
2023-01-25 19:48:53,247 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: The total amount payable by customer
2023-01-25 19:48:53,247 - __main__ - INFO - 96 - <module>() - Final prediction for document 232: {'company': 'The company that has made the invoice. Eg: Sunway', 'date': 'The date the invoice was received by the company. Eg: 31 Oct 2016', 'address': 'The address of the company', 'total': 'The total amount payable by customer'}
2023-01-25 19:48:53,249 - __main__ - INFO - 92 - <module>() - Predicting document 233...
2023-01-25 19:49:00,214 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  Ong Guat Chiang
Date of Receipt: 02/01/2019
Address of Company: 16-07, 1 Utama Square, Off Jalan Berakas, 48000 Kuala Lumpur
Total: 3,939,240.00

3,900,000.00

1,945,000.00

3,750,000.00

0.00

0.00

0.00

0.00

0.00

0.00

0.00

0.00

0
2023-01-25 19:49:00,215 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:49:00,216 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:49:00,216 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Ong Guat Chiang

2023-01-25 19:49:00,216 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Ong Guat Chiang
2023-01-25 19:49:00,217 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:49:00,217 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  02/01/2019

2023-01-25 19:49:00,217 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 02/01/2019
2023-01-25 19:49:00,217 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:49:00,218 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  16-07, 1 Utama Square, Off Jalan Berakas, 48000 Kuala Lumpur

2023-01-25 19:49:00,218 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 16-07, 1 Utama Square, Off Jalan Berakas, 48000 Kuala Lumpur
2023-01-25 19:49:00,218 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:49:00,218 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  3,939,240.00

3,900,000.00

1,945,000.00

3,750,000.00

0.00

0.00

0.00

0.00

0.00

0.00

0.00

0.00

0
2023-01-25 19:49:00,219 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 3,939,240.00 3,900,000.00 1,945,000.00 3,750,000.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0
2023-01-25 19:49:00,219 - __main__ - INFO - 96 - <module>() - Final prediction for document 233: {'company': 'Ong Guat Chiang', 'date': '02/01/2019', 'address': '16-07, 1 Utama Square, Off Jalan Berakas, 48000 Kuala Lumpur', 'total': '3,939,240.00 3,900,000.00 1,945,000.00 3,750,000.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0'}
2023-01-25 19:49:00,221 - __main__ - INFO - 92 - <module>() - Predicting document 234...
2023-01-25 19:49:02,975 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  Name of the Company
Date of Receipt: Receipt Date
Address of Company: Company's Address
Total: Total Amount (Inclusive of GST)
2023-01-25 19:49:02,976 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:49:02,976 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:49:02,977 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Name of the Company

2023-01-25 19:49:02,977 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Name of the Company
2023-01-25 19:49:02,977 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:49:02,978 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Receipt Date

2023-01-25 19:49:02,979 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Receipt Date
2023-01-25 19:49:02,979 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:49:02,979 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Company's Address

2023-01-25 19:49:02,980 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Company's Address
2023-01-25 19:49:02,980 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:49:02,980 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Total Amount (Inclusive of GST)
2023-01-25 19:49:02,980 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Total Amount (Inclusive of GST)
2023-01-25 19:49:02,981 - __main__ - INFO - 96 - <module>() - Final prediction for document 234: {'company': 'Name of the Company', 'date': 'Receipt Date', 'address': "Company's Address", 'total': 'Total Amount (Inclusive of GST)'}
2023-01-25 19:49:02,982 - __main__ - INFO - 92 - <module>() - Predicting document 235...
2023-01-25 19:49:10,242 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  SPEED MART S/B (519537-X)
Date of Receipt: 10/3/2018 10:02:57 AM
Address of Company: JALAN ANGSA
Total: RM5.35 S
If you cannot find any key-value pair or the value for a key is null, please reply to this email with your input to rectify this issue.
Thanks,
Tarun

My wife was looking to rent a car at Klang's Sunquick Rent A Car in Klang (Jalan Tanjung Tualang at Jalan Cheras)..
2023-01-25 19:49:10,243 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:49:10,243 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:49:10,243 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  SPEED MART S/B (519537-X)

2023-01-25 19:49:10,244 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: SPEED MART S/B (519537-X)
2023-01-25 19:49:10,244 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:49:10,245 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  10/3/2018 10:02:57 AM

2023-01-25 19:49:10,245 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 10/3/2018 10:02:57 AM
2023-01-25 19:49:10,245 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:49:10,246 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  JALAN ANGSA

2023-01-25 19:49:10,246 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: JALAN ANGSA
2023-01-25 19:49:10,246 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:49:10,246 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  RM5.35 S
If you cannot find any key-value pair or the value for a key is null, please reply to this email with your input to rectify this issue.
Thanks,
Tarun

My wife was looking to rent a car at Klang's Sunquick Rent A Car in Klang (Jalan Tanjung Tualang at Jalan Cheras)..
2023-01-25 19:49:10,247 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: RM5.35 S If you cannot find any key-value pair or the value for a key is null, please reply to this email with your input to rectify this issue. Thanks, Tarun My wife was looking to rent a car at Klang's Sunquick Rent A Car in Klang (Jalan Tanjung Tualang at Jalan Cheras)..
2023-01-25 19:49:10,247 - __main__ - INFO - 96 - <module>() - Final prediction for document 235: {'company': 'SPEED MART S/B (519537-X)', 'date': '10/3/2018 10:02:57 AM', 'address': 'JALAN ANGSA', 'total': "RM5.35 S If you cannot find any key-value pair or the value for a key is null, please reply to this email with your input to rectify this issue. Thanks, Tarun My wife was looking to rent a car at Klang's Sunquick Rent A Car in Klang (Jalan Tanjung Tualang at Jalan Cheras).."}
2023-01-25 19:49:10,249 - __main__ - INFO - 92 - <module>() - Predicting document 236...
2023-01-25 19:49:13,326 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  "C&J Foodmart"
Date of Receipt: 21/08/2018
Address of Company: Jl. Oosbawang Kuto, Rawang
Total: RM87.20
2023-01-25 19:49:13,327 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:49:13,328 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:49:13,328 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  "C&J Foodmart"

2023-01-25 19:49:13,329 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: C&J Foodmart
2023-01-25 19:49:13,329 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:49:13,329 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  21/08/2018

2023-01-25 19:49:13,330 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 21/08/2018
2023-01-25 19:49:13,330 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:49:13,330 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Jl. Oosbawang Kuto, Rawang

2023-01-25 19:49:13,330 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Jl. Oosbawang Kuto, Rawang
2023-01-25 19:49:13,331 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:49:13,331 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  RM87.20
2023-01-25 19:49:13,331 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: RM87.20
2023-01-25 19:49:13,331 - __main__ - INFO - 96 - <module>() - Final prediction for document 236: {'company': 'C&J Foodmart', 'date': '21/08/2018', 'address': 'Jl. Oosbawang Kuto, Rawang', 'total': 'RM87.20'}
2023-01-25 19:49:13,333 - __main__ - INFO - 92 - <module>() - Predicting document 237...
2023-01-25 19:49:15,052 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:
Date of Receipt:
Address of Company:
Total:
2023-01-25 19:49:15,053 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:49:15,053 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:49:15,053 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:49:15,053 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:49:15,053 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:49:15,054 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:49:15,054 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:49:15,054 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:49:15,054 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:49:15,054 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:49:15,055 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:49:15,055 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:
2023-01-25 19:49:15,055 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:49:15,055 - __main__ - INFO - 96 - <module>() - Final prediction for document 237: {}
2023-01-25 19:49:15,056 - __main__ - INFO - 92 - <module>() - Predicting document 238...
2023-01-25 19:49:17,387 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  COMPANYNAME
Date of Receipt: 18-APR-2018
Address of Company: ADDRESS OF COMPANY
Total: 10.00
2023-01-25 19:49:17,388 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:49:17,388 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:49:17,389 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  COMPANYNAME

2023-01-25 19:49:17,389 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: COMPANYNAME
2023-01-25 19:49:17,389 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:49:17,390 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  18-APR-2018

2023-01-25 19:49:17,390 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 18-APR-2018
2023-01-25 19:49:17,391 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:49:17,391 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  ADDRESS OF COMPANY

2023-01-25 19:49:17,391 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: ADDRESS OF COMPANY
2023-01-25 19:49:17,392 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:49:17,392 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  10.00
2023-01-25 19:49:17,392 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 10.00
2023-01-25 19:49:17,393 - __main__ - INFO - 96 - <module>() - Final prediction for document 238: {'company': 'COMPANYNAME', 'date': '18-APR-2018', 'address': 'ADDRESS OF COMPANY', 'total': '10.00'}
2023-01-25 19:49:17,395 - __main__ - INFO - 92 - <module>() - Predicting document 239...
2023-01-25 19:49:19,093 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:
Date of Receipt:
Address of Company:
Total:
2023-01-25 19:49:19,096 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:49:19,097 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:49:19,097 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:49:19,098 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:49:19,098 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:49:19,099 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:49:19,099 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:49:19,099 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:49:19,099 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:49:19,100 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:49:19,100 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:49:19,101 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:
2023-01-25 19:49:19,101 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:49:19,102 - __main__ - INFO - 96 - <module>() - Final prediction for document 239: {}
2023-01-25 19:49:19,104 - __main__ - INFO - 92 - <module>() - Predicting document 240...
2023-01-25 19:49:21,815 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  SANYU STATIONERY
Date of Receipt: 28/10/2017
Address of Company:
Total: 21.90
2023-01-25 19:49:21,816 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:49:21,817 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:49:21,818 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  SANYU STATIONERY

2023-01-25 19:49:21,818 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: SANYU STATIONERY
2023-01-25 19:49:21,819 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:49:21,819 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  28/10/2017

2023-01-25 19:49:21,820 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 28/10/2017
2023-01-25 19:49:21,821 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:49:21,821 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:49:21,821 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:49:21,822 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:49:21,823 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  21.90
2023-01-25 19:49:21,823 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 21.90
2023-01-25 19:49:21,823 - __main__ - INFO - 96 - <module>() - Final prediction for document 240: {'company': 'SANYU STATIONERY', 'date': '28/10/2017', 'total': '21.90'}
2023-01-25 19:49:21,825 - __main__ - INFO - 92 - <module>() - Predicting document 241...
2023-01-25 19:49:26,829 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  <company name>
Date of Receipt: <date of receipt>
Address of Company: <address of company>
Total: <total>
If the Total of a document is 0, the <total> should be empty.

Hint: You may want to check if the Company Name is on any document before getting the date.
Hint: You may also want to test the address of the company with an address validation algorithm like this one to ensure the address in the database is valid.


2023-01-25 19:49:26,831 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:49:26,832 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:49:26,833 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  <company name>

2023-01-25 19:49:26,833 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: <company name>
2023-01-25 19:49:26,833 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:49:26,834 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  <date of receipt>

2023-01-25 19:49:26,835 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: <date of receipt>
2023-01-25 19:49:26,837 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:49:26,838 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  <address of company>

2023-01-25 19:49:26,839 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: <address of company>
2023-01-25 19:49:26,839 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:49:26,839 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  <total>
If the Total of a document is 0, the <total> should be empty.

Hint: You may want to check if the Company Name is on any document before getting the date.
Hint: You may also want to test the address of the company with an address validation algorithm like this one to ensure the address in the database is valid.


2023-01-25 19:49:26,840 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: <total> If the Total of a document is 0, the <total> should be empty. Hint: You may want to check if the Company Name is on any document before getting the date. Hint: You may also want to test the address of the company with an address validation algorithm like this one to ensure the address in the database is valid.
2023-01-25 19:49:26,841 - __main__ - INFO - 96 - <module>() - Final prediction for document 241: {'company': '<company name>', 'date': '<date of receipt>', 'address': '<address of company>', 'total': '<total> If the Total of a document is 0, the <total> should be empty. Hint: You may want to check if the Company Name is on any document before getting the date. Hint: You may also want to test the address of the company with an address validation algorithm like this one to ensure the address in the database is valid.'}
2023-01-25 19:49:26,845 - __main__ - INFO - 92 - <module>() - Predicting document 242...
2023-01-25 19:49:29,328 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:

Date of Receipt:
Address of Company:
Total:

2023-01-25 19:49:29,329 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:49:29,329 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:49:29,330 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:


2023-01-25 19:49:29,331 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:49:29,331 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:49:29,332 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:49:29,332 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:49:29,332 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:49:29,333 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:49:29,333 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:49:29,334 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:49:29,334 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:49:29,334 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:49:29,335 - __main__ - INFO - 96 - <module>() - Final prediction for document 242: {}
2023-01-25 19:49:29,337 - __main__ - INFO - 92 - <module>() - Predicting document 243...
2023-01-25 19:49:36,400 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  <input type="text" name="company" id="company" size="40" value=""/>
Date of Receipt: <input type="date" name="date" id="date" value=""/>
Address of Company: <input type="text" name="address" id="address" value=""/>
Total: <input type="text" name="total" id="total" value=""/>

Create a form to post the extracted data to.
<form id="dataform" action="data-post.php" method="post">
  <textarea name="data" id="
2023-01-25 19:49:36,403 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:49:36,403 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:49:36,405 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  <input type="text" name="company" id="company" size="40" value=""/>

2023-01-25 19:49:36,405 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: <input type="text" name="company" id="company" size="40" value=""/>
2023-01-25 19:49:36,406 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:49:36,406 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  <input type="date" name="date" id="date" value=""/>

2023-01-25 19:49:36,406 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: <input type="date" name="date" id="date" value=""/>
2023-01-25 19:49:36,407 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:49:36,407 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  <input type="text" name="address" id="address" value=""/>

2023-01-25 19:49:36,408 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: <input type="text" name="address" id="address" value=""/>
2023-01-25 19:49:36,408 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:49:36,408 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  <input type="text" name="total" id="total" value=""/>

Create a form to post the extracted data to.
<form id="dataform" action="data-post.php" method="post">
  <textarea name="data" id="
2023-01-25 19:49:36,409 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: <input type="text" name="total" id="total" value=""/> Create a form to post the extracted data to. <form id="dataform" action="data-post.php" method="post">  <textarea name="data" id="
2023-01-25 19:49:36,409 - __main__ - INFO - 96 - <module>() - Final prediction for document 243: {'company': '<input type="text" name="company" id="company" size="40" value=""/>', 'date': '<input type="date" name="date" id="date" value=""/>', 'address': '<input type="text" name="address" id="address" value=""/>', 'total': '<input type="text" name="total" id="total" value=""/> Create a form to post the extracted data to. <form id="dataform" action="data-post.php" method="post">  <textarea name="data" id="'}
2023-01-25 19:49:36,418 - __main__ - INFO - 92 - <module>() - Predicting document 244...
2023-01-25 19:49:43,684 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  "McDonald's"
Date of Receipt: 25/07/2018
Address of Company: "6"
Total: "11"
|stop key|: null

I would greatly appreciate if someone can help.
The input is from the excel file, you can see in image here.

A:

You have already solved your issue.

Your main problem was, that you did not understand how to implement the mapping.
Mapping is performed by a Scanner. It's job is to scan the entire file and find the pattern that you configured. Scanner reads each line.
2023-01-25 19:49:43,685 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:49:43,686 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:49:43,687 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  "McDonald's"

2023-01-25 19:49:43,687 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: McDonald's
2023-01-25 19:49:43,688 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:49:43,689 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  25/07/2018

2023-01-25 19:49:43,689 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 25/07/2018
2023-01-25 19:49:43,689 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:49:43,690 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  "6"

2023-01-25 19:49:43,690 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 6
2023-01-25 19:49:43,691 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:49:43,691 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  "11"
|stop key|: null

I would greatly appreciate if someone can help.
The input is from the excel file, you can see in image here.

A:

You have already solved your issue.

Your main problem was, that you did not understand how to implement the mapping.
Mapping is performed by a Scanner. It's job is to scan the entire file and find the pattern that you configured. Scanner reads each line.
2023-01-25 19:49:43,692 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: "11" |stop key|: null I would greatly appreciate if someone can help. The input is from the excel file, you can see in image here.  A: You have already solved your issue.  Your main problem was, that you did not understand how to implement the mapping. Mapping is performed by a Scanner. It's job is to scan the entire file and find the pattern that you configured. Scanner reads each line.
2023-01-25 19:49:43,692 - __main__ - INFO - 96 - <module>() - Final prediction for document 244: {'company': "McDonald's", 'date': '25/07/2018', 'address': '6', 'total': '"11" |stop key|: null I would greatly appreciate if someone can help. The input is from the excel file, you can see in image here.  A: You have already solved your issue.  Your main problem was, that you did not understand how to implement the mapping. Mapping is performed by a Scanner. It\'s job is to scan the entire file and find the pattern that you configured. Scanner reads each line.'}
2023-01-25 19:49:43,694 - __main__ - INFO - 92 - <module>() - Predicting document 245...
2023-01-25 19:49:50,555 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:
Date of Receipt:
Address of Company:
Total:

Output:
Company Name
Date of Receipt
Address of Company
Total

A:

This could help you
package com.example.demo;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.Scanner;

public class Demo {
    public static void main(String[] args) throws IOException {
        Scanner scanner = new Scanner(new File
2023-01-25 19:49:50,557 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:49:50,557 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:49:50,558 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:49:50,558 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:49:50,559 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:49:50,559 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:49:50,559 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:49:50,559 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:49:50,559 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:49:50,560 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:49:50,560 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:49:50,560 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

Output:
Company Name
Date of Receipt
Address of Company
Total

A:

This could help you
package com.example.demo;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.Scanner;

public class Demo {
    public static void main(String[] args) throws IOException {
        Scanner scanner = new Scanner(new File
2023-01-25 19:49:50,560 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Output: Company Name Date of Receipt Address of Company Total A: This could help you package com.example.demo; import java.io.File; import java.io.FileInputStream; import java.io.FileNotFoundException; import java.io.IOException; import java.util.Scanner; public class Demo {   public static void main(String[] args) throws IOException {     Scanner scanner = new Scanner(new File
2023-01-25 19:49:50,561 - __main__ - INFO - 96 - <module>() - Final prediction for document 245: {'total': 'Output: Company Name Date of Receipt Address of Company Total A: This could help you package com.example.demo; import java.io.File; import java.io.FileInputStream; import java.io.FileNotFoundException; import java.io.IOException; import java.util.Scanner; public class Demo {   public static void main(String[] args) throws IOException {     Scanner scanner = new Scanner(new File'}
2023-01-25 19:49:50,565 - __main__ - INFO - 92 - <module>() - Predicting document 246...
2023-01-25 19:49:58,070 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:
Date of Receipt: 16-10-2017
Address of Company:
Total:
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="urn:ebay:apis:eBLBaseComponents" xmlns:ebl="urn:ebay:apis:eBLBaseComponents" xmlns:cc="urn:ebay:apis:CoreComponentTypes" version="2.0
2023-01-25 19:49:58,071 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:49:58,071 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:49:58,071 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:49:58,071 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:49:58,071 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:49:58,071 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  16-10-2017

2023-01-25 19:49:58,072 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 16-10-2017
2023-01-25 19:49:58,072 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:49:58,072 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:49:58,072 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:49:58,072 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:49:58,072 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="urn:ebay:apis:eBLBaseComponents" xmlns:ebl="urn:ebay:apis:eBLBaseComponents" xmlns:cc="urn:ebay:apis:CoreComponentTypes" version="2.0
2023-01-25 19:49:58,072 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: <?xml version="1.0" encoding="UTF-8"?> <xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="urn:ebay:apis:eBLBaseComponents" xmlns:ebl="urn:ebay:apis:eBLBaseComponents" xmlns:cc="urn:ebay:apis:CoreComponentTypes" version="2.0
2023-01-25 19:49:58,072 - __main__ - INFO - 96 - <module>() - Final prediction for document 246: {'date': '16-10-2017', 'total': '<?xml version="1.0" encoding="UTF-8"?> <xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="urn:ebay:apis:eBLBaseComponents" xmlns:ebl="urn:ebay:apis:eBLBaseComponents" xmlns:cc="urn:ebay:apis:CoreComponentTypes" version="2.0'}
2023-01-25 19:49:58,073 - __main__ - INFO - 92 - <module>() - Predicting document 247...
2023-01-25 19:50:02,975 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  Your Company Name
Date of Receipt: Date of Receipt
Address of Company: Address of Company
Total: Total

The extract must be exactly as shown above
No other characters must appear in the field.
The document must be saved as TXT file or XML file, not DOC.
Only one extract may appear per file
You may use multiple document to create a document set
2023-01-25 19:50:02,975 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:50:02,975 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:50:02,976 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Your Company Name

2023-01-25 19:50:02,976 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Your Company Name
2023-01-25 19:50:02,976 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:50:02,976 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Date of Receipt

2023-01-25 19:50:02,976 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Date of Receipt
2023-01-25 19:50:02,976 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:50:02,976 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Address of Company

2023-01-25 19:50:02,977 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Address of Company
2023-01-25 19:50:02,977 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:50:02,977 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Total

The extract must be exactly as shown above
No other characters must appear in the field.
The document must be saved as TXT file or XML file, not DOC.
Only one extract may appear per file
You may use multiple document to create a document set
2023-01-25 19:50:02,977 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Total The extract must be exactly as shown above No other characters must appear in the field. The document must be saved as TXT file or XML file, not DOC. Only one extract may appear per file You may use multiple document to create a document set
2023-01-25 19:50:02,977 - __main__ - INFO - 96 - <module>() - Final prediction for document 247: {'company': 'Your Company Name', 'date': 'Date of Receipt', 'address': 'Address of Company', 'total': 'Total The extract must be exactly as shown above No other characters must appear in the field. The document must be saved as TXT file or XML file, not DOC. Only one extract may appear per file You may use multiple document to create a document set'}
2023-01-25 19:50:02,978 - __main__ - INFO - 92 - <module>() - Predicting document 248...
2023-01-25 19:50:04,819 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:

Date of Receipt:
Address of Company:
Total:

2023-01-25 19:50:04,827 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:50:04,827 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:50:04,828 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:


2023-01-25 19:50:04,828 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:50:04,828 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:50:04,828 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:50:04,829 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:50:04,829 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:50:04,829 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:50:04,829 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:50:04,830 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:50:04,830 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:50:04,830 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:50:04,830 - __main__ - INFO - 96 - <module>() - Final prediction for document 248: {}
2023-01-25 19:50:04,833 - __main__ - INFO - 92 - <module>() - Predicting document 249...
2023-01-25 19:50:07,938 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  Gogi-Engineer
Address of Company: Bandar Baru Permas 9/5
Date of Receipt: 09/02/2018
Total: 411.50
2023-01-25 19:50:07,939 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:50:07,940 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:50:07,941 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Gogi-Engineer
Address of Company: Bandar Baru Permas 9/5

2023-01-25 19:50:07,942 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Gogi-Engineer Address of Company: Bandar Baru Permas 9/5
2023-01-25 19:50:07,942 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:50:07,943 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  09/02/2018
Total: 411.50
2023-01-25 19:50:07,944 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 09/02/2018 Total: 411.50
2023-01-25 19:50:07,944 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:50:07,945 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Bandar Baru Permas 9/5
Date of Receipt: 09/02/2018

2023-01-25 19:50:07,945 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Bandar Baru Permas 9/5 Date of Receipt: 09/02/2018
2023-01-25 19:50:07,946 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:50:07,946 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  411.50
2023-01-25 19:50:07,947 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 411.50
2023-01-25 19:50:07,947 - __main__ - INFO - 96 - <module>() - Final prediction for document 249: {'company': 'Gogi-Engineer Address of Company: Bandar Baru Permas 9/5', 'date': '09/02/2018 Total: 411.50', 'address': 'Bandar Baru Permas 9/5 Date of Receipt: 09/02/2018', 'total': '411.50'}
2023-01-25 19:50:07,951 - __main__ - INFO - 92 - <module>() - Predicting document 250...
2023-01-25 19:50:15,341 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  GUROKO JAPANESE CUISINE SDN BHD
Date of Receipt: 20/03/2018 6:41:02 PM
Address of Company: 46400 PETALING JAYA,
Selangor
Total: 53.00

[<|table_name=sales_order_line_item|<-- table that has the items and the cost|]
[<table_name=sales_order_header|<-- table that has the Sales Order Number and Line Item Number|]
[<table_name=sales_order_detail|<-- table that has
2023-01-25 19:50:15,342 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:50:15,343 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:50:15,344 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  GUROKO JAPANESE CUISINE SDN BHD

2023-01-25 19:50:15,345 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: GUROKO JAPANESE CUISINE SDN BHD
2023-01-25 19:50:15,345 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:50:15,346 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  20/03/2018 6:41:02 PM

2023-01-25 19:50:15,346 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 20/03/2018 6:41:02 PM
2023-01-25 19:50:15,347 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:50:15,347 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  46400 PETALING JAYA,
Selangor

2023-01-25 19:50:15,348 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 46400 PETALING JAYA, Selangor
2023-01-25 19:50:15,348 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:50:15,348 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  53.00

[<|table_name=sales_order_line_item|<-- table that has the items and the cost|]
[<table_name=sales_order_header|<-- table that has the Sales Order Number and Line Item Number|]
[<table_name=sales_order_detail|<-- table that has
2023-01-25 19:50:15,349 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 53.00 [<|table_name=sales_order_line_item|<-- table that has the items and the cost|] [<table_name=sales_order_header|<-- table that has the Sales Order Number and Line Item Number|] [<table_name=sales_order_detail|<-- table that has
2023-01-25 19:50:15,350 - __main__ - INFO - 96 - <module>() - Final prediction for document 250: {'company': 'GUROKO JAPANESE CUISINE SDN BHD', 'date': '20/03/2018 6:41:02 PM', 'address': '46400 PETALING JAYA, Selangor', 'total': '53.00 [<|table_name=sales_order_line_item|<-- table that has the items and the cost|] [<table_name=sales_order_header|<-- table that has the Sales Order Number and Line Item Number|] [<table_name=sales_order_detail|<-- table that has'}
2023-01-25 19:50:15,353 - __main__ - INFO - 92 - <module>() - Predicting document 251...
2023-01-25 19:50:17,442 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  *Company Name
Date of Receipt: *Date of Receipt
Address of Company: *Address of Company
Total: *Total
2023-01-25 19:50:17,443 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:50:17,444 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:50:17,445 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  *Company Name

2023-01-25 19:50:17,446 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: *Company Name
2023-01-25 19:50:17,446 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:50:17,447 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  *Date of Receipt

2023-01-25 19:50:17,448 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: *Date of Receipt
2023-01-25 19:50:17,448 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:50:17,449 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  *Address of Company

2023-01-25 19:50:17,450 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: *Address of Company
2023-01-25 19:50:17,451 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:50:17,451 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  *Total
2023-01-25 19:50:17,452 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: *Total
2023-01-25 19:50:17,452 - __main__ - INFO - 96 - <module>() - Final prediction for document 251: {'company': '*Company Name', 'date': '*Date of Receipt', 'address': '*Address of Company', 'total': '*Total'}
2023-01-25 19:50:17,455 - __main__ - INFO - 92 - <module>() - Predicting document 252...
2023-01-25 19:50:24,547 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  Company Name
Date of Receipt: Date of Receipt
Address of Company: Address of Company
Total: Total
Total

Company Name

Date of Receipt

Address of Company

Total

9.00

05-07-18

S-2, Bandar Utama, Kuala Lumpur

9.00

5.00

14.00

19.00

19.00

29.00

10.00

15.00

11.00

18.00

27.00
2023-01-25 19:50:24,549 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:50:24,553 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:50:24,553 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Company Name

2023-01-25 19:50:24,554 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Company Name
2023-01-25 19:50:24,554 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:50:24,554 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Date of Receipt

2023-01-25 19:50:24,554 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Date of Receipt
2023-01-25 19:50:24,554 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:50:24,555 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Address of Company

2023-01-25 19:50:24,555 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Address of Company
2023-01-25 19:50:24,555 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:50:24,555 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Total
Total

Company Name

Date of Receipt

Address of Company

Total

9.00

05-07-18

S-2, Bandar Utama, Kuala Lumpur

9.00

5.00

14.00

19.00

19.00

29.00

10.00

15.00

11.00

18.00

27.00
2023-01-25 19:50:24,555 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Total Total Company Name Date of Receipt Address of Company Total 9.00 05-07-18 S-2, Bandar Utama, Kuala Lumpur 9.00 5.00 14.00 19.00 19.00 29.00 10.00 15.00 11.00 18.00 27.00
2023-01-25 19:50:24,555 - __main__ - INFO - 96 - <module>() - Final prediction for document 252: {'company': 'Company Name', 'date': 'Date of Receipt', 'address': 'Address of Company', 'total': 'Total Total Company Name Date of Receipt Address of Company Total 9.00 05-07-18 S-2, Bandar Utama, Kuala Lumpur 9.00 5.00 14.00 19.00 19.00 29.00 10.00 15.00 11.00 18.00 27.00'}
2023-01-25 19:50:24,557 - __main__ - INFO - 92 - <module>() - Predicting document 253...
2023-01-25 19:50:32,079 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:
Date of Receipt:
Address of Company:
Total:

Input text in the form

<|key|>=<value>

You will be prompted for a new value until your answer satisfies the constraints.

Constraints:

Number of characters in a key must be between 3 and 100.

Number of characters in a value must be between 3 and 500.

The key and value are separated by an "=".

Output: The key with the value separated by an "=".

The first occurrence of the key in the document is not a part of the output.

2023-01-25 19:50:32,081 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:50:32,081 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:50:32,082 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:50:32,083 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:50:32,083 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:50:32,084 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:50:32,084 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:50:32,085 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:50:32,085 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:50:32,086 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:50:32,086 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:50:32,086 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

Input text in the form

<|key|>=<value>

You will be prompted for a new value until your answer satisfies the constraints.

Constraints:

Number of characters in a key must be between 3 and 100.

Number of characters in a value must be between 3 and 500.

The key and value are separated by an "=".

Output: The key with the value separated by an "=".

The first occurrence of the key in the document is not a part of the output.

2023-01-25 19:50:32,087 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Input text in the form <|key|>=<value> You will be prompted for a new value until your answer satisfies the constraints. Constraints: Number of characters in a key must be between 3 and 100. Number of characters in a value must be between 3 and 500. The key and value are separated by an "=". Output: The key with the value separated by an "=". The first occurrence of the key in the document is not a part of the output.
2023-01-25 19:50:32,088 - __main__ - INFO - 96 - <module>() - Final prediction for document 253: {'total': 'Input text in the form <|key|>=<value> You will be prompted for a new value until your answer satisfies the constraints. Constraints: Number of characters in a key must be between 3 and 100. Number of characters in a value must be between 3 and 500. The key and value are separated by an "=". Output: The key with the value separated by an "=". The first occurrence of the key in the document is not a part of the output.'}
2023-01-25 19:50:32,090 - __main__ - INFO - 92 - <module>() - Predicting document 254...
2023-01-25 19:50:39,942 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:
Date of Receipt:
Address of Company:
Total: <|stop key|>
<blank line>

Write the output to a .csv file.

3.  Open a blank notepad, enter an image file name and insert all the information you retrieved from Step 2. Copy the content that is inside the red rectangular box.

4.  Save the notepad content to a file with a ".bmp" extension.

5.  Using Microsoft Paint, paste the image in a paint box. In the paint box, select all your image and format as "b
2023-01-25 19:50:39,944 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:50:39,945 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:50:39,945 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:50:39,945 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:50:39,946 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:50:39,946 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:50:39,946 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:50:39,946 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:50:39,947 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:50:39,947 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:50:39,947 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:50:39,948 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  <|stop key|>
<blank line>

Write the output to a .csv file.

3.  Open a blank notepad, enter an image file name and insert all the information you retrieved from Step 2. Copy the content that is inside the red rectangular box.

4.  Save the notepad content to a file with a ".bmp" extension.

5.  Using Microsoft Paint, paste the image in a paint box. In the paint box, select all your image and format as "b
2023-01-25 19:50:39,948 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: <|stop key|> <blank line> Write the output to a .csv file. 3. Open a blank notepad, enter an image file name and insert all the information you retrieved from Step 2. Copy the content that is inside the red rectangular box. 4. Save the notepad content to a file with a ".bmp" extension. 5. Using Microsoft Paint, paste the image in a paint box. In the paint box, select all your image and format as "b
2023-01-25 19:50:39,948 - __main__ - INFO - 96 - <module>() - Final prediction for document 254: {'total': '<|stop key|> <blank line> Write the output to a .csv file. 3. Open a blank notepad, enter an image file name and insert all the information you retrieved from Step 2. Copy the content that is inside the red rectangular box. 4. Save the notepad content to a file with a ".bmp" extension. 5. Using Microsoft Paint, paste the image in a paint box. In the paint box, select all your image and format as "b'}
2023-01-25 19:50:39,950 - __main__ - INFO - 92 - <module>() - Predicting document 255...
2023-01-25 19:50:42,193 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  null
Date of Receipt:
Address of Company:
Total: (if key is "Total" then key: value)
2023-01-25 19:50:42,193 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:50:42,193 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:50:42,193 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  null

2023-01-25 19:50:42,193 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: null
2023-01-25 19:50:42,193 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:50:42,193 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:50:42,193 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:50:42,194 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:50:42,194 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:50:42,194 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:50:42,194 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:50:42,194 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  (if key is "Total" then key: value)
2023-01-25 19:50:42,194 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: (if key is "Total" then key: value)
2023-01-25 19:50:42,194 - __main__ - INFO - 96 - <module>() - Final prediction for document 255: {'total': '(if key is "Total" then key: value)'}
2023-01-25 19:50:42,195 - __main__ - INFO - 92 - <module>() - Predicting document 256...
2023-01-25 19:50:51,812 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:
Date of Receipt:
Address of Company:
Total: <|stop key|>

Enter the results into the database as shown below. You can also check the database result of this task in the file "Output/Result.csv" under this folder.

You should upload the extracted data in your own way, if you can't upload the uploaded file to other site, you can upload it to public server such as dropbox.

You can test this task using the Test button above, it will open a new window with this test. Please check the screenshot below.

In the next step
2023-01-25 19:50:51,813 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:50:51,813 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:50:51,813 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:50:51,814 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:50:51,814 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:50:51,814 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:50:51,814 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:50:51,814 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:50:51,814 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:50:51,814 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:50:51,814 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:50:51,814 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  <|stop key|>

Enter the results into the database as shown below. You can also check the database result of this task in the file "Output/Result.csv" under this folder.

You should upload the extracted data in your own way, if you can't upload the uploaded file to other site, you can upload it to public server such as dropbox.

You can test this task using the Test button above, it will open a new window with this test. Please check the screenshot below.

In the next step
2023-01-25 19:50:51,815 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: <|stop key|> Enter the results into the database as shown below. You can also check the database result of this task in the file "Output/Result.csv" under this folder. You should upload the extracted data in your own way, if you can't upload the uploaded file to other site, you can upload it to public server such as dropbox. You can test this task using the Test button above, it will open a new window with this test. Please check the screenshot below. In the next step
2023-01-25 19:50:51,815 - __main__ - INFO - 96 - <module>() - Final prediction for document 256: {'total': '<|stop key|> Enter the results into the database as shown below. You can also check the database result of this task in the file "Output/Result.csv" under this folder. You should upload the extracted data in your own way, if you can\'t upload the uploaded file to other site, you can upload it to public server such as dropbox. You can test this task using the Test button above, it will open a new window with this test. Please check the screenshot below. In the next step'}
2023-01-25 19:50:51,821 - __main__ - INFO - 92 - <module>() - Predicting document 257...
2023-01-25 19:50:59,304 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  KUNI BAG
Date of Receipt: 22/1/2018
Address of Company: SETAPAK
Total: 21.00
Stop key:

For the above table, I want to extract
1. company name: KUNI BAG
2. Date of receipt: 22/1/2018
3. Address of company: JALAN AIR PANAS
4. Total sales : 21.00
4. GST summary: 1.26
etc...

I'm not understanding how to get the desired result.
I tried using .getCellType and split the value
2023-01-25 19:50:59,306 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:50:59,306 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:50:59,307 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  KUNI BAG

2023-01-25 19:50:59,307 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: KUNI BAG
2023-01-25 19:50:59,308 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:50:59,309 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  22/1/2018

2023-01-25 19:50:59,310 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 22/1/2018
2023-01-25 19:50:59,310 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:50:59,311 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  SETAPAK

2023-01-25 19:50:59,312 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: SETAPAK
2023-01-25 19:50:59,313 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:50:59,314 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  21.00
Stop key:

For the above table, I want to extract
1. company name: KUNI BAG
2. Date of receipt: 22/1/2018
3. Address of company: JALAN AIR PANAS
4. Total sales : 21.00
4. GST summary: 1.26
etc...

I'm not understanding how to get the desired result.
I tried using .getCellType and split the value
2023-01-25 19:50:59,314 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 21.00 Stop key: For the above table, I want to extract 1. company name: KUNI BAG 2. Date of receipt: 22/1/2018 3. Address of company: JALAN AIR PANAS 4. Total sales : 21.00 4. GST summary: 1.26 etc... I'm not understanding how to get the desired result. I tried using .getCellType and split the value
2023-01-25 19:50:59,315 - __main__ - INFO - 96 - <module>() - Final prediction for document 257: {'company': 'KUNI BAG', 'date': '22/1/2018', 'address': 'SETAPAK', 'total': "21.00 Stop key: For the above table, I want to extract 1. company name: KUNI BAG 2. Date of receipt: 22/1/2018 3. Address of company: JALAN AIR PANAS 4. Total sales : 21.00 4. GST summary: 1.26 etc... I'm not understanding how to get the desired result. I tried using .getCellType and split the value"}
2023-01-25 19:50:59,318 - __main__ - INFO - 92 - <module>() - Predicting document 258...
2023-01-25 19:51:01,857 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  Makassar Fresh Market S/B
Date of Receipt: 22/08/2017
Address of Company: Taman Sari
Total: 400.00
2023-01-25 19:51:01,859 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:51:01,859 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:51:01,860 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Makassar Fresh Market S/B

2023-01-25 19:51:01,860 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Makassar Fresh Market S/B
2023-01-25 19:51:01,861 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:51:01,861 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  22/08/2017

2023-01-25 19:51:01,862 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 22/08/2017
2023-01-25 19:51:01,863 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:51:01,863 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Taman Sari

2023-01-25 19:51:01,864 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Taman Sari
2023-01-25 19:51:01,864 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:51:01,864 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  400.00
2023-01-25 19:51:01,865 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 400.00
2023-01-25 19:51:01,866 - __main__ - INFO - 96 - <module>() - Final prediction for document 258: {'company': 'Makassar Fresh Market S/B', 'date': '22/08/2017', 'address': 'Taman Sari', 'total': '400.00'}
2023-01-25 19:51:01,869 - __main__ - INFO - 92 - <module>() - Predicting document 259...
2023-01-25 19:51:09,853 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  121092943
Company Address: 12/109, 29 Jalan Kajang 2, Bandar Kajang, 46300 Kajang, Selangor
Date of Receipt: 29/12/2017
Total: 24.45
Total (GST Incl) : 24.45
Key: Value
Company Name: 121092943
Company Address: 12/109, 29 Jalan Kajang 2, Bandar Kajang, 46300 Kajang, Selangor
Date of Receipt: 29/12/2017
Total: 24.45
Total (G
2023-01-25 19:51:09,854 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:51:09,854 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:51:09,855 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  121092943
Company Address: 12/109, 29 Jalan Kajang 2, Bandar Kajang, 46300 Kajang, Selangor

2023-01-25 19:51:09,855 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 121092943 Company Address: 12/109, 29 Jalan Kajang 2, Bandar Kajang, 46300 Kajang, Selangor
2023-01-25 19:51:09,855 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:51:09,856 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  29/12/2017

2023-01-25 19:51:09,856 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 29/12/2017
2023-01-25 19:51:09,856 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:51:09,856 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:51:09,857 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  24.45
Total (GST Incl) : 24.45
Key: Value
Company Name: 121092943
Company Address: 12/109, 29 Jalan Kajang 2, Bandar Kajang, 46300 Kajang, Selangor
Date of Receipt: 29/12/2017

2023-01-25 19:51:09,857 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 24.45 Total (GST Incl) : 24.45 Key: Value Company Name: 121092943 Company Address: 12/109, 29 Jalan Kajang 2, Bandar Kajang, 46300 Kajang, Selangor Date of Receipt: 29/12/2017
2023-01-25 19:51:09,857 - __main__ - INFO - 96 - <module>() - Final prediction for document 259: {'company': '121092943 Company Address: 12/109, 29 Jalan Kajang 2, Bandar Kajang, 46300 Kajang, Selangor', 'date': '29/12/2017', 'total': '24.45 Total (GST Incl) : 24.45 Key: Value Company Name: 121092943 Company Address: 12/109, 29 Jalan Kajang 2, Bandar Kajang, 46300 Kajang, Selangor Date of Receipt: 29/12/2017'}
2023-01-25 19:51:09,862 - __main__ - INFO - 92 - <module>() - Predicting document 260...
2023-01-25 19:51:18,145 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:
Date of Receipt:
Address of Company:
Total:

Output:

If you are interested to do this programming in Java kindly send the Java source code as an attachment in a mail to rajak@kpmg.com. We will provide you a code sheet to print the receipt.

Input Document

Extract "Company Name", "Date of Receipt", "Address of Company", "Total", "<|stop key|>" from the document above. If you can't find a key-value pair in the document set the value to "null".

Key: Value

2023-01-25 19:51:18,147 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:51:18,147 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:51:18,148 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:51:18,148 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:51:18,149 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:51:18,149 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:51:18,149 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:51:18,150 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:51:18,150 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:51:18,150 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:51:18,150 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:51:18,151 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

Output:

If you are interested to do this programming in Java kindly send the Java source code as an attachment in a mail to rajak@kpmg.com. We will provide you a code sheet to print the receipt.

Input Document

Extract "Company Name", "Date of Receipt", "Address of Company", "Total", "<|stop key|>" from the document above. If you can't find a key-value pair in the document set the value to "null".

Key: Value

2023-01-25 19:51:18,151 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Output: If you are interested to do this programming in Java kindly send the Java source code as an attachment in a mail to rajak@kpmg.com. We will provide you a code sheet to print the receipt. Input Document Extract "Company Name", "Date of Receipt", "Address of Company", "Total", "<|stop key|>" from the document above. If you can't find a key-value pair in the document set the value to "null". Key: Value
2023-01-25 19:51:18,151 - __main__ - INFO - 96 - <module>() - Final prediction for document 260: {'total': 'Output: If you are interested to do this programming in Java kindly send the Java source code as an attachment in a mail to rajak@kpmg.com. We will provide you a code sheet to print the receipt. Input Document Extract "Company Name", "Date of Receipt", "Address of Company", "Total", "<|stop key|>" from the document above. If you can\'t find a key-value pair in the document set the value to "null". Key: Value'}
2023-01-25 19:51:18,156 - __main__ - INFO - 92 - <module>() - Predicting document 261...
2023-01-25 19:51:32,881 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  Bar Wang Rice
Date of Receipt: 2018-06-09
Address of Company: Jalan Tampoi 7/4, Kawasan Perindustrian Tampoi
Total: $8.20

This data is stored in a database table named "Rice". The only reason that I store it is so that I can easily retrieve and edit it later. Let's say I want to know how much rice I paid for:
SELECT SUM(AMOUNT) FROM RICE
This is my data in SQLite:

A:

You will need to implement a SQL function to help
2023-01-25 19:51:32,883 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:51:32,884 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:51:32,884 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Bar Wang Rice

2023-01-25 19:51:32,884 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Bar Wang Rice
2023-01-25 19:51:32,884 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:51:32,884 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  2018-06-09

2023-01-25 19:51:32,884 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 2018-06-09
2023-01-25 19:51:32,885 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:51:32,885 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Jalan Tampoi 7/4, Kawasan Perindustrian Tampoi

2023-01-25 19:51:32,885 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Jalan Tampoi 7/4, Kawasan Perindustrian Tampoi
2023-01-25 19:51:32,885 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:51:32,885 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  $8.20

This data is stored in a database table named "Rice". The only reason that I store it is so that I can easily retrieve and edit it later. Let's say I want to know how much rice I paid for:
SELECT SUM(AMOUNT) FROM RICE
This is my data in SQLite:

A:

You will need to implement a SQL function to help
2023-01-25 19:51:32,885 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: $8.20 This data is stored in a database table named "Rice". The only reason that I store it is so that I can easily retrieve and edit it later. Let's say I want to know how much rice I paid for: SELECT SUM(AMOUNT) FROM RICE This is my data in SQLite: A: You will need to implement a SQL function to help
2023-01-25 19:51:32,886 - __main__ - INFO - 96 - <module>() - Final prediction for document 261: {'company': 'Bar Wang Rice', 'date': '2018-06-09', 'address': 'Jalan Tampoi 7/4, Kawasan Perindustrian Tampoi', 'total': '$8.20 This data is stored in a database table named "Rice". The only reason that I store it is so that I can easily retrieve and edit it later. Let\'s say I want to know how much rice I paid for: SELECT SUM(AMOUNT) FROM RICE This is my data in SQLite: A: You will need to implement a SQL function to help'}
2023-01-25 19:51:32,887 - __main__ - INFO - 92 - <module>() - Predicting document 262...
2023-01-25 19:51:47,570 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  NIPPON STEEL INDUSTRIES SDN BHD
Date of Receipt: 08-MAR-18
Address of Company: BK 4248, TESCO INDUSTRIAL SUITE, JALAN KAMPUNG, MURID JAYA, 40000 KOTA KINABALU, MALAYSIA
Total: 10.75

In the above example I was only able to extract two rows out of the six. What I want is the loop to be repeated for each row in the original Excel sheet.
Hope this was clear enough.

A:
2023-01-25 19:51:47,572 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:51:47,572 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:51:47,573 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  NIPPON STEEL INDUSTRIES SDN BHD

2023-01-25 19:51:47,573 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: NIPPON STEEL INDUSTRIES SDN BHD
2023-01-25 19:51:47,573 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:51:47,574 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  08-MAR-18

2023-01-25 19:51:47,574 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 08-MAR-18
2023-01-25 19:51:47,574 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:51:47,574 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  BK 4248, TESCO INDUSTRIAL SUITE, JALAN KAMPUNG, MURID JAYA, 40000 KOTA KINABALU, MALAYSIA

2023-01-25 19:51:47,574 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: BK 4248, TESCO INDUSTRIAL SUITE, JALAN KAMPUNG, MURID JAYA, 40000 KOTA KINABALU, MALAYSIA
2023-01-25 19:51:47,574 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:51:47,575 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  10.75

In the above example I was only able to extract two rows out of the six. What I want is the loop to be repeated for each row in the original Excel sheet.
Hope this was clear enough.

A:
2023-01-25 19:51:47,575 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 10.75 In the above example I was only able to extract two rows out of the six. What I want is the loop to be repeated for each row in the original Excel sheet. Hope this was clear enough.  A:
2023-01-25 19:51:47,575 - __main__ - INFO - 96 - <module>() - Final prediction for document 262: {'company': 'NIPPON STEEL INDUSTRIES SDN BHD', 'date': '08-MAR-18', 'address': 'BK 4248, TESCO INDUSTRIAL SUITE, JALAN KAMPUNG, MURID JAYA, 40000 KOTA KINABALU, MALAYSIA', 'total': '10.75 In the above example I was only able to extract two rows out of the six. What I want is the loop to be repeated for each row in the original Excel sheet. Hope this was clear enough.  A:'}
2023-01-25 19:51:47,580 - __main__ - INFO - 92 - <module>() - Predicting document 263...
2023-01-25 19:51:50,930 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  The name of the company.
Date of Receipt: Receipt Date.
Address of Company: Street Address and City, State, and Postal Code.
Total: Total amount paid by customer.
2023-01-25 19:51:50,931 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:51:50,931 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:51:50,931 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  The name of the company.

2023-01-25 19:51:50,931 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: The name of the company.
2023-01-25 19:51:50,931 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:51:50,931 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Receipt Date.

2023-01-25 19:51:50,932 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Receipt Date.
2023-01-25 19:51:50,932 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:51:50,932 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Street Address and City, State, and Postal Code.

2023-01-25 19:51:50,932 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Street Address and City, State, and Postal Code.
2023-01-25 19:51:50,932 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:51:50,932 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Total amount paid by customer.
2023-01-25 19:51:50,932 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Total amount paid by customer.
2023-01-25 19:51:50,933 - __main__ - INFO - 96 - <module>() - Final prediction for document 263: {'company': 'The name of the company.', 'date': 'Receipt Date.', 'address': 'Street Address and City, State, and Postal Code.', 'total': 'Total amount paid by customer.'}
2023-01-25 19:51:50,934 - __main__ - INFO - 92 - <module>() - Predicting document 264...
2023-01-25 19:51:57,682 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  GON WR PLS 100+20 GON WR PLS 100+20 LTD
Date of Receipt:
Address of Company: 6TH AVENUE
2200
, ANANDAKAPUR,
SINGAPORE
Total: 9.95
2023-01-25 19:51:57,685 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:51:57,692 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:51:57,694 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  GON WR PLS 100+20 GON WR PLS 100+20 LTD

2023-01-25 19:51:57,694 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: GON WR PLS 100+20 GON WR PLS 100+20 LTD
2023-01-25 19:51:57,695 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:51:57,695 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:51:57,698 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:51:57,699 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:51:57,702 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  6TH AVENUE
2200
, ANANDAKAPUR,
SINGAPORE

2023-01-25 19:51:57,703 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 6TH AVENUE 2200 , ANANDAKAPUR, SINGAPORE
2023-01-25 19:51:57,703 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:51:57,704 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  9.95
2023-01-25 19:51:57,704 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 9.95
2023-01-25 19:51:57,705 - __main__ - INFO - 96 - <module>() - Final prediction for document 264: {'company': 'GON WR PLS 100+20 GON WR PLS 100+20 LTD', 'address': '6TH AVENUE 2200 , ANANDAKAPUR, SINGAPORE', 'total': '9.95'}
2023-01-25 19:51:57,717 - __main__ - INFO - 92 - <module>() - Predicting document 265...
2023-01-25 19:52:05,509 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  SANYU STATIONERY
Date of Receipt: 2017-12-16 16:26:53
Address of Company: JALAN SETIA INDAH X, U13/X, 40170 SETIA ALAM, SABAH
Total: 8.70
2023-01-25 19:52:05,511 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:52:05,511 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:52:05,512 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  SANYU STATIONERY

2023-01-25 19:52:05,512 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: SANYU STATIONERY
2023-01-25 19:52:05,512 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:52:05,512 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  2017-12-16 16:26:53

2023-01-25 19:52:05,512 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 2017-12-16 16:26:53
2023-01-25 19:52:05,513 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:52:05,513 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  JALAN SETIA INDAH X, U13/X, 40170 SETIA ALAM, SABAH

2023-01-25 19:52:05,513 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: JALAN SETIA INDAH X, U13/X, 40170 SETIA ALAM, SABAH
2023-01-25 19:52:05,513 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:52:05,514 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  8.70
2023-01-25 19:52:05,514 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 8.70
2023-01-25 19:52:05,515 - __main__ - INFO - 96 - <module>() - Final prediction for document 265: {'company': 'SANYU STATIONERY', 'date': '2017-12-16 16:26:53', 'address': 'JALAN SETIA INDAH X, U13/X, 40170 SETIA ALAM, SABAH', 'total': '8.70'}
2023-01-25 19:52:05,522 - __main__ - INFO - 92 - <module>() - Predicting document 266...
2023-01-25 19:52:17,404 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:
Date of Receipt:
Address of Company:
Total:
[ <|stop key|> ]:

I want to extract all the address from the received document set and put them in my sql database (which will be later on, put in to the html or xml format)

I'm a complete novice and I've been following some tutorials online but I can't find anything that gives a better explanation than what I am already doing.
I have been stuck on this for a while now and I've tried multiple suggestions from my peers but I just can't seem to get it right.

2023-01-25 19:52:17,406 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:52:17,407 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:52:17,407 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:52:17,408 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:52:17,408 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:52:17,409 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:52:17,409 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:52:17,409 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:52:17,410 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:52:17,410 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:52:17,411 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:52:17,411 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:
[ <|stop key|> ]:

I want to extract all the address from the received document set and put them in my sql database (which will be later on, put in to the html or xml format)

I'm a complete novice and I've been following some tutorials online but I can't find anything that gives a better explanation than what I am already doing.
I have been stuck on this for a while now and I've tried multiple suggestions from my peers but I just can't seem to get it right.

2023-01-25 19:52:17,412 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: [ <|stop key|> ]: I want to extract all the address from the received document set and put them in my sql database (which will be later on, put in to the html or xml format) I'm a complete novice and I've been following some tutorials online but I can't find anything that gives a better explanation than what I am already doing. I have been stuck on this for a while now and I've tried multiple suggestions from my peers but I just can't seem to get it right.
2023-01-25 19:52:17,413 - __main__ - INFO - 96 - <module>() - Final prediction for document 266: {'total': "[ <|stop key|> ]: I want to extract all the address from the received document set and put them in my sql database (which will be later on, put in to the html or xml format) I'm a complete novice and I've been following some tutorials online but I can't find anything that gives a better explanation than what I am already doing. I have been stuck on this for a while now and I've tried multiple suggestions from my peers but I just can't seem to get it right."}
2023-01-25 19:52:17,416 - __main__ - INFO - 92 - <module>() - Predicting document 267...
2023-01-25 19:52:21,668 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  Company Name
Date of Receipt: Date of Receipt
Address of Company: Address of Company
Total: Total
2023-01-25 19:52:21,670 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:52:21,670 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:52:21,671 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Company Name

2023-01-25 19:52:21,672 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Company Name
2023-01-25 19:52:21,672 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:52:21,673 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Date of Receipt

2023-01-25 19:52:21,673 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Date of Receipt
2023-01-25 19:52:21,674 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:52:21,674 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Address of Company

2023-01-25 19:52:21,675 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Address of Company
2023-01-25 19:52:21,675 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:52:21,676 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Total
2023-01-25 19:52:21,677 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Total
2023-01-25 19:52:21,677 - __main__ - INFO - 96 - <module>() - Final prediction for document 267: {'company': 'Company Name', 'date': 'Date of Receipt', 'address': 'Address of Company', 'total': 'Total'}
2023-01-25 19:52:21,681 - __main__ - INFO - 92 - <module>() - Predicting document 268...
2023-01-25 19:52:28,939 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  MJMOOKATA HOUSE
Date of Receipt: 11-06-2018
Address of Company: 118 MJ MOOKATA HOUSE
No.7G, JALAN PERMAS 11,
BANDAR BARU PERMAS JAYA,
81750 MASAI, JOHOR.
+6017-4130144

Output the extracted data into another Excel file called "Data.xlsx" in the same directory. Do not alter the document before extracting, for example, in Excel.

Use Excel formula to extract and format the data

The data to
2023-01-25 19:52:28,941 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:52:28,942 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:52:28,942 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  MJMOOKATA HOUSE

2023-01-25 19:52:28,942 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: MJMOOKATA HOUSE
2023-01-25 19:52:28,943 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:52:28,943 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  11-06-2018

2023-01-25 19:52:28,943 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 11-06-2018
2023-01-25 19:52:28,943 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:52:28,944 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  118 MJ MOOKATA HOUSE
No.7G, JALAN PERMAS 11,
BANDAR BARU PERMAS JAYA,
81750 MASAI, JOHOR.
+6017-4130144

Output the extracted data into another Excel file called "Data.xlsx" in the same directory. Do not alter the document before extracting, for example, in Excel.

Use Excel formula to extract and format the data

The data to
2023-01-25 19:52:28,944 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 118 MJ MOOKATA HOUSE No.7G, JALAN PERMAS 11, BANDAR BARU PERMAS JAYA, 81750 MASAI, JOHOR. +6017-4130144 Output the extracted data into another Excel file called "Data.xlsx" in the same directory. Do not alter the document before extracting, for example, in Excel. Use Excel formula to extract and format the data The data to
2023-01-25 19:52:28,944 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:52:28,945 - __main__ - INFO - 96 - <module>() - Final prediction for document 268: {'company': 'MJMOOKATA HOUSE', 'date': '11-06-2018', 'address': '118 MJ MOOKATA HOUSE No.7G, JALAN PERMAS 11, BANDAR BARU PERMAS JAYA, 81750 MASAI, JOHOR. +6017-4130144 Output the extracted data into another Excel file called "Data.xlsx" in the same directory. Do not alter the document before extracting, for example, in Excel. Use Excel formula to extract and format the data The data to'}
2023-01-25 19:52:28,947 - __main__ - INFO - 92 - <module>() - Predicting document 269...
2023-01-25 19:52:35,444 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  "JULIA & SON SENG AH KWANG SDN BHD"
Date of Receipt: "20/04/2017"
Address of Company: "JL KUANTAN, 631, JAYA JAYA"
Total: "RM2,789.70"
Payment Details: Type: "INV"
Rate: "RM1.00"
Paid: "25/02/2017 (THU) 11:09"
Paid Time: "12:03"
Parking Time: "9:00"
Thank You: "
2023-01-25 19:52:35,445 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:52:35,445 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:52:35,445 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  "JULIA & SON SENG AH KWANG SDN BHD"

2023-01-25 19:52:35,446 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: JULIA & SON SENG AH KWANG SDN BHD
2023-01-25 19:52:35,446 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:52:35,446 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  "20/04/2017"

2023-01-25 19:52:35,447 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 20/04/2017
2023-01-25 19:52:35,447 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:52:35,447 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  "JL KUANTAN, 631, JAYA JAYA"

2023-01-25 19:52:35,447 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: JL KUANTAN, 631, JAYA JAYA
2023-01-25 19:52:35,448 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:52:35,448 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  "RM2,789.70"
Payment Details: Type: "INV"
Rate: "RM1.00"
Paid: "25/02/2017 (THU) 11:09"
Paid Time: "12:03"
Parking Time: "9:00"
Thank You: "
2023-01-25 19:52:35,448 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: RM2,789.70" Payment Details: Type: "INV" Rate: "RM1.00" Paid: "25/02/2017 (THU) 11:09" Paid Time: "12:03" Parking Time: "9:00" Thank You:
2023-01-25 19:52:35,448 - __main__ - INFO - 96 - <module>() - Final prediction for document 269: {'company': 'JULIA & SON SENG AH KWANG SDN BHD', 'date': '20/04/2017', 'address': 'JL KUANTAN, 631, JAYA JAYA', 'total': 'RM2,789.70" Payment Details: Type: "INV" Rate: "RM1.00" Paid: "25/02/2017 (THU) 11:09" Paid Time: "12:03" Parking Time: "9:00" Thank You:'}
2023-01-25 19:52:35,450 - __main__ - INFO - 92 - <module>() - Predicting document 270...
2023-01-25 19:52:37,323 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:
Date of Receipt:
Address of Company:
Total:
2023-01-25 19:52:37,324 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:52:37,324 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:52:37,325 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:52:37,325 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:52:37,326 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:52:37,326 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:52:37,327 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:52:37,327 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:52:37,327 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:52:37,327 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:52:37,328 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:52:37,328 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:
2023-01-25 19:52:37,328 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:52:37,329 - __main__ - INFO - 96 - <module>() - Final prediction for document 270: {}
2023-01-25 19:52:37,330 - __main__ - INFO - 92 - <module>() - Predicting document 271...
2023-01-25 19:52:45,050 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  <CompanyName>
Date of Receipt: <Date>
Address of Company: <Address>
Total: <TotalAmount>
|||set up the following macro commands for the key-value pairs in the above spreadsheet|---|---
|Name= _blank|Description= _blank|Formula= _blank|Formula Value= _blank|Data Type= _blank|
|Name= CompanyName |Description= Company name |Formula= "=LEFT(A1,FIND("=",A1)-1)" |Formula Value= "=LEFT(A1,FIND("="
2023-01-25 19:52:45,051 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:52:45,051 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:52:45,052 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  <CompanyName>

2023-01-25 19:52:45,052 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: <CompanyName>
2023-01-25 19:52:45,052 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:52:45,052 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  <Date>

2023-01-25 19:52:45,053 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: <Date>
2023-01-25 19:52:45,053 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:52:45,053 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  <Address>

2023-01-25 19:52:45,053 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: <Address>
2023-01-25 19:52:45,053 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:52:45,054 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  <TotalAmount>
|||set up the following macro commands for the key-value pairs in the above spreadsheet|---|---
|Name= _blank|Description= _blank|Formula= _blank|Formula Value= _blank|Data Type= _blank|
|Name= CompanyName |Description= Company name |Formula= "=LEFT(A1,FIND("=",A1)-1)" |Formula Value= "=LEFT(A1,FIND("="
2023-01-25 19:52:45,054 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: <TotalAmount> |||set up the following macro commands for the key-value pairs in the above spreadsheet|---|--- |Name= _blank|Description= _blank|Formula= _blank|Formula Value= _blank|Data Type= _blank| |Name= CompanyName |Description= Company name |Formula= "=LEFT(A1,FIND("=",A1)-1)" |Formula Value= "=LEFT(A1,FIND("="
2023-01-25 19:52:45,054 - __main__ - INFO - 96 - <module>() - Final prediction for document 271: {'company': '<CompanyName>', 'date': '<Date>', 'address': '<Address>', 'total': '<TotalAmount> |||set up the following macro commands for the key-value pairs in the above spreadsheet|---|--- |Name= _blank|Description= _blank|Formula= _blank|Formula Value= _blank|Data Type= _blank| |Name= CompanyName |Description= Company name |Formula= "=LEFT(A1,FIND("=",A1)-1)" |Formula Value= "=LEFT(A1,FIND("="'}
2023-01-25 19:52:45,055 - __main__ - INFO - 92 - <module>() - Predicting document 272...
2023-01-25 19:52:47,158 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  Microsoft
Date of Receipt: 01/02/2018
Address of Company: Office #: 12,
Total: 88.80
2023-01-25 19:52:47,159 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:52:47,159 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:52:47,160 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Microsoft

2023-01-25 19:52:47,160 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Microsoft
2023-01-25 19:52:47,160 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:52:47,160 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  01/02/2018

2023-01-25 19:52:47,161 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 01/02/2018
2023-01-25 19:52:47,161 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:52:47,161 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Office #: 12,

2023-01-25 19:52:47,161 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Office #: 12,
2023-01-25 19:52:47,162 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:52:47,162 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  88.80
2023-01-25 19:52:47,162 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 88.80
2023-01-25 19:52:47,162 - __main__ - INFO - 96 - <module>() - Final prediction for document 272: {'company': 'Microsoft', 'date': '01/02/2018', 'address': 'Office #: 12,', 'total': '88.80'}
2023-01-25 19:52:47,164 - __main__ - INFO - 92 - <module>() - Predicting document 273...
2023-01-25 19:52:54,394 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  (NULL)
Date of Receipt: (NULL)
Address of Company: (NULL)
Total: (NULL)

Submit

Submission complete. Thank you.

Please wait while we process your request.

Your request has been received.

You will be notified via email when your request has been processed.

Note:
1. Your request will be processed within 2 working days.
2. Requests are usually processed between Monday and Friday. However, if you require a certain
service urgently, please contact us via phone number shown at the top of this form.


2023-01-25 19:52:54,395 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:52:54,395 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:52:54,396 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  (NULL)

2023-01-25 19:52:54,396 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: (NULL)
2023-01-25 19:52:54,396 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:52:54,397 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  (NULL)

2023-01-25 19:52:54,397 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: (NULL)
2023-01-25 19:52:54,397 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:52:54,398 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  (NULL)

2023-01-25 19:52:54,398 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: (NULL)
2023-01-25 19:52:54,398 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:52:54,399 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  (NULL)

Submit

Submission complete. Thank you.

Please wait while we process your request.

Your request has been received.

You will be notified via email when your request has been processed.

Note:
1. Your request will be processed within 2 working days.
2. Requests are usually processed between Monday and Friday. However, if you require a certain
service urgently, please contact us via phone number shown at the top of this form.


2023-01-25 19:52:54,399 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: (NULL) Submit Submission complete. Thank you. Please wait while we process your request. Your request has been received. You will be notified via email when your request has been processed. Note: 1. Your request will be processed within 2 working days. 2. Requests are usually processed between Monday and Friday. However, if you require a certain service urgently, please contact us via phone number shown at the top of this form.
2023-01-25 19:52:54,399 - __main__ - INFO - 96 - <module>() - Final prediction for document 273: {'company': '(NULL)', 'date': '(NULL)', 'address': '(NULL)', 'total': '(NULL) Submit Submission complete. Thank you. Please wait while we process your request. Your request has been received. You will be notified via email when your request has been processed. Note: 1. Your request will be processed within 2 working days. 2. Requests are usually processed between Monday and Friday. However, if you require a certain service urgently, please contact us via phone number shown at the top of this form.'}
2023-01-25 19:52:54,401 - __main__ - INFO - 92 - <module>() - Predicting document 274...
2023-01-25 19:53:01,454 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  The company name of the company the receipt is issued for.
Date of Receipt: The date of the receipt.
Address of Company: The address of the company the receipt is issued for.
Total: The value of the receipt.

You can use regex to find the position of "<|stop key|>" and "<|stop key|>" in your document.
Use the following code to convert the document into a list of key-value pairs.

<textarea cols=40 rows=20>
Extract "Company Name", "Date of Receipt", "Address of Company", "Total",
2023-01-25 19:53:01,457 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:53:01,457 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:53:01,458 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  The company name of the company the receipt is issued for.

2023-01-25 19:53:01,459 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: The company name of the company the receipt is issued for.
2023-01-25 19:53:01,459 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:53:01,460 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  The date of the receipt.

2023-01-25 19:53:01,460 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: The date of the receipt.
2023-01-25 19:53:01,461 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:53:01,461 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  The address of the company the receipt is issued for.

2023-01-25 19:53:01,462 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: The address of the company the receipt is issued for.
2023-01-25 19:53:01,462 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:53:01,463 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  The value of the receipt.

You can use regex to find the position of "<|stop key|>" and "<|stop key|>" in your document.
Use the following code to convert the document into a list of key-value pairs.

<textarea cols=40 rows=20>
Extract "Company Name", "Date of Receipt", "Address of Company", "Total",
2023-01-25 19:53:01,463 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: The value of the receipt. You can use regex to find the position of "<|stop key|>" and "<|stop key|>" in your document. Use the following code to convert the document into a list of key-value pairs. <textarea cols=40 rows=20> Extract "Company Name", "Date of Receipt", "Address of Company", "Total",
2023-01-25 19:53:01,463 - __main__ - INFO - 96 - <module>() - Final prediction for document 274: {'company': 'The company name of the company the receipt is issued for.', 'date': 'The date of the receipt.', 'address': 'The address of the company the receipt is issued for.', 'total': 'The value of the receipt. You can use regex to find the position of "<|stop key|>" and "<|stop key|>" in your document. Use the following code to convert the document into a list of key-value pairs. <textarea cols=40 rows=20> Extract "Company Name", "Date of Receipt", "Address of Company", "Total",'}
2023-01-25 19:53:01,468 - __main__ - INFO - 92 - <module>() - Predicting document 275...
2023-01-25 19:53:08,122 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  TAIYUAN ELECTRIC
DO: Date of Receipt: 07/06/2016
To: Address of Company:
TOTAL AMOUNT: 400.00
The value of "total" should be 400

1. The "Total" section in the document is used to calculate the GST amount that will be due for tax purposes. The value should always be 6%. To adjust the total you can use the following formula:
(total - (100 * GST * (1 - GST)) ) / 100 = Adjusted total

2. If the total amount on the receipt is between 1000
2023-01-25 19:53:08,123 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:53:08,124 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:53:08,125 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  TAIYUAN ELECTRIC
DO:
2023-01-25 19:53:08,125 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: TAIYUAN ELECTRIC DO:
2023-01-25 19:53:08,126 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:53:08,127 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  07/06/2016
To:
2023-01-25 19:53:08,127 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 07/06/2016 To:
2023-01-25 19:53:08,128 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:53:08,128 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:
TOTAL AMOUNT: 400.00
The value of "total" should be 400

1. The "Total" section in the document is used to calculate the GST amount that will be due for tax purposes. The value should always be 6%. To adjust the total you can use the following formula:
(total - (100 * GST * (1 - GST)) ) / 100 = Adjusted total

2. If the total amount on the receipt is between 1000
2023-01-25 19:53:08,128 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: TOTAL AMOUNT: 400.00 The value of "total" should be 400 1. The "Total" section in the document is used to calculate the GST amount that will be due for tax purposes. The value should always be 6%. To adjust the total you can use the following formula: (total - (100 * GST * (1 - GST)) ) / 100 = Adjusted total 2. If the total amount on the receipt is between 1000
2023-01-25 19:53:08,128 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:53:08,129 - __main__ - INFO - 96 - <module>() - Final prediction for document 275: {'company': 'TAIYUAN ELECTRIC DO:', 'date': '07/06/2016 To:', 'address': 'TOTAL AMOUNT: 400.00 The value of "total" should be 400 1. The "Total" section in the document is used to calculate the GST amount that will be due for tax purposes. The value should always be 6%. To adjust the total you can use the following formula: (total - (100 * GST * (1 - GST)) ) / 100 = Adjusted total 2. If the total amount on the receipt is between 1000'}
2023-01-25 19:53:08,130 - __main__ - INFO - 92 - <module>() - Predicting document 276...
2023-01-25 19:53:15,125 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  BHD Trading
Date of Receipt: 29 APR 2016
Address of Company: Taman Segambut 52000 Kuala Lumpur
Total: 2.90 S
: 2.90 S
: 2.90 S
: 2.90 S
: 2.90 S
: 2.90 S
: 2.90 S
: 2.90 S
: 2.90 S
: 2.90 S
: 2.90 S
: 2.90 S
: 2.90 S
: 2.90 S
: 2.90 S
: 2.90 S

2023-01-25 19:53:15,126 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:53:15,127 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:53:15,127 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  BHD Trading

2023-01-25 19:53:15,127 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: BHD Trading
2023-01-25 19:53:15,127 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:53:15,127 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  29 APR 2016

2023-01-25 19:53:15,127 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 29 APR 2016
2023-01-25 19:53:15,128 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:53:15,128 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Taman Segambut 52000 Kuala Lumpur

2023-01-25 19:53:15,128 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Taman Segambut 52000 Kuala Lumpur
2023-01-25 19:53:15,128 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:53:15,128 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  2.90 S
: 2.90 S
: 2.90 S
: 2.90 S
: 2.90 S
: 2.90 S
: 2.90 S
: 2.90 S
: 2.90 S
: 2.90 S
: 2.90 S
: 2.90 S
: 2.90 S
: 2.90 S
: 2.90 S
: 2.90 S

2023-01-25 19:53:15,128 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 2.90 S : 2.90 S : 2.90 S : 2.90 S : 2.90 S : 2.90 S : 2.90 S : 2.90 S : 2.90 S : 2.90 S : 2.90 S : 2.90 S : 2.90 S : 2.90 S : 2.90 S : 2.90 S
2023-01-25 19:53:15,129 - __main__ - INFO - 96 - <module>() - Final prediction for document 276: {'company': 'BHD Trading', 'date': '29 APR 2016', 'address': 'Taman Segambut 52000 Kuala Lumpur', 'total': '2.90 S : 2.90 S : 2.90 S : 2.90 S : 2.90 S : 2.90 S : 2.90 S : 2.90 S : 2.90 S : 2.90 S : 2.90 S : 2.90 S : 2.90 S : 2.90 S : 2.90 S : 2.90 S'}
2023-01-25 19:53:15,130 - __main__ - INFO - 92 - <module>() - Predicting document 277...
2023-01-25 19:53:22,165 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  MURRAY'S BAKERY &CAFE
Date of Receipt: 2018-07-24
Address of Company: 1. LOW THOMAS RD
2. SCHOOL CLOSE ROAD
3. PEMBERTON PLACE
4. KOTA KINABALU
5. SABAH, MALAYSIA
Total: 5
If you're using the command to print a single page, insert "<|<pagebreak key|>" into the document set the value to "true". Otherwise, insert "<|<return key|>" to print multiple pages.


2023-01-25 19:53:22,166 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:53:22,166 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:53:22,167 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  MURRAY'S BAKERY &CAFE

2023-01-25 19:53:22,167 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: MURRAY'S BAKERY &CAFE
2023-01-25 19:53:22,168 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:53:22,168 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  2018-07-24

2023-01-25 19:53:22,168 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 2018-07-24
2023-01-25 19:53:22,169 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:53:22,169 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  1. LOW THOMAS RD
2. SCHOOL CLOSE ROAD
3. PEMBERTON PLACE
4. KOTA KINABALU
5. SABAH, MALAYSIA

2023-01-25 19:53:22,169 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 1. LOW THOMAS RD 2. SCHOOL CLOSE ROAD 3. PEMBERTON PLACE 4. KOTA KINABALU 5. SABAH, MALAYSIA
2023-01-25 19:53:22,169 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:53:22,170 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  5
If you're using the command to print a single page, insert "<|<pagebreak key|>" into the document set the value to "true". Otherwise, insert "<|<return key|>" to print multiple pages.


2023-01-25 19:53:22,170 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 5 If you're using the command to print a single page, insert "<|<pagebreak key|>" into the document set the value to "true". Otherwise, insert "<|<return key|>" to print multiple pages.
2023-01-25 19:53:22,170 - __main__ - INFO - 96 - <module>() - Final prediction for document 277: {'company': "MURRAY'S BAKERY &CAFE", 'date': '2018-07-24', 'address': '1. LOW THOMAS RD 2. SCHOOL CLOSE ROAD 3. PEMBERTON PLACE 4. KOTA KINABALU 5. SABAH, MALAYSIA', 'total': '5 If you\'re using the command to print a single page, insert "<|<pagebreak key|>" into the document set the value to "true". Otherwise, insert "<|<return key|>" to print multiple pages.'}
2023-01-25 19:53:22,172 - __main__ - INFO - 92 - <module>() - Predicting document 278...
2023-01-25 19:53:29,261 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  NATIONAL CEREAL MALAYSIA SDN BHD
Date of Receipt: 25/06/2017
Address of Company: 25A, Jalan Setia Selat
Total:

Key: Value
Company Name: NESTUM MALAYSIA SDN BHD
Date of Receipt: 25/06/2017
Address of Company: 3-7, Jalan Puchong Utara
Total:

Key: Value
Company Name: NOVATECH MALAYSIA SDN BHD
Date of Receipt: 25/06/2017
Address of Company:
2023-01-25 19:53:29,264 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:53:29,264 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:53:29,266 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  NATIONAL CEREAL MALAYSIA SDN BHD

2023-01-25 19:53:29,266 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: NATIONAL CEREAL MALAYSIA SDN BHD
2023-01-25 19:53:29,266 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:53:29,267 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  25/06/2017

2023-01-25 19:53:29,267 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 25/06/2017
2023-01-25 19:53:29,268 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:53:29,268 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  25A, Jalan Setia Selat

2023-01-25 19:53:29,268 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 25A, Jalan Setia Selat
2023-01-25 19:53:29,269 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:53:29,269 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

Key: Value
Company Name: NESTUM MALAYSIA SDN BHD
Date of Receipt: 25/06/2017
Address of Company: 3-7, Jalan Puchong Utara

2023-01-25 19:53:29,270 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Key: Value Company Name: NESTUM MALAYSIA SDN BHD Date of Receipt: 25/06/2017 Address of Company: 3-7, Jalan Puchong Utara
2023-01-25 19:53:29,270 - __main__ - INFO - 96 - <module>() - Final prediction for document 278: {'company': 'NATIONAL CEREAL MALAYSIA SDN BHD', 'date': '25/06/2017', 'address': '25A, Jalan Setia Selat', 'total': 'Key: Value Company Name: NESTUM MALAYSIA SDN BHD Date of Receipt: 25/06/2017 Address of Company: 3-7, Jalan Puchong Utara'}
2023-01-25 19:53:29,276 - __main__ - INFO - 92 - <module>() - Predicting document 279...
2023-01-25 19:53:36,499 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  ABC Company
Date of Receipt: 19/05/2018
Address of Company: Kuala Lumpur, Malaysia
Total: 71.10

Output:
Company Name: ABC Company
Date of Receipt: 19/05/2018
Address of Company: Kuala Lumpur, Malaysia
Total: 71.10

Solution 2:

Using REGEXP_SUBSTR:

CREATE TABLE TEMP_RECORDS
(
  ID INT IDENTITY(1,1),
  DATA NVARCHAR(100)
)
INSERT INTO TEMP_REC
2023-01-25 19:53:36,500 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:53:36,500 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:53:36,500 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  ABC Company

2023-01-25 19:53:36,500 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: ABC Company
2023-01-25 19:53:36,500 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:53:36,500 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  19/05/2018

2023-01-25 19:53:36,501 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 19/05/2018
2023-01-25 19:53:36,501 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:53:36,501 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Kuala Lumpur, Malaysia

2023-01-25 19:53:36,501 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Kuala Lumpur, Malaysia
2023-01-25 19:53:36,501 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:53:36,501 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  71.10

Output:
Company Name: ABC Company
Date of Receipt: 19/05/2018
Address of Company: Kuala Lumpur, Malaysia

2023-01-25 19:53:36,501 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 71.10 Output: Company Name: ABC Company Date of Receipt: 19/05/2018 Address of Company: Kuala Lumpur, Malaysia
2023-01-25 19:53:36,501 - __main__ - INFO - 96 - <module>() - Final prediction for document 279: {'company': 'ABC Company', 'date': '19/05/2018', 'address': 'Kuala Lumpur, Malaysia', 'total': '71.10 Output: Company Name: ABC Company Date of Receipt: 19/05/2018 Address of Company: Kuala Lumpur, Malaysia'}
2023-01-25 19:53:36,502 - __main__ - INFO - 92 - <module>() - Predicting document 280...
2023-01-25 19:53:43,426 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  MURAFIK INDUSTRIES PTY LTD
Receipt Date: 20180501
Address of Company: Jalan Perbandingan, 47100 Kuala Lumpur
Total: 64447.45

You are able to get the output by selecting the "Value" from the drop-down menu. If the "Total" is less than or equal to "500" then the system returns the line.

The "Total" line consists of two parts: the numeric part and the fractional part.
In this example, the fractional part is "15.38". The decimal
2023-01-25 19:53:43,427 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:53:43,428 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:53:43,428 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  MURAFIK INDUSTRIES PTY LTD
Receipt Date: 20180501

2023-01-25 19:53:43,429 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: MURAFIK INDUSTRIES PTY LTD Receipt Date: 20180501
2023-01-25 19:53:43,429 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:53:43,429 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:53:43,430 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Jalan Perbandingan, 47100 Kuala Lumpur

2023-01-25 19:53:43,430 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Jalan Perbandingan, 47100 Kuala Lumpur
2023-01-25 19:53:43,430 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:53:43,431 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  64447.45

You are able to get the output by selecting the "Value" from the drop-down menu. If the "Total" is less than or equal to "500" then the system returns the line.

The "Total" line consists of two parts: the numeric part and the fractional part.
In this example, the fractional part is "15.38". The decimal
2023-01-25 19:53:43,431 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 64447.45 You are able to get the output by selecting the "Value" from the drop-down menu. If the "Total" is less than or equal to "500" then the system returns the line. The "Total" line consists of two parts: the numeric part and the fractional part. In this example, the fractional part is "15.38". The decimal
2023-01-25 19:53:43,431 - __main__ - INFO - 96 - <module>() - Final prediction for document 280: {'company': 'MURAFIK INDUSTRIES PTY LTD Receipt Date: 20180501', 'address': 'Jalan Perbandingan, 47100 Kuala Lumpur', 'total': '64447.45 You are able to get the output by selecting the "Value" from the drop-down menu. If the "Total" is less than or equal to "500" then the system returns the line. The "Total" line consists of two parts: the numeric part and the fractional part. In this example, the fractional part is "15.38". The decimal'}
2023-01-25 19:53:43,433 - __main__ - INFO - 92 - <module>() - Predicting document 281...
2023-01-25 19:53:45,915 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  1
Date of Receipt: 1-17-2017
Address of Company: S1-27-27 Jalan SS4/5
Total: 2.30
2023-01-25 19:53:45,915 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:53:45,915 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:53:45,915 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  1

2023-01-25 19:53:45,916 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 1
2023-01-25 19:53:45,916 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:53:45,916 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  1-17-2017

2023-01-25 19:53:45,916 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 1-17-2017
2023-01-25 19:53:45,916 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:53:45,916 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  S1-27-27 Jalan SS4/5

2023-01-25 19:53:45,916 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: S1-27-27 Jalan SS4/5
2023-01-25 19:53:45,917 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:53:45,917 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  2.30
2023-01-25 19:53:45,917 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 2.30
2023-01-25 19:53:45,917 - __main__ - INFO - 96 - <module>() - Final prediction for document 281: {'company': '1', 'date': '1-17-2017', 'address': 'S1-27-27 Jalan SS4/5', 'total': '2.30'}
2023-01-25 19:53:45,918 - __main__ - INFO - 92 - <module>() - Predicting document 282...
2023-01-25 19:53:53,077 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  Pasaraya Borong Pintar Sdn Bhd
Date of Receipt: 28-03-2018
Address of Company: Jalan Tasik Damai No 19
4, Medan Niaga Damai
Sabah
TASIK DAMAI KOTA KALIMANTAN
TOTAL
Sabah SDN BHD
1.70
1.70
ZERO RATE LEVY: The Goods and Services Tax (GST) is zero rated on the following goods and services :
- Goods and Services supplied by a Government Body that are:
(a)
2023-01-25 19:53:53,079 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:53:53,080 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:53:53,081 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Pasaraya Borong Pintar Sdn Bhd

2023-01-25 19:53:53,082 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Pasaraya Borong Pintar Sdn Bhd
2023-01-25 19:53:53,082 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:53:53,083 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  28-03-2018

2023-01-25 19:53:53,083 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 28-03-2018
2023-01-25 19:53:53,084 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:53:53,084 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Jalan Tasik Damai No 19
4, Medan Niaga Damai
Sabah
TASIK DAMAI KOTA KALIMANTAN
TOTAL
Sabah SDN BHD
1.70
1.70
ZERO RATE LEVY: The Goods and Services Tax (GST) is zero rated on the following goods and services :
- Goods and Services supplied by a Government Body that are:
(a)
2023-01-25 19:53:53,085 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Jalan Tasik Damai No 19 4, Medan Niaga Damai Sabah TASIK DAMAI KOTA KALIMANTAN TOTAL Sabah SDN BHD 1.70 1.70 ZERO RATE LEVY: The Goods and Services Tax (GST) is zero rated on the following goods and services : - Goods and Services supplied by a Government Body that are: (a)
2023-01-25 19:53:53,085 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:53:53,086 - __main__ - INFO - 96 - <module>() - Final prediction for document 282: {'company': 'Pasaraya Borong Pintar Sdn Bhd', 'date': '28-03-2018', 'address': 'Jalan Tasik Damai No 19 4, Medan Niaga Damai Sabah TASIK DAMAI KOTA KALIMANTAN TOTAL Sabah SDN BHD 1.70 1.70 ZERO RATE LEVY: The Goods and Services Tax (GST) is zero rated on the following goods and services : - Goods and Services supplied by a Government Body that are: (a)'}
2023-01-25 19:53:53,090 - __main__ - INFO - 92 - <module>() - Predicting document 283...
2023-01-25 19:53:59,931 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  Company Name
Date of Receipt: Date of Receipt
Address of Company: Address of Company
Total: Total

The result would be:

Company Name
Date of Receipt
Address of Company
Total
Total:
267.50
16.05

Output

You can print a PDF to the printer by using the PrinterJob.Print method. The method must be invoked using the thread created in step 1. The form used to create the print job can be retrieved by using the GetActiveForm method.

The following is a sample of the code used to print a page in
2023-01-25 19:53:59,933 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:53:59,934 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:53:59,934 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Company Name

2023-01-25 19:53:59,935 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Company Name
2023-01-25 19:53:59,935 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:53:59,936 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Date of Receipt

2023-01-25 19:53:59,936 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Date of Receipt
2023-01-25 19:53:59,937 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:53:59,937 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Address of Company

2023-01-25 19:53:59,938 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Address of Company
2023-01-25 19:53:59,938 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:53:59,939 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Total

The result would be:

Company Name
Date of Receipt
Address of Company
Total

2023-01-25 19:53:59,939 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Total The result would be: Company Name Date of Receipt Address of Company Total
2023-01-25 19:53:59,940 - __main__ - INFO - 96 - <module>() - Final prediction for document 283: {'company': 'Company Name', 'date': 'Date of Receipt', 'address': 'Address of Company', 'total': 'Total The result would be: Company Name Date of Receipt Address of Company Total'}
2023-01-25 19:53:59,944 - __main__ - INFO - 92 - <module>() - Predicting document 284...
2023-01-25 19:54:07,505 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  YAM FRESH
Date of Receipt: 2016-07-31 14:10:05
Address of Company: Jalan Kayu, Bandar Sri Damansara, 53000 Kuala Lumpur, Malaysia
Total: RM7.50

If you can't find a key-value pair in the document, set the value to "null".

The first two lines should be extracted.
The format of the document is "Key: Value".

Here's a brief explanation of my answer:
This question is an Extract question. Extract questions consist of a single sentence or a sentence
2023-01-25 19:54:07,506 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:54:07,507 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:54:07,507 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  YAM FRESH

2023-01-25 19:54:07,508 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: YAM FRESH
2023-01-25 19:54:07,508 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:54:07,508 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  2016-07-31 14:10:05

2023-01-25 19:54:07,508 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 2016-07-31 14:10:05
2023-01-25 19:54:07,509 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:54:07,509 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Jalan Kayu, Bandar Sri Damansara, 53000 Kuala Lumpur, Malaysia

2023-01-25 19:54:07,510 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Jalan Kayu, Bandar Sri Damansara, 53000 Kuala Lumpur, Malaysia
2023-01-25 19:54:07,510 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:54:07,510 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  RM7.50

If you can't find a key-value pair in the document, set the value to "null".

The first two lines should be extracted.
The format of the document is "Key: Value".

Here's a brief explanation of my answer:
This question is an Extract question. Extract questions consist of a single sentence or a sentence
2023-01-25 19:54:07,511 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: RM7.50 If you can't find a key-value pair in the document, set the value to "null". The first two lines should be extracted. The format of the document is "Key: Value". Here's a brief explanation of my answer: This question is an Extract question. Extract questions consist of a single sentence or a sentence
2023-01-25 19:54:07,511 - __main__ - INFO - 96 - <module>() - Final prediction for document 284: {'company': 'YAM FRESH', 'date': '2016-07-31 14:10:05', 'address': 'Jalan Kayu, Bandar Sri Damansara, 53000 Kuala Lumpur, Malaysia', 'total': 'RM7.50 If you can\'t find a key-value pair in the document, set the value to "null". The first two lines should be extracted. The format of the document is "Key: Value". Here\'s a brief explanation of my answer: This question is an Extract question. Extract questions consist of a single sentence or a sentence'}
2023-01-25 19:54:07,513 - __main__ - INFO - 92 - <module>() - Predicting document 285...
2023-01-25 19:54:09,701 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  abc
Date of Receipt: 04 MAR 2018
Address of Company: 123 ABC Street
Total: 9.35
2023-01-25 19:54:09,701 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:54:09,701 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:54:09,701 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  abc

2023-01-25 19:54:09,702 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: abc
2023-01-25 19:54:09,702 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:54:09,702 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  04 MAR 2018

2023-01-25 19:54:09,702 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 04 MAR 2018
2023-01-25 19:54:09,702 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:54:09,702 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  123 ABC Street

2023-01-25 19:54:09,703 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 123 ABC Street
2023-01-25 19:54:09,703 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:54:09,703 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  9.35
2023-01-25 19:54:09,703 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 9.35
2023-01-25 19:54:09,703 - __main__ - INFO - 96 - <module>() - Final prediction for document 285: {'company': 'abc', 'date': '04 MAR 2018', 'address': '123 ABC Street', 'total': '9.35'}
2023-01-25 19:54:09,704 - __main__ - INFO - 92 - <module>() - Predicting document 286...
2023-01-25 19:54:16,942 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  SINGAPORE
Date of Receipt: 28/06/2018
Address of Company: Tampines
Total: 18.00
18.00

Note: Each value must be placed in its own cell.

A:

you need to extract the values from the data that are below
<|start key|><|stop key|>

For the input given above you will have to set key in the cells given in between <|start key|><|stop key|> like
Cell1 = "<|start key|>"
Cell2 = "<|stop key|
2023-01-25 19:54:16,943 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:54:16,944 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:54:16,944 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  SINGAPORE

2023-01-25 19:54:16,944 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: SINGAPORE
2023-01-25 19:54:16,944 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:54:16,945 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  28/06/2018

2023-01-25 19:54:16,945 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 28/06/2018
2023-01-25 19:54:16,945 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:54:16,945 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Tampines

2023-01-25 19:54:16,945 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Tampines
2023-01-25 19:54:16,946 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:54:16,946 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  18.00
18.00

Note: Each value must be placed in its own cell.

A:

you need to extract the values from the data that are below
<|start key|><|stop key|>

For the input given above you will have to set key in the cells given in between <|start key|><|stop key|> like
Cell1 = "<|start key|>"
Cell2 = "<|stop key|
2023-01-25 19:54:16,946 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 18.00 18.00 Note: Each value must be placed in its own cell. A: you need to extract the values from the data that are below <|start key|><|stop key|>  For the input given above you will have to set key in the cells given in between <|start key|><|stop key|> like Cell1 = "<|start key|>" Cell2 = "<|stop key|
2023-01-25 19:54:16,946 - __main__ - INFO - 96 - <module>() - Final prediction for document 286: {'company': 'SINGAPORE', 'date': '28/06/2018', 'address': 'Tampines', 'total': '18.00 18.00 Note: Each value must be placed in its own cell. A: you need to extract the values from the data that are below <|start key|><|stop key|>  For the input given above you will have to set key in the cells given in between <|start key|><|stop key|> like Cell1 = "<|start key|>" Cell2 = "<|stop key|'}
2023-01-25 19:54:16,948 - __main__ - INFO - 92 - <module>() - Predicting document 287...
2023-01-25 19:54:23,890 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  Jalan Gurdjieff 2, Jalan Nibong, 57000 Kuala Lumpur, Malaysia
Date of Receipt: 21/09/2017
Address of Company: Jalan Gurdjieff 2, Jalan Nibong, 57000 Kuala Lumpur, Malaysia
Total: 79.26
GST: 5.92

1. Copy the tax invoice template to your spreadsheet.
2. Fill in the data. The data on the template are organized as follows:
1. Company Name, (2 blank spaces) (Company)
2. Date
2023-01-25 19:54:23,891 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:54:23,891 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:54:23,891 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Jalan Gurdjieff 2, Jalan Nibong, 57000 Kuala Lumpur, Malaysia

2023-01-25 19:54:23,891 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Jalan Gurdjieff 2, Jalan Nibong, 57000 Kuala Lumpur, Malaysia
2023-01-25 19:54:23,891 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:54:23,892 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  21/09/2017

2023-01-25 19:54:23,892 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 21/09/2017
2023-01-25 19:54:23,892 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:54:23,892 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Jalan Gurdjieff 2, Jalan Nibong, 57000 Kuala Lumpur, Malaysia

2023-01-25 19:54:23,892 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Jalan Gurdjieff 2, Jalan Nibong, 57000 Kuala Lumpur, Malaysia
2023-01-25 19:54:23,892 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:54:23,892 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  79.26
GST: 5.92

1. Copy the tax invoice template to your spreadsheet.
2. Fill in the data. The data on the template are organized as follows:
1. Company Name, (2 blank spaces) (Company)
2. Date
2023-01-25 19:54:23,893 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 79.26 GST: 5.92 1. Copy the tax invoice template to your spreadsheet. 2. Fill in the data. The data on the template are organized as follows: 1. Company Name, (2 blank spaces) (Company) 2. Date
2023-01-25 19:54:23,893 - __main__ - INFO - 96 - <module>() - Final prediction for document 287: {'company': 'Jalan Gurdjieff 2, Jalan Nibong, 57000 Kuala Lumpur, Malaysia', 'date': '21/09/2017', 'address': 'Jalan Gurdjieff 2, Jalan Nibong, 57000 Kuala Lumpur, Malaysia', 'total': '79.26 GST: 5.92 1. Copy the tax invoice template to your spreadsheet. 2. Fill in the data. The data on the template are organized as follows: 1. Company Name, (2 blank spaces) (Company) 2. Date'}
2023-01-25 19:54:23,893 - __main__ - INFO - 92 - <module>() - Predicting document 288...
2023-01-25 19:54:31,000 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  BAR WANG CHU KWANG
Date of Receipt: 18.03.2018
Address of Company: JALAN TAMPOI 7/4, KAWASAN PERINDUSTRIAN, TAMPOI
Total: $38.40
|<|stop key|>

Output:

Company Name: BAR WANG CHU KWANG
Date of Receipt: 18.03.2018
Address of Company: JALAN TAMPOI 7/4, KAWASAN PERINDUSTRIAN, TAMPOI
Total: $38.40
2023-01-25 19:54:31,001 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:54:31,001 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:54:31,001 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  BAR WANG CHU KWANG

2023-01-25 19:54:31,002 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: BAR WANG CHU KWANG
2023-01-25 19:54:31,002 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:54:31,002 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  18.03.2018

2023-01-25 19:54:31,002 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 18.03.2018
2023-01-25 19:54:31,003 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:54:31,003 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  JALAN TAMPOI 7/4, KAWASAN PERINDUSTRIAN, TAMPOI

2023-01-25 19:54:31,003 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: JALAN TAMPOI 7/4, KAWASAN PERINDUSTRIAN, TAMPOI
2023-01-25 19:54:31,003 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:54:31,003 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  $38.40
|<|stop key|>

Output:

Company Name: BAR WANG CHU KWANG
Date of Receipt: 18.03.2018
Address of Company: JALAN TAMPOI 7/4, KAWASAN PERINDUSTRIAN, TAMPOI

2023-01-25 19:54:31,004 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: $38.40 |<|stop key|> Output: Company Name: BAR WANG CHU KWANG Date of Receipt: 18.03.2018 Address of Company: JALAN TAMPOI 7/4, KAWASAN PERINDUSTRIAN, TAMPOI
2023-01-25 19:54:31,004 - __main__ - INFO - 96 - <module>() - Final prediction for document 288: {'company': 'BAR WANG CHU KWANG', 'date': '18.03.2018', 'address': 'JALAN TAMPOI 7/4, KAWASAN PERINDUSTRIAN, TAMPOI', 'total': '$38.40 |<|stop key|> Output: Company Name: BAR WANG CHU KWANG Date of Receipt: 18.03.2018 Address of Company: JALAN TAMPOI 7/4, KAWASAN PERINDUSTRIAN, TAMPOI'}
2023-01-25 19:54:31,006 - __main__ - INFO - 92 - <module>() - Predicting document 289...
2023-01-25 19:54:37,625 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  <|stop key|>
Date of Receipt: <|stop key|>
Address of Company: <|stop key|>
Total: <|stop key|>

Save the extracted values in Excel.

In Excel. Paste "Key", "Value" and "TOTAL" to Excel sheet for easy understanding.

Save the file as CSV.

Paste "Company Name", "Date of Receipt", "Address of Company", "Total" from spreadsheet and "TOTAL" from the document to excel.

If there are blanks in the TOTAL column,
2023-01-25 19:54:37,627 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:54:37,627 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:54:37,627 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  <|stop key|>

2023-01-25 19:54:37,627 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: <|stop key|>
2023-01-25 19:54:37,627 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:54:37,628 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  <|stop key|>

2023-01-25 19:54:37,628 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: <|stop key|>
2023-01-25 19:54:37,628 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:54:37,628 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  <|stop key|>

2023-01-25 19:54:37,628 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: <|stop key|>
2023-01-25 19:54:37,628 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:54:37,629 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  <|stop key|>

Save the extracted values in Excel.

In Excel. Paste "Key", "Value" and "TOTAL" to Excel sheet for easy understanding.

Save the file as CSV.

Paste "Company Name", "Date of Receipt", "Address of Company", "Total" from spreadsheet and "TOTAL" from the document to excel.

If there are blanks in the TOTAL column,
2023-01-25 19:54:37,629 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: <|stop key|> Save the extracted values in Excel. In Excel. Paste "Key", "Value" and "TOTAL" to Excel sheet for easy understanding. Save the file as CSV. Paste "Company Name", "Date of Receipt", "Address of Company", "Total" from spreadsheet and "TOTAL" from the document to excel. If there are blanks in the TOTAL column,
2023-01-25 19:54:37,629 - __main__ - INFO - 96 - <module>() - Final prediction for document 289: {'company': '<|stop key|>', 'date': '<|stop key|>', 'address': '<|stop key|>', 'total': '<|stop key|> Save the extracted values in Excel. In Excel. Paste "Key", "Value" and "TOTAL" to Excel sheet for easy understanding. Save the file as CSV. Paste "Company Name", "Date of Receipt", "Address of Company", "Total" from spreadsheet and "TOTAL" from the document to excel. If there are blanks in the TOTAL column,'}
2023-01-25 19:54:37,630 - __main__ - INFO - 92 - <module>() - Predicting document 290...
2023-01-25 19:54:45,249 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  BINDA PERMAS JAYA
Date of Receipt: 19-12-2018
Address of Company: JALAN TAMPOI 7/4,KAWASAN PERINDUSTRIAN TAMPOI,81200 JOHOR BAHRU,JOHOR
Total: 6.60

If you would like to search the document in different formats (plain text, csv, docx), just leave all of them blank and press submit.
You may also send the document with your problem by mail to support@sds.com.
2023-01-25 19:54:45,251 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:54:45,251 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:54:45,252 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  BINDA PERMAS JAYA

2023-01-25 19:54:45,252 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: BINDA PERMAS JAYA
2023-01-25 19:54:45,252 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:54:45,253 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  19-12-2018

2023-01-25 19:54:45,253 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 19-12-2018
2023-01-25 19:54:45,253 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:54:45,253 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  JALAN TAMPOI 7/4,KAWASAN PERINDUSTRIAN TAMPOI,81200 JOHOR BAHRU,JOHOR

2023-01-25 19:54:45,254 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: JALAN TAMPOI 7/4,KAWASAN PERINDUSTRIAN TAMPOI,81200 JOHOR BAHRU,JOHOR
2023-01-25 19:54:45,254 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:54:45,254 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  6.60

If you would like to search the document in different formats (plain text, csv, docx), just leave all of them blank and press submit.
You may also send the document with your problem by mail to support@sds.com.
2023-01-25 19:54:45,254 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 6.60 If you would like to search the document in different formats (plain text, csv, docx), just leave all of them blank and press submit. You may also send the document with your problem by mail to support@sds.com.
2023-01-25 19:54:45,255 - __main__ - INFO - 96 - <module>() - Final prediction for document 290: {'company': 'BINDA PERMAS JAYA', 'date': '19-12-2018', 'address': 'JALAN TAMPOI 7/4,KAWASAN PERINDUSTRIAN TAMPOI,81200 JOHOR BAHRU,JOHOR', 'total': '6.60 If you would like to search the document in different formats (plain text, csv, docx), just leave all of them blank and press submit. You may also send the document with your problem by mail to support@sds.com.'}
2023-01-25 19:54:45,257 - __main__ - INFO - 92 - <module>() - Predicting document 291...
2023-01-25 19:54:52,407 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  ACME Corp.
Date of Receipt: 10/21/2017
Address of Company: 3475 E Main Street
Total: $6,500.00

Note: You must specify all of the above for every company name, date of receipt, address of company, and total in the CSV file.

You can save the CSV document and then upload it to CodeEval.

In CodeEval, you'll use their test data as a "reference answer" for the task.

The test cases will ask you to do the following:

Parse the CSV data.

Identify company
2023-01-25 19:54:52,410 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:54:52,410 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:54:52,418 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  ACME Corp.

2023-01-25 19:54:52,419 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: ACME Corp.
2023-01-25 19:54:52,420 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:54:52,420 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  10/21/2017

2023-01-25 19:54:52,421 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 10/21/2017
2023-01-25 19:54:52,421 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:54:52,422 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  3475 E Main Street

2023-01-25 19:54:52,423 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 3475 E Main Street
2023-01-25 19:54:52,424 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:54:52,425 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  $6,500.00

Note: You must specify all of the above for every company name, date of receipt, address of company, and total in the CSV file.

You can save the CSV document and then upload it to CodeEval.

In CodeEval, you'll use their test data as a "reference answer" for the task.

The test cases will ask you to do the following:

Parse the CSV data.

Identify company
2023-01-25 19:54:52,425 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: $6,500.00 Note: You must specify all of the above for every company name, date of receipt, address of company, and total in the CSV file. You can save the CSV document and then upload it to CodeEval. In CodeEval, you'll use their test data as a "reference answer" for the task. The test cases will ask you to do the following: Parse the CSV data. Identify company
2023-01-25 19:54:52,426 - __main__ - INFO - 96 - <module>() - Final prediction for document 291: {'company': 'ACME Corp.', 'date': '10/21/2017', 'address': '3475 E Main Street', 'total': '$6,500.00 Note: You must specify all of the above for every company name, date of receipt, address of company, and total in the CSV file. You can save the CSV document and then upload it to CodeEval. In CodeEval, you\'ll use their test data as a "reference answer" for the task. The test cases will ask you to do the following: Parse the CSV data. Identify company'}
2023-01-25 19:54:52,433 - __main__ - INFO - 92 - <module>() - Predicting document 292...
2023-01-25 19:54:59,433 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  abc
Date of Receipt: 12/23/2017
Address of Company: 123 foo
Total: 100

Please help me with extracting the values from the file.

A:

You can easily extract the elements using a StreamTokenizer.
First create a Scanner
String filename = "document.txt";
Scanner scanner = new Scanner(new FileReader(filename));
scanner.useDelimiter(":");

Then, use a StreamTokenizer with a default delimiter of " " (space):
StreamTokenizer token = new StreamTokenizer(new
2023-01-25 19:54:59,435 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:54:59,436 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:54:59,436 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  abc

2023-01-25 19:54:59,437 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: abc
2023-01-25 19:54:59,437 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:54:59,437 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  12/23/2017

2023-01-25 19:54:59,437 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 12/23/2017
2023-01-25 19:54:59,437 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:54:59,438 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  123 foo

2023-01-25 19:54:59,438 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 123 foo
2023-01-25 19:54:59,438 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:54:59,438 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  100

Please help me with extracting the values from the file.

A:

You can easily extract the elements using a StreamTokenizer.
First create a Scanner
String filename = "document.txt";
Scanner scanner = new Scanner(new FileReader(filename));
scanner.useDelimiter(":");

Then, use a StreamTokenizer with a default delimiter of " " (space):
StreamTokenizer token = new StreamTokenizer(new
2023-01-25 19:54:59,438 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 100 Please help me with extracting the values from the file. A: You can easily extract the elements using a StreamTokenizer. First create a Scanner String filename = "document.txt"; Scanner scanner = new Scanner(new FileReader(filename)); scanner.useDelimiter(":"); Then, use a StreamTokenizer with a default delimiter of " " (space): StreamTokenizer token = new StreamTokenizer(new
2023-01-25 19:54:59,439 - __main__ - INFO - 96 - <module>() - Final prediction for document 292: {'company': 'abc', 'date': '12/23/2017', 'address': '123 foo', 'total': '100 Please help me with extracting the values from the file. A: You can easily extract the elements using a StreamTokenizer. First create a Scanner String filename = "document.txt"; Scanner scanner = new Scanner(new FileReader(filename)); scanner.useDelimiter(":"); Then, use a StreamTokenizer with a default delimiter of " " (space): StreamTokenizer token = new StreamTokenizer(new'}
2023-01-25 19:54:59,443 - __main__ - INFO - 92 - <module>() - Predicting document 293...
2023-01-25 19:55:06,319 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  abc
Date of Receipt: 03/07/2018
Address of Company: 123, jalan
Total: 300.00

For all other values in the document other than the three fields mentioned above, leave them as it is.

Save the file as "document.csv" or "document.xlsx".

Note that to process this input file, you need to enter the correct value for all the three key-value pairs as mentioned above. If any of the key-value pairs are missing, processing will not be completed.
2023-01-25 19:55:06,319 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:55:06,320 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:55:06,320 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  abc

2023-01-25 19:55:06,320 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: abc
2023-01-25 19:55:06,320 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:55:06,321 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  03/07/2018

2023-01-25 19:55:06,321 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 03/07/2018
2023-01-25 19:55:06,321 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:55:06,321 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  123, jalan

2023-01-25 19:55:06,321 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 123, jalan
2023-01-25 19:55:06,322 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:55:06,322 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  300.00

For all other values in the document other than the three fields mentioned above, leave them as it is.

Save the file as "document.csv" or "document.xlsx".

Note that to process this input file, you need to enter the correct value for all the three key-value pairs as mentioned above. If any of the key-value pairs are missing, processing will not be completed.
2023-01-25 19:55:06,322 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 300.00 For all other values in the document other than the three fields mentioned above, leave them as it is. Save the file as "document.csv" or "document.xlsx". Note that to process this input file, you need to enter the correct value for all the three key-value pairs as mentioned above. If any of the key-value pairs are missing, processing will not be completed.
2023-01-25 19:55:06,322 - __main__ - INFO - 96 - <module>() - Final prediction for document 293: {'company': 'abc', 'date': '03/07/2018', 'address': '123, jalan', 'total': '300.00 For all other values in the document other than the three fields mentioned above, leave them as it is. Save the file as "document.csv" or "document.xlsx". Note that to process this input file, you need to enter the correct value for all the three key-value pairs as mentioned above. If any of the key-value pairs are missing, processing will not be completed.'}
2023-01-25 19:55:06,324 - __main__ - INFO - 92 - <module>() - Predicting document 294...
2023-01-25 19:55:14,082 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  ABC Ltd.
Date of Receipt: 01/01/2000
Address of Company: ABC Ltd. PO Box 1235, Klang, Malaysia
Total: 1290.00
End of the extract.

Write the file name and its contents. You can also use the file name on your hard drive and save the output.

Write "Company Name", "Date of Receipt", "Address of Company", "Total", "<|stop key|>" from the document above. If you can't find a key-value pair in the document set the value to "null".

1. Key:
2023-01-25 19:55:14,084 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:55:14,084 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:55:14,085 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  ABC Ltd.

2023-01-25 19:55:14,085 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: ABC Ltd.
2023-01-25 19:55:14,085 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:55:14,085 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  01/01/2000

2023-01-25 19:55:14,086 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 01/01/2000
2023-01-25 19:55:14,086 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:55:14,086 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  ABC Ltd. PO Box 1235, Klang, Malaysia

2023-01-25 19:55:14,086 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: ABC Ltd. PO Box 1235, Klang, Malaysia
2023-01-25 19:55:14,087 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:55:14,087 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  1290.00
End of the extract.

Write the file name and its contents. You can also use the file name on your hard drive and save the output.

Write "Company Name", "Date of Receipt", "Address of Company", "Total", "<|stop key|>" from the document above. If you can't find a key-value pair in the document set the value to "null".

1. Key:
2023-01-25 19:55:14,087 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 1290.00 End of the extract. Write the file name and its contents. You can also use the file name on your hard drive and save the output. Write "Company Name", "Date of Receipt", "Address of Company", "Total", "<|stop key|>" from the document above. If you can't find a key-value pair in the document set the value to "null". 1. Key:
2023-01-25 19:55:14,088 - __main__ - INFO - 96 - <module>() - Final prediction for document 294: {'company': 'ABC Ltd.', 'date': '01/01/2000', 'address': 'ABC Ltd. PO Box 1235, Klang, Malaysia', 'total': '1290.00 End of the extract. Write the file name and its contents. You can also use the file name on your hard drive and save the output. Write "Company Name", "Date of Receipt", "Address of Company", "Total", "<|stop key|>" from the document above. If you can\'t find a key-value pair in the document set the value to "null". 1. Key:'}
2023-01-25 19:55:14,089 - __main__ - INFO - 92 - <module>() - Predicting document 295...
2023-01-25 19:55:21,111 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  C.J. Lim (0011204081-K)
Date of Receipt: 21 March 2018
Address of Company: Jalan Banting 43800 Taman Desa Dengkil, Selangor
Total: 68.90

Extract "<|stop key|>" from the document above. If you can't find a key-value pair in the document set the value to "null".

Key: Value
Company Name: C.J. Lim (0011204081-K)
Date of Receipt: 21 March 2018
Address of Company: Jalan Banting 43800 T
2023-01-25 19:55:21,111 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:55:21,111 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:55:21,112 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  C.J. Lim (0011204081-K)

2023-01-25 19:55:21,112 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: C.J. Lim (0011204081-K)
2023-01-25 19:55:21,112 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:55:21,112 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  21 March 2018

2023-01-25 19:55:21,112 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 21 March 2018
2023-01-25 19:55:21,112 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:55:21,112 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Jalan Banting 43800 Taman Desa Dengkil, Selangor

2023-01-25 19:55:21,112 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Jalan Banting 43800 Taman Desa Dengkil, Selangor
2023-01-25 19:55:21,113 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:55:21,113 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  68.90

Extract "<|stop key|>" from the document above. If you can't find a key-value pair in the document set the value to "null".

Key: Value
Company Name: C.J. Lim (0011204081-K)
Date of Receipt: 21 March 2018
Address of Company: Jalan Banting 43800 T
2023-01-25 19:55:21,113 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 68.90 Extract "<|stop key|>" from the document above. If you can't find a key-value pair in the document set the value to "null". Key: Value Company Name: C.J. Lim (0011204081-K) Date of Receipt: 21 March 2018 Address of Company: Jalan Banting 43800 T
2023-01-25 19:55:21,113 - __main__ - INFO - 96 - <module>() - Final prediction for document 295: {'company': 'C.J. Lim (0011204081-K)', 'date': '21 March 2018', 'address': 'Jalan Banting 43800 Taman Desa Dengkil, Selangor', 'total': '68.90 Extract "<|stop key|>" from the document above. If you can\'t find a key-value pair in the document set the value to "null". Key: Value Company Name: C.J. Lim (0011204081-K) Date of Receipt: 21 March 2018 Address of Company: Jalan Banting 43800 T'}
2023-01-25 19:55:21,114 - __main__ - INFO - 92 - <module>() - Predicting document 296...
2023-01-25 19:55:28,712 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:
Date of Receipt:
Address of Company:
Total:

Example: If the first line from the input document is this:

Key: Value Company Name: ABC Date of Receipt: 1/1/2017 Address of Company: XYZ Total: $100

And the user types in ABC, 1/1/2017, and $100, the output should be:

Key: Value Company Name: ABC Date of Receipt: 1/1/2017 Address of Company: XYZ Total: $100

For this homework assignment, you will only have to solve only the first part
2023-01-25 19:55:28,716 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:55:28,717 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:55:28,717 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:55:28,718 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:55:28,718 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:55:28,718 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:55:28,719 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:55:28,719 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:55:28,719 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:55:28,719 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:55:28,720 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:55:28,720 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

Example: If the first line from the input document is this:

Key: Value Company Name: ABC Date of Receipt: 1/1/2017 Address of Company: XYZ
2023-01-25 19:55:28,720 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Example: If the first line from the input document is this: Key: Value Company Name: ABC Date of Receipt: 1/1/2017 Address of Company: XYZ
2023-01-25 19:55:28,721 - __main__ - INFO - 96 - <module>() - Final prediction for document 296: {'total': 'Example: If the first line from the input document is this: Key: Value Company Name: ABC Date of Receipt: 1/1/2017 Address of Company: XYZ'}
2023-01-25 19:55:28,729 - __main__ - INFO - 92 - <module>() - Predicting document 297...
2023-01-25 19:55:34,213 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  GARDENIA BAKERIES (KL) SDN BHD (139386 X)
Date of Receipt: 02/09/2017
Address of Company: Ground Floor, No. 4 & 6, Jalan SS 15/4B, 47500
SUBANG JAYA, SELANGOR
Total: RM48.57

Key: Value
2023-01-25 19:55:34,214 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:55:34,214 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:55:34,214 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  GARDENIA BAKERIES (KL) SDN BHD (139386 X)

2023-01-25 19:55:34,215 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: GARDENIA BAKERIES (KL) SDN BHD (139386 X)
2023-01-25 19:55:34,215 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:55:34,215 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  02/09/2017

2023-01-25 19:55:34,215 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 02/09/2017
2023-01-25 19:55:34,215 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:55:34,216 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Ground Floor, No. 4 & 6, Jalan SS 15/4B, 47500
SUBANG JAYA, SELANGOR

2023-01-25 19:55:34,216 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Ground Floor, No. 4 & 6, Jalan SS 15/4B, 47500 SUBANG JAYA, SELANGOR
2023-01-25 19:55:34,216 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:55:34,216 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  RM48.57

Key: Value
2023-01-25 19:55:34,216 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: RM48.57 Key: Value
2023-01-25 19:55:34,217 - __main__ - INFO - 96 - <module>() - Final prediction for document 297: {'company': 'GARDENIA BAKERIES (KL) SDN BHD (139386 X)', 'date': '02/09/2017', 'address': 'Ground Floor, No. 4 & 6, Jalan SS 15/4B, 47500 SUBANG JAYA, SELANGOR', 'total': 'RM48.57 Key: Value'}
2023-01-25 19:55:34,218 - __main__ - INFO - 92 - <module>() - Predicting document 298...
2023-01-25 19:55:41,408 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  Company Name
Date of Receipt: Date of Receipt
Address of Company: Address of Company
Total: Total
STOP key:
Company Name: Company Name
Date of Receipt: Date of Receipt
Address of Company: Address of Company
Total: Total
>
Company Name: Company Name
Date of Receipt: Date of Receipt
Address of Company: Address of Company
Total: Total

Output: Company Name, Date of Receipt, Address of Company, Total
Company Name
Date of Receipt
Address of Company
Total

Sample input data
Company Name      |
2023-01-25 19:55:41,409 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:55:41,409 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:55:41,409 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Company Name

2023-01-25 19:55:41,409 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Company Name
2023-01-25 19:55:41,409 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:55:41,410 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Date of Receipt

2023-01-25 19:55:41,410 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Date of Receipt
2023-01-25 19:55:41,410 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:55:41,410 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Address of Company

2023-01-25 19:55:41,410 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Address of Company
2023-01-25 19:55:41,410 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:55:41,411 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Total
STOP key:
Company Name: Company Name
Date of Receipt: Date of Receipt
Address of Company: Address of Company

2023-01-25 19:55:41,411 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Total STOP key: Company Name: Company Name Date of Receipt: Date of Receipt Address of Company: Address of Company
2023-01-25 19:55:41,411 - __main__ - INFO - 96 - <module>() - Final prediction for document 298: {'company': 'Company Name', 'date': 'Date of Receipt', 'address': 'Address of Company', 'total': 'Total STOP key: Company Name: Company Name Date of Receipt: Date of Receipt Address of Company: Address of Company'}
2023-01-25 19:55:41,412 - __main__ - INFO - 92 - <module>() - Predicting document 299...
2023-01-25 19:55:49,303 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:
Date of Receipt:
Address of Company:
Total:

Your task: Using the above data, get the company name of the company with the highest total.

This is an interview exercise to see if you are a good candidate. So try to code as fast as you can. If your code passes the interviewer's tests, you will pass the interview.

Coding exercise

Write a function named computeTotal(input, output) that has the following parameter and output:

input (array of objects)

output (an object)

The function computes the total of the
2023-01-25 19:55:49,305 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:55:49,305 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:55:49,306 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:55:49,306 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:55:49,306 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:55:49,307 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:55:49,307 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:55:49,307 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:55:49,307 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:55:49,308 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:55:49,308 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:55:49,308 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

Your task: Using the above data, get the company name of the company with the highest total.

This is an interview exercise to see if you are a good candidate. So try to code as fast as you can. If your code passes the interviewer's tests, you will pass the interview.

Coding exercise

Write a function named computeTotal(input, output) that has the following parameter and output:

input (array of objects)

output (an object)

The function computes the total of the
2023-01-25 19:55:49,308 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Your task: Using the above data, get the company name of the company with the highest total. This is an interview exercise to see if you are a good candidate. So try to code as fast as you can. If your code passes the interviewer's tests, you will pass the interview. Coding exercise Write a function named computeTotal(input, output) that has the following parameter and output: input (array of objects) output (an object) The function computes the total of the
2023-01-25 19:55:49,309 - __main__ - INFO - 96 - <module>() - Final prediction for document 299: {'total': "Your task: Using the above data, get the company name of the company with the highest total. This is an interview exercise to see if you are a good candidate. So try to code as fast as you can. If your code passes the interviewer's tests, you will pass the interview. Coding exercise Write a function named computeTotal(input, output) that has the following parameter and output: input (array of objects) output (an object) The function computes the total of the"}
2023-01-25 19:55:49,310 - __main__ - INFO - 92 - <module>() - Predicting document 300...
2023-01-25 19:55:53,635 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  Boon Seng Paper SDN BHD
Date of Receipt: 19/03/2018 1:01:43 PM
Address of Company:
Total: 30.00

Extract all documents for all companies sold by Boon Seng Paper SDN BHD

To find more information on a document, select a country from the list above.
2023-01-25 19:55:53,636 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:55:53,636 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:55:53,637 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Boon Seng Paper SDN BHD

2023-01-25 19:55:53,637 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Boon Seng Paper SDN BHD
2023-01-25 19:55:53,637 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:55:53,638 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  19/03/2018 1:01:43 PM

2023-01-25 19:55:53,638 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 19/03/2018 1:01:43 PM
2023-01-25 19:55:53,638 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:55:53,639 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:55:53,639 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:55:53,639 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:55:53,639 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  30.00

Extract all documents for all companies sold by Boon Seng Paper SDN BHD

To find more information on a document, select a country from the list above.
2023-01-25 19:55:53,640 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 30.00 Extract all documents for all companies sold by Boon Seng Paper SDN BHD To find more information on a document, select a country from the list above.
2023-01-25 19:55:53,640 - __main__ - INFO - 96 - <module>() - Final prediction for document 300: {'company': 'Boon Seng Paper SDN BHD', 'date': '19/03/2018 1:01:43 PM', 'total': '30.00 Extract all documents for all companies sold by Boon Seng Paper SDN BHD To find more information on a document, select a country from the list above.'}
2023-01-25 19:55:53,643 - __main__ - INFO - 92 - <module>() - Predicting document 301...
2023-01-25 19:56:00,504 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  "Rapid F&E"
Date of Receipt: "03/09/2018"
Address of Company: "Jalan Bandar Puchong Utama, 47160 Puchong, Selangor, Malaysia"
Total: "RM 100.00"

Output

SALESPERSON
TIME: "13:40:00"
CASHIER
ITEM
QTY
U/P
AMOUNT
(RM)
(RM)
2017
1
7.00
7.00
SR:(UNIT) 29#SAMURAI SPRAY PAINT
T
2023-01-25 19:56:00,506 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:56:00,506 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:56:00,506 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  "Rapid F&E"

2023-01-25 19:56:00,506 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Rapid F&E
2023-01-25 19:56:00,507 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:56:00,507 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  "03/09/2018"

2023-01-25 19:56:00,507 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 03/09/2018
2023-01-25 19:56:00,508 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:56:00,508 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  "Jalan Bandar Puchong Utama, 47160 Puchong, Selangor, Malaysia"

2023-01-25 19:56:00,509 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Jalan Bandar Puchong Utama, 47160 Puchong, Selangor, Malaysia
2023-01-25 19:56:00,509 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:56:00,509 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  "RM 100.00"

Output

SALESPERSON
TIME: "13:40:00"
CASHIER
ITEM
QTY
U/P
AMOUNT
(RM)
(RM)
2017
1
7.00
7.00
SR:(UNIT) 29#SAMURAI SPRAY PAINT
T
2023-01-25 19:56:00,509 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: "RM 100.00" Output SALESPERSON TIME: "13:40:00" CASHIER ITEM QTY U/P AMOUNT (RM) (RM) 2017 1 7.00 7.00 SR:(UNIT) 29#SAMURAI SPRAY PAINT T
2023-01-25 19:56:00,510 - __main__ - INFO - 96 - <module>() - Final prediction for document 301: {'company': 'Rapid F&E', 'date': '03/09/2018', 'address': 'Jalan Bandar Puchong Utama, 47160 Puchong, Selangor, Malaysia', 'total': '"RM 100.00" Output SALESPERSON TIME: "13:40:00" CASHIER ITEM QTY U/P AMOUNT (RM) (RM) 2017 1 7.00 7.00 SR:(UNIT) 29#SAMURAI SPRAY PAINT T'}
2023-01-25 19:56:00,511 - __main__ - INFO - 92 - <module>() - Predicting document 302...
2023-01-25 19:56:07,528 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  ABC
Date of Receipt: 05-Dec-2018
Address of Company:
Total: RM678.00

Your output must look something like this:
(Surname Smith, Mr, "ABC Ltd.", "05-Dec-2018", "XYZ Road, Kuala Lumpur", "678.00")
Output:
(Surname Smith, Mr, "ABC Ltd.", "05-Dec-2018", "XYZ Road, Kuala Lumpur", "678.00")

Here is my attempt with the help of the regex101 engine:
(https://
2023-01-25 19:56:07,529 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:56:07,529 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:56:07,530 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  ABC

2023-01-25 19:56:07,530 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: ABC
2023-01-25 19:56:07,530 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:56:07,531 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  05-Dec-2018

2023-01-25 19:56:07,531 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 05-Dec-2018
2023-01-25 19:56:07,531 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:56:07,532 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:56:07,532 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:56:07,532 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:56:07,532 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  RM678.00

Your output must look something like this:
(Surname Smith, Mr, "ABC Ltd.", "05-Dec-2018", "XYZ Road, Kuala Lumpur", "678.00")
Output:
(Surname Smith, Mr, "ABC Ltd.", "05-Dec-2018", "XYZ Road, Kuala Lumpur", "678.00")

Here is my attempt with the help of the regex101 engine:
(https://
2023-01-25 19:56:07,533 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: RM678.00 Your output must look something like this: (Surname Smith, Mr, "ABC Ltd.", "05-Dec-2018", "XYZ Road, Kuala Lumpur", "678.00") Output: (Surname Smith, Mr, "ABC Ltd.", "05-Dec-2018", "XYZ Road, Kuala Lumpur", "678.00") Here is my attempt with the help of the regex101 engine: (https://
2023-01-25 19:56:07,533 - __main__ - INFO - 96 - <module>() - Final prediction for document 302: {'company': 'ABC', 'date': '05-Dec-2018', 'total': 'RM678.00 Your output must look something like this: (Surname Smith, Mr, "ABC Ltd.", "05-Dec-2018", "XYZ Road, Kuala Lumpur", "678.00") Output: (Surname Smith, Mr, "ABC Ltd.", "05-Dec-2018", "XYZ Road, Kuala Lumpur", "678.00") Here is my attempt with the help of the regex101 engine: (https://'}
2023-01-25 19:56:07,535 - __main__ - INFO - 92 - <module>() - Predicting document 303...
2023-01-25 19:56:13,739 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  <companyName>
Date of Receipt: <dateOfReceipt>
Address of Company: <addressOfCompany>
Total: <totalOfInvoice>

Save the data as CSV using these values. If there are duplicates make sure to use an id/date key to identify the duplicates.

To help us provide you with the best experience on our website we use cookies to analyse traffic on our website. For more information please read our Privacy Policy. We want you to know more about our cookies. By using our website you accept our use of cookies.
2023-01-25 19:56:13,740 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:56:13,741 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:56:13,741 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  <companyName>

2023-01-25 19:56:13,741 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: <companyName>
2023-01-25 19:56:13,742 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:56:13,742 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  <dateOfReceipt>

2023-01-25 19:56:13,742 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: <dateOfReceipt>
2023-01-25 19:56:13,742 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:56:13,743 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  <addressOfCompany>

2023-01-25 19:56:13,743 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: <addressOfCompany>
2023-01-25 19:56:13,743 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:56:13,743 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  <totalOfInvoice>

Save the data as CSV using these values. If there are duplicates make sure to use an id/date key to identify the duplicates.

To help us provide you with the best experience on our website we use cookies to analyse traffic on our website. For more information please read our Privacy Policy. We want you to know more about our cookies. By using our website you accept our use of cookies.
2023-01-25 19:56:13,744 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: <totalOfInvoice> Save the data as CSV using these values. If there are duplicates make sure to use an id/date key to identify the duplicates. To help us provide you with the best experience on our website we use cookies to analyse traffic on our website. For more information please read our Privacy Policy. We want you to know more about our cookies. By using our website you accept our use of cookies.
2023-01-25 19:56:13,744 - __main__ - INFO - 96 - <module>() - Final prediction for document 303: {'company': '<companyName>', 'date': '<dateOfReceipt>', 'address': '<addressOfCompany>', 'total': '<totalOfInvoice> Save the data as CSV using these values. If there are duplicates make sure to use an id/date key to identify the duplicates. To help us provide you with the best experience on our website we use cookies to analyse traffic on our website. For more information please read our Privacy Policy. We want you to know more about our cookies. By using our website you accept our use of cookies.'}
2023-01-25 19:56:13,745 - __main__ - INFO - 92 - <module>() - Predicting document 304...
2023-01-25 19:56:20,833 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  Fancy Electronics
Address of Company: 123 Main Street
Total: 50

Output
Company Name: Fancy Electronics
Address of Company: 123 Main Street
Total: 50.00
Date of Receipt: 08-05-2018

How to extract value if there are multiple key-value pairs?

The values for the keys must be in a fixed order. You can use the following method to extract values from the document.

Extract multiple values if there are multiple key-value pairs.

The following method can extract multiple values from the key.

Extract the total


2023-01-25 19:56:20,833 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:56:20,834 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:56:20,834 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Fancy Electronics
Address of Company: 123 Main Street
Total: 50

Output

2023-01-25 19:56:20,834 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Fancy Electronics Address of Company: 123 Main Street Total: 50 Output
2023-01-25 19:56:20,835 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:56:20,835 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  08-05-2018

How to extract value if there are multiple key-value pairs?

The values for the keys must be in a fixed order. You can use the following method to extract values from the document.

Extract multiple values if there are multiple key-value pairs.

The following method can extract multiple values from the key.

Extract the total


2023-01-25 19:56:20,835 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 08-05-2018 How to extract value if there are multiple key-value pairs? The values for the keys must be in a fixed order. You can use the following method to extract values from the document. Extract multiple values if there are multiple key-value pairs. The following method can extract multiple values from the key. Extract the total
2023-01-25 19:56:20,835 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:56:20,836 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  123 Main Street

2023-01-25 19:56:20,836 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 123 Main Street
2023-01-25 19:56:20,836 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:56:20,836 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  50

Output
Company Name: Fancy Electronics
Address of Company: 123 Main Street

2023-01-25 19:56:20,837 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 50 Output Company Name: Fancy Electronics Address of Company: 123 Main Street
2023-01-25 19:56:20,837 - __main__ - INFO - 96 - <module>() - Final prediction for document 304: {'company': 'Fancy Electronics Address of Company: 123 Main Street Total: 50 Output', 'date': '08-05-2018 How to extract value if there are multiple key-value pairs? The values for the keys must be in a fixed order. You can use the following method to extract values from the document. Extract multiple values if there are multiple key-value pairs. The following method can extract multiple values from the key. Extract the total', 'address': '123 Main Street', 'total': '50 Output Company Name: Fancy Electronics Address of Company: 123 Main Street'}
2023-01-25 19:56:20,839 - __main__ - INFO - 92 - <module>() - Predicting document 305...
2023-01-25 19:56:27,856 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  A&B
Date of Receipt: 24-12-2017
Address of Company: Citi Centre, Unit 1006, 10A Persiaran Citipark, Jalan Putra Indah 2, 315039 Putrajaya, Pahang, Malaysia
Total: 900.00
You can only include between 1 and 10 key-value pairs in your POST request.

[...]

In our example, we were able to extract all of the required data without problems!

#7: Extract "Item Code", "Description", "Tax Amount", "Rounding", "Open"
2023-01-25 19:56:27,858 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:56:27,859 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:56:27,860 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  A&B

2023-01-25 19:56:27,860 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: A&B
2023-01-25 19:56:27,860 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:56:27,861 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  24-12-2017

2023-01-25 19:56:27,861 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 24-12-2017
2023-01-25 19:56:27,861 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:56:27,861 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Citi Centre, Unit 1006, 10A Persiaran Citipark, Jalan Putra Indah 2, 315039 Putrajaya, Pahang, Malaysia

2023-01-25 19:56:27,861 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Citi Centre, Unit 1006, 10A Persiaran Citipark, Jalan Putra Indah 2, 315039 Putrajaya, Pahang, Malaysia
2023-01-25 19:56:27,862 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:56:27,862 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  900.00
You can only include between 1 and 10 key-value pairs in your POST request.

[...]

In our example, we were able to extract all of the required data without problems!

#7: Extract "Item Code", "Description", "Tax Amount", "Rounding", "Open"
2023-01-25 19:56:27,862 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 900.00 You can only include between 1 and 10 key-value pairs in your POST request. [...] In our example, we were able to extract all of the required data without problems! #7: Extract "Item Code", "Description", "Tax Amount", "Rounding", "Open"
2023-01-25 19:56:27,862 - __main__ - INFO - 96 - <module>() - Final prediction for document 305: {'company': 'A&B', 'date': '24-12-2017', 'address': 'Citi Centre, Unit 1006, 10A Persiaran Citipark, Jalan Putra Indah 2, 315039 Putrajaya, Pahang, Malaysia', 'total': '900.00 You can only include between 1 and 10 key-value pairs in your POST request. [...] In our example, we were able to extract all of the required data without problems! #7: Extract "Item Code", "Description", "Tax Amount", "Rounding", "Open"'}
2023-01-25 19:56:27,867 - __main__ - INFO - 92 - <module>() - Predicting document 306...
2023-01-25 19:56:30,356 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:
$0.00
2
Date of Receipt: 16/11/2017
Address of Company:
3
Total: $1,320.00
2023-01-25 19:56:30,357 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:56:30,357 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:56:30,358 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:
$0.00
2

2023-01-25 19:56:30,358 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: $0.00 2
2023-01-25 19:56:30,358 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:56:30,358 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  16/11/2017

2023-01-25 19:56:30,359 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 16/11/2017
2023-01-25 19:56:30,359 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:56:30,359 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:
3

2023-01-25 19:56:30,359 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 3
2023-01-25 19:56:30,360 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:56:30,360 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  $1,320.00
2023-01-25 19:56:30,360 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: $1,320.00
2023-01-25 19:56:30,361 - __main__ - INFO - 96 - <module>() - Final prediction for document 306: {'company': '$0.00 2', 'date': '16/11/2017', 'address': '3', 'total': '$1,320.00'}
2023-01-25 19:56:30,363 - __main__ - INFO - 92 - <module>() - Predicting document 307...
2023-01-25 19:56:37,181 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  Bar Wang Rice
Date of Receipt: 16.04.2018
Address of Company: Jalan Tampoi 7/4, Kawasan Perindustrian Tampoi
Total: RM 10.17

Expected result: "RM10.17"

What I've done so far:
I'm currently using this code to split the document and extract values from it:
Private Function GetDocTextValues(ByVal DocText As String) As List(Of KeyValuePair(Of String, String))
        Dim result As New List(Of KeyValuePair(Of String, String))

2023-01-25 19:56:37,182 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:56:37,182 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:56:37,183 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Bar Wang Rice

2023-01-25 19:56:37,183 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Bar Wang Rice
2023-01-25 19:56:37,183 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:56:37,183 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  16.04.2018

2023-01-25 19:56:37,184 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 16.04.2018
2023-01-25 19:56:37,184 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:56:37,184 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Jalan Tampoi 7/4, Kawasan Perindustrian Tampoi

2023-01-25 19:56:37,184 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Jalan Tampoi 7/4, Kawasan Perindustrian Tampoi
2023-01-25 19:56:37,185 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:56:37,185 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  RM 10.17

Expected result: "RM10.17"

What I've done so far:
I'm currently using this code to split the document and extract values from it:
Private Function GetDocTextValues(ByVal DocText As String) As List(Of KeyValuePair(Of String, String))
        Dim result As New List(Of KeyValuePair(Of String, String))

2023-01-25 19:56:37,185 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: RM 10.17 Expected result: "RM10.17" What I've done so far: I'm currently using this code to split the document and extract values from it: Private Function GetDocTextValues(ByVal DocText As String) As List(Of KeyValuePair(Of String, String))     Dim result As New List(Of KeyValuePair(Of String, String))
2023-01-25 19:56:37,185 - __main__ - INFO - 96 - <module>() - Final prediction for document 307: {'company': 'Bar Wang Rice', 'date': '16.04.2018', 'address': 'Jalan Tampoi 7/4, Kawasan Perindustrian Tampoi', 'total': 'RM 10.17 Expected result: "RM10.17" What I\'ve done so far: I\'m currently using this code to split the document and extract values from it: Private Function GetDocTextValues(ByVal DocText As String) As List(Of KeyValuePair(Of String, String))     Dim result As New List(Of KeyValuePair(Of String, String))'}
2023-01-25 19:56:37,187 - __main__ - INFO - 92 - <module>() - Predicting document 308...
2023-01-25 19:56:38,935 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:
Date of Receipt:
Address of Company:
Total:
2023-01-25 19:56:38,935 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:56:38,935 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:56:38,935 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:56:38,935 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:56:38,935 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:56:38,936 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:56:38,936 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:56:38,936 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:56:38,936 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:56:38,936 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:56:38,936 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:56:38,936 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:
2023-01-25 19:56:38,936 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:56:38,936 - __main__ - INFO - 96 - <module>() - Final prediction for document 308: {}
2023-01-25 19:56:38,937 - __main__ - INFO - 92 - <module>() - Predicting document 309...
2023-01-25 19:56:42,134 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  <|Stop Key|>
Date of Receipt: <|Stop Key|>
Address of Company: <|Stop Key|>
Total: <|Stop Key|>
If you don't know the field names, look them up in the documen
2023-01-25 19:56:42,135 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:56:42,135 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:56:42,136 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  <|Stop Key|>

2023-01-25 19:56:42,136 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: <|Stop Key|>
2023-01-25 19:56:42,137 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:56:42,137 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  <|Stop Key|>

2023-01-25 19:56:42,137 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: <|Stop Key|>
2023-01-25 19:56:42,138 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:56:42,138 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  <|Stop Key|>

2023-01-25 19:56:42,138 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: <|Stop Key|>
2023-01-25 19:56:42,138 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:56:42,139 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  <|Stop Key|>
If you don't know the field names, look them up in the documen
2023-01-25 19:56:42,139 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: <|Stop Key|> If you don't know the field names, look them up in the documen
2023-01-25 19:56:42,139 - __main__ - INFO - 96 - <module>() - Final prediction for document 309: {'company': '<|Stop Key|>', 'date': '<|Stop Key|>', 'address': '<|Stop Key|>', 'total': "<|Stop Key|> If you don't know the field names, look them up in the documen"}
2023-01-25 19:56:42,141 - __main__ - INFO - 92 - <module>() - Predicting document 310...
2023-01-25 19:56:49,063 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  STN 01
Date of Receipt: 2018/05/15
Address of Company: JALAN LOW YAT, BINTULAN NO.5, JALAN BANGI, KUALA LUMPUR
Total: 64.50
0.00
Tips: 0.00
Cash: 100.00
0.00
STN 02
STN 03
STN 04
STN 05
STN 06
STN 07
STN 08
STN 09
STN 10
STN 11
STN 12
STN 13
STN 14
2023-01-25 19:56:49,064 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:56:49,064 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:56:49,064 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  STN 01

2023-01-25 19:56:49,064 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: STN 01
2023-01-25 19:56:49,064 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:56:49,064 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  2018/05/15

2023-01-25 19:56:49,064 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 2018/05/15
2023-01-25 19:56:49,064 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:56:49,064 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  JALAN LOW YAT, BINTULAN NO.5, JALAN BANGI, KUALA LUMPUR

2023-01-25 19:56:49,065 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: JALAN LOW YAT, BINTULAN NO.5, JALAN BANGI, KUALA LUMPUR
2023-01-25 19:56:49,065 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:56:49,065 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  64.50
0.00
Tips: 0.00
Cash: 100.00
0.00
STN 02
STN 03
STN 04
STN 05
STN 06
STN 07
STN 08
STN 09
STN 10
STN 11
STN 12
STN 13
STN 14
2023-01-25 19:56:49,065 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 64.50 0.00 Tips: 0.00 Cash: 100.00 0.00 STN 02 STN 03 STN 04 STN 05 STN 06 STN 07 STN 08 STN 09 STN 10 STN 11 STN 12 STN 13 STN 14
2023-01-25 19:56:49,065 - __main__ - INFO - 96 - <module>() - Final prediction for document 310: {'company': 'STN 01', 'date': '2018/05/15', 'address': 'JALAN LOW YAT, BINTULAN NO.5, JALAN BANGI, KUALA LUMPUR', 'total': '64.50 0.00 Tips: 0.00 Cash: 100.00 0.00 STN 02 STN 03 STN 04 STN 05 STN 06 STN 07 STN 08 STN 09 STN 10 STN 11 STN 12 STN 13 STN 14'}
2023-01-25 19:56:49,066 - __main__ - INFO - 92 - <module>() - Predicting document 311...
2023-01-25 19:56:51,087 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  CEREC ONE
Date of Receipt: 22/09/2017
Address of Company:
Total:

2023-01-25 19:56:51,087 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:56:51,088 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:56:51,088 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  CEREC ONE

2023-01-25 19:56:51,088 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: CEREC ONE
2023-01-25 19:56:51,088 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:56:51,089 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  22/09/2017

2023-01-25 19:56:51,089 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 22/09/2017
2023-01-25 19:56:51,089 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:56:51,090 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:56:51,090 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:56:51,090 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:56:51,090 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:56:51,091 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:56:51,091 - __main__ - INFO - 96 - <module>() - Final prediction for document 311: {'company': 'CEREC ONE', 'date': '22/09/2017'}
2023-01-25 19:56:51,092 - __main__ - INFO - 92 - <module>() - Predicting document 312...
2023-01-25 19:56:53,764 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  COMPANY NAME
Date of Receipt: RECEIPT DATE
Address of Company: ADDRESS
Total: TOTAL
2023-01-25 19:56:53,764 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:56:53,765 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:56:53,765 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  COMPANY NAME

2023-01-25 19:56:53,765 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: COMPANY NAME
2023-01-25 19:56:53,766 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:56:53,766 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  RECEIPT DATE

2023-01-25 19:56:53,766 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: RECEIPT DATE
2023-01-25 19:56:53,766 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:56:53,767 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  ADDRESS

2023-01-25 19:56:53,767 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: ADDRESS
2023-01-25 19:56:53,767 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:56:53,768 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  TOTAL
2023-01-25 19:56:53,768 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: TOTAL
2023-01-25 19:56:53,768 - __main__ - INFO - 96 - <module>() - Final prediction for document 312: {'company': 'COMPANY NAME', 'date': 'RECEIPT DATE', 'address': 'ADDRESS', 'total': 'TOTAL'}
2023-01-25 19:56:53,770 - __main__ - INFO - 92 - <module>() - Predicting document 313...
2023-01-25 19:57:00,918 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  abc Company
Date of Receipt: 12/30/2018 12:30:12
Address of Company: 123 Main St, Anytown, CT 12345
Total: 0.30

Write your program to output the following:
Company Name
The location of the company.
It is in a specific country and state.
The city the company is in.
A brief description of the business.
The address and phone of the company.
It's total number of employees.

The input is: a CSV file that lists the names of a number of companies in the US, for example
2023-01-25 19:57:00,920 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:57:00,920 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:57:00,921 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  abc Company

2023-01-25 19:57:00,921 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: abc Company
2023-01-25 19:57:00,921 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:57:00,922 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  12/30/2018 12:30:12

2023-01-25 19:57:00,922 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 12/30/2018 12:30:12
2023-01-25 19:57:00,922 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:57:00,923 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  123 Main St, Anytown, CT 12345

2023-01-25 19:57:00,923 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 123 Main St, Anytown, CT 12345
2023-01-25 19:57:00,923 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:57:00,923 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  0.30

Write your program to output the following:
Company Name
The location of the company.
It is in a specific country and state.
The city the company is in.
A brief description of the business.
The address and phone of the company.
It's total number of employees.

The input is: a CSV file that lists the names of a number of companies in the US, for example
2023-01-25 19:57:00,924 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 0.30 Write your program to output the following: Company Name The location of the company. It is in a specific country and state. The city the company is in. A brief description of the business. The address and phone of the company. It's total number of employees. The input is: a CSV file that lists the names of a number of companies in the US, for example
2023-01-25 19:57:00,924 - __main__ - INFO - 96 - <module>() - Final prediction for document 313: {'company': 'abc Company', 'date': '12/30/2018 12:30:12', 'address': '123 Main St, Anytown, CT 12345', 'total': "0.30 Write your program to output the following: Company Name The location of the company. It is in a specific country and state. The city the company is in. A brief description of the business. The address and phone of the company. It's total number of employees. The input is: a CSV file that lists the names of a number of companies in the US, for example"}
2023-01-25 19:57:00,927 - __main__ - INFO - 92 - <module>() - Predicting document 314...
2023-01-25 19:57:08,944 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  YOURCOMPANYNAME
Date of Receipt: Date
Address of Company: your business address
Total: Sum (i.e. 10.00 or 50.00)

Output:
Company Name, Date of Receipt, Address of Company, Total, Total
yourCompanyName, Date of Receipt, yourBusinessAddress, 10.00, 10.00
yourCompanyName, Date of Receipt, yourBusinessAddress, 50.00, 50.00
if the key is unknown you can use 'null'
if there is more than one key you have to use delimiter ';' between
2023-01-25 19:57:08,945 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:57:08,945 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:57:08,945 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  YOURCOMPANYNAME

2023-01-25 19:57:08,945 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: YOURCOMPANYNAME
2023-01-25 19:57:08,945 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:57:08,946 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Date

2023-01-25 19:57:08,946 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Date
2023-01-25 19:57:08,946 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:57:08,946 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  your business address

2023-01-25 19:57:08,946 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: your business address
2023-01-25 19:57:08,946 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:57:08,946 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Sum (i.e. 10.00 or 50.00)

Output:
Company Name, Date of Receipt, Address of Company, Total, Total
yourCompanyName, Date of Receipt, yourBusinessAddress, 10.00, 10.00
yourCompanyName, Date of Receipt, yourBusinessAddress, 50.00, 50.00
if the key is unknown you can use 'null'
if there is more than one key you have to use delimiter ';' between
2023-01-25 19:57:08,946 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Sum (i.e. 10.00 or 50.00) Output: Company Name, Date of Receipt, Address of Company, Total, Total yourCompanyName, Date of Receipt, yourBusinessAddress, 10.00, 10.00 yourCompanyName, Date of Receipt, yourBusinessAddress, 50.00, 50.00 if the key is unknown you can use 'null' if there is more than one key you have to use delimiter ';' between
2023-01-25 19:57:08,947 - __main__ - INFO - 96 - <module>() - Final prediction for document 314: {'company': 'YOURCOMPANYNAME', 'date': 'Date', 'address': 'your business address', 'total': "Sum (i.e. 10.00 or 50.00) Output: Company Name, Date of Receipt, Address of Company, Total, Total yourCompanyName, Date of Receipt, yourBusinessAddress, 10.00, 10.00 yourCompanyName, Date of Receipt, yourBusinessAddress, 50.00, 50.00 if the key is unknown you can use 'null' if there is more than one key you have to use delimiter ';' between"}
2023-01-25 19:57:08,947 - __main__ - INFO - 92 - <module>() - Predicting document 315...
2023-01-25 19:57:15,920 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  Bar Wang Rice @ Permas Jayagraduate/universities/colleges/institutes (e.g. University of Melbourne). If you can't find a "Company Name" go to the source and enter the website address of the "Company".
Date of Receipt: 1 April 2018 (i.e. the date you received the form)
Address of Company: TAXINVOICE

The first two letters of each paragraph need to be transcribed, separated by a space. Then a newline is added to indicate the start of a new paragraph (e.g. "This is paragraph one
2023-01-25 19:57:15,922 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:57:15,922 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:57:15,923 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Bar Wang Rice @ Permas Jayagraduate/universities/colleges/institutes (e.g. University of Melbourne). If you can't find a "Company Name" go to the source and enter the website address of the "Company".

2023-01-25 19:57:15,923 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Bar Wang Rice @ Permas Jayagraduate/universities/colleges/institutes (e.g. University of Melbourne). If you can't find a "Company Name" go to the source and enter the website address of the "Company".
2023-01-25 19:57:15,923 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:57:15,923 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  1 April 2018 (i.e. the date you received the form)

2023-01-25 19:57:15,923 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 1 April 2018 (i.e. the date you received the form)
2023-01-25 19:57:15,923 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:57:15,924 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  TAXINVOICE

The first two letters of each paragraph need to be transcribed, separated by a space. Then a newline is added to indicate the start of a new paragraph (e.g. "This is paragraph one
2023-01-25 19:57:15,924 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: TAXINVOICE The first two letters of each paragraph need to be transcribed, separated by a space. Then a newline is added to indicate the start of a new paragraph (e.g. "This is paragraph one
2023-01-25 19:57:15,924 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:57:15,924 - __main__ - INFO - 96 - <module>() - Final prediction for document 315: {'company': 'Bar Wang Rice @ Permas Jayagraduate/universities/colleges/institutes (e.g. University of Melbourne). If you can\'t find a "Company Name" go to the source and enter the website address of the "Company".', 'date': '1 April 2018 (i.e. the date you received the form)', 'address': 'TAXINVOICE The first two letters of each paragraph need to be transcribed, separated by a space. Then a newline is added to indicate the start of a new paragraph (e.g. "This is paragraph one'}
2023-01-25 19:57:15,925 - __main__ - INFO - 92 - <module>() - Predicting document 316...
2023-01-25 19:57:22,741 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  The company name as it appears on the document
Date of Receipt: The date the goods were received at the company
Address of Company: The address of the company in the document (may be in full or abbreviated form)
Total: The amount of the invoice (excluding GST)

Step 2:
In the cell next to "Total"
Enter this formula: =SUM(B4:B6)
Press Ctrl + ; to make a cell comment.
Copy this formula to the cells below:
Click on cell where you entered the formula.
Press Ctrl + Enter. This adds the comment to
2023-01-25 19:57:22,741 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:57:22,742 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:57:22,742 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  The company name as it appears on the document

2023-01-25 19:57:22,742 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: The company name as it appears on the document
2023-01-25 19:57:22,742 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:57:22,742 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  The date the goods were received at the company

2023-01-25 19:57:22,742 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: The date the goods were received at the company
2023-01-25 19:57:22,742 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:57:22,743 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  The address of the company in the document (may be in full or abbreviated form)

2023-01-25 19:57:22,743 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: The address of the company in the document (may be in full or abbreviated form)
2023-01-25 19:57:22,743 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:57:22,743 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  The amount of the invoice (excluding GST)

Step 2:
In the cell next to "Total"
Enter this formula: =SUM(B4:B6)
Press Ctrl + ; to make a cell comment.
Copy this formula to the cells below:
Click on cell where you entered the formula.
Press Ctrl + Enter. This adds the comment to
2023-01-25 19:57:22,743 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: The amount of the invoice (excluding GST) Step 2: In the cell next to "Total" Enter this formula: =SUM(B4:B6) Press Ctrl + ; to make a cell comment. Copy this formula to the cells below: Click on cell where you entered the formula. Press Ctrl + Enter. This adds the comment to
2023-01-25 19:57:22,743 - __main__ - INFO - 96 - <module>() - Final prediction for document 316: {'company': 'The company name as it appears on the document', 'date': 'The date the goods were received at the company', 'address': 'The address of the company in the document (may be in full or abbreviated form)', 'total': 'The amount of the invoice (excluding GST) Step 2: In the cell next to "Total" Enter this formula: =SUM(B4:B6) Press Ctrl + ; to make a cell comment. Copy this formula to the cells below: Click on cell where you entered the formula. Press Ctrl + Enter. This adds the comment to'}
2023-01-25 19:57:22,744 - __main__ - INFO - 92 - <module>() - Predicting document 317...
2023-01-25 19:57:25,685 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  COMPANYNAME
Date of Receipt: DATERECEIPT
Address of Company: ADDRESSOFCOMPANY
Total: TOTAL
2023-01-25 19:57:25,686 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:57:25,686 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:57:25,686 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  COMPANYNAME

2023-01-25 19:57:25,686 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: COMPANYNAME
2023-01-25 19:57:25,686 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:57:25,686 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  DATERECEIPT

2023-01-25 19:57:25,687 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: DATERECEIPT
2023-01-25 19:57:25,687 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:57:25,687 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  ADDRESSOFCOMPANY

2023-01-25 19:57:25,687 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: ADDRESSOFCOMPANY
2023-01-25 19:57:25,687 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:57:25,687 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  TOTAL
2023-01-25 19:57:25,687 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: TOTAL
2023-01-25 19:57:25,687 - __main__ - INFO - 96 - <module>() - Final prediction for document 317: {'company': 'COMPANYNAME', 'date': 'DATERECEIPT', 'address': 'ADDRESSOFCOMPANY', 'total': 'TOTAL'}
2023-01-25 19:57:25,688 - __main__ - INFO - 92 - <module>() - Predicting document 318...
2023-01-25 19:57:32,469 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  "abc"
Date of Receipt: "01/02/2016"
Address of Company: "xx-yy-zz"
Total: "6.3"
<<Stop key>>

Output:

"abc", "01/02/2016", "xx-yy-zz", "6.3"

To explain the process and understand this problem better I will break it up to smaller sub-problems:

Find a substring starting from the end of the text until the end of the document or from the beginning of the document until the first '|' is found.

2023-01-25 19:57:32,471 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:57:32,471 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:57:32,471 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  "abc"

2023-01-25 19:57:32,472 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: abc
2023-01-25 19:57:32,472 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:57:32,472 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  "01/02/2016"

2023-01-25 19:57:32,472 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 01/02/2016
2023-01-25 19:57:32,472 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:57:32,472 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  "xx-yy-zz"

2023-01-25 19:57:32,472 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: xx-yy-zz
2023-01-25 19:57:32,473 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:57:32,473 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  "6.3"
<<Stop key>>

Output:

"abc", "01/02/2016", "xx-yy-zz", "6.3"

To explain the process and understand this problem better I will break it up to smaller sub-problems:

Find a substring starting from the end of the text until the end of the document or from the beginning of the document until the first '|' is found.

2023-01-25 19:57:32,473 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: "6.3" <<Stop key>> Output: "abc", "01/02/2016", "xx-yy-zz", "6.3" To explain the process and understand this problem better I will break it up to smaller sub-problems: Find a substring starting from the end of the text until the end of the document or from the beginning of the document until the first '|' is found.
2023-01-25 19:57:32,473 - __main__ - INFO - 96 - <module>() - Final prediction for document 318: {'company': 'abc', 'date': '01/02/2016', 'address': 'xx-yy-zz', 'total': '"6.3" <<Stop key>> Output: "abc", "01/02/2016", "xx-yy-zz", "6.3" To explain the process and understand this problem better I will break it up to smaller sub-problems: Find a substring starting from the end of the text until the end of the document or from the beginning of the document until the first \'|\' is found.'}
2023-01-25 19:57:32,475 - __main__ - INFO - 92 - <module>() - Predicting document 319...
2023-01-25 19:57:39,991 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:
Date of Receipt:
Address of Company:
Total:
*NOTE: If the data above is missing, please check all the fields which is required.

Example Output 1:

[![Input Document][1]][1]
*Example 1 : Input Document
(1) Company name (2) Date of Receipt (3) Address of Company (4) Total (5)
5.30

Example Output 2:

[![Input Document][1]][1]
*Example 2 : Input Document
(1) Company name (2) Date of Receipt (
2023-01-25 19:57:39,993 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:57:39,993 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:57:39,993 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:57:39,993 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:57:39,994 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:57:39,994 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:57:39,994 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:57:39,995 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:57:39,995 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:57:39,995 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:57:39,995 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:57:39,996 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:
*NOTE: If the data above is missing, please check all the fields which is required.

Example Output 1:

[![Input Document][1]][1]
*Example 1 : Input Document
(1) Company name (2) Date of Receipt (3) Address of Company (4) Total (5)
5.30

Example Output 2:

[![Input Document][1]][1]
*Example 2 : Input Document
(1) Company name (2) Date of Receipt (
2023-01-25 19:57:39,996 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: *NOTE: If the data above is missing, please check all the fields which is required. Example Output 1: [![Input Document][1]][1] *Example 1 : Input Document (1) Company name (2) Date of Receipt (3) Address of Company (4) Total (5) 5.30 Example Output 2: [![Input Document][1]][1] *Example 2 : Input Document (1) Company name (2) Date of Receipt (
2023-01-25 19:57:39,996 - __main__ - INFO - 96 - <module>() - Final prediction for document 319: {'total': '*NOTE: If the data above is missing, please check all the fields which is required. Example Output 1: [![Input Document][1]][1] *Example 1 : Input Document (1) Company name (2) Date of Receipt (3) Address of Company (4) Total (5) 5.30 Example Output 2: [![Input Document][1]][1] *Example 2 : Input Document (1) Company name (2) Date of Receipt ('}
2023-01-25 19:57:39,998 - __main__ - INFO - 92 - <module>() - Predicting document 320...
2023-01-25 19:57:42,035 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:
Date of Receipt: 12-02-2018
Address of Company:
Total:
2023-01-25 19:57:42,035 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:57:42,036 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:57:42,036 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:57:42,036 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:57:42,036 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:57:42,037 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  12-02-2018

2023-01-25 19:57:42,037 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 12-02-2018
2023-01-25 19:57:42,037 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:57:42,038 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:57:42,038 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:57:42,038 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:57:42,038 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:
2023-01-25 19:57:42,039 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:57:42,039 - __main__ - INFO - 96 - <module>() - Final prediction for document 320: {'date': '12-02-2018'}
2023-01-25 19:57:42,041 - __main__ - INFO - 92 - <module>() - Predicting document 321...
2023-01-25 19:57:48,909 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  Your Company
Date Receipt: Date of invoice issued
Address of company: Street Address
Total: Amount to be refunded

For example, the input file looks like this:

Key: Value
Company Name: ABC Corp
Date Receipt: 10/24/2015
Address of company: 123 Wall St, Los Angeles, CA 90010
Total: 10,000

Output (tab separated text file)
ABC Corp, 10/24/2015, 123 Wall St, Los Angeles, CA 90010, 10,000

(Assuming you chose "ABCCorp, 10/24
2023-01-25 19:57:48,910 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:57:48,910 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:57:48,911 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Your Company
Date Receipt: Date of invoice issued

2023-01-25 19:57:48,911 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Your Company Date Receipt: Date of invoice issued
2023-01-25 19:57:48,911 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:57:48,911 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:57:48,912 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Street Address

2023-01-25 19:57:48,912 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Street Address
2023-01-25 19:57:48,912 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:57:48,912 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Amount to be refunded

For example, the input file looks like this:

Key: Value
Company Name: ABC Corp
Date Receipt: 10/24/2015
Address of company: 123 Wall St, Los Angeles, CA 90010

2023-01-25 19:57:48,913 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Amount to be refunded For example, the input file looks like this: Key: Value Company Name: ABC Corp Date Receipt: 10/24/2015 Address of company: 123 Wall St, Los Angeles, CA 90010
2023-01-25 19:57:48,913 - __main__ - INFO - 96 - <module>() - Final prediction for document 321: {'company': 'Your Company Date Receipt: Date of invoice issued', 'address': 'Street Address', 'total': 'Amount to be refunded For example, the input file looks like this: Key: Value Company Name: ABC Corp Date Receipt: 10/24/2015 Address of company: 123 Wall St, Los Angeles, CA 90010'}
2023-01-25 19:57:48,916 - __main__ - INFO - 92 - <module>() - Predicting document 322...
2023-01-25 19:57:51,665 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  XXXXX
Date of Receipt: 31/01/2018
Address of Company: 12/10
Total: 101.76
2023-01-25 19:57:51,666 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:57:51,667 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:57:51,667 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  XXXXX

2023-01-25 19:57:51,668 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: XXXXX
2023-01-25 19:57:51,668 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:57:51,668 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  31/01/2018

2023-01-25 19:57:51,669 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 31/01/2018
2023-01-25 19:57:51,669 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:57:51,669 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  12/10

2023-01-25 19:57:51,670 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 12/10
2023-01-25 19:57:51,670 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:57:51,670 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  101.76
2023-01-25 19:57:51,670 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 101.76
2023-01-25 19:57:51,671 - __main__ - INFO - 96 - <module>() - Final prediction for document 322: {'company': 'XXXXX', 'date': '31/01/2018', 'address': '12/10', 'total': '101.76'}
2023-01-25 19:57:51,672 - __main__ - INFO - 92 - <module>() - Predicting document 323...
2023-01-25 19:57:53,815 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:
Date of Receipt:
Address of Company:
Total:

Total:

2023-01-25 19:57:53,816 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:57:53,817 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:57:53,818 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:57:53,818 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:57:53,819 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:57:53,819 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:57:53,819 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:57:53,820 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:57:53,820 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:57:53,820 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:57:53,820 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:57:53,821 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:


2023-01-25 19:57:53,821 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:57:53,821 - __main__ - INFO - 96 - <module>() - Final prediction for document 323: {}
2023-01-25 19:57:53,823 - __main__ - INFO - 92 - <module>() - Predicting document 324...
2023-01-25 19:57:56,267 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:
Date of Receipt: 2/6/2018
Address of Company: ROYAL TEA (ROYALTEA)
Total: 15.10
2023-01-25 19:57:56,267 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:57:56,267 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:57:56,267 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:57:56,267 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:57:56,268 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:57:56,268 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  2/6/2018

2023-01-25 19:57:56,268 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 2/6/2018
2023-01-25 19:57:56,268 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:57:56,268 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  ROYAL TEA (ROYALTEA)

2023-01-25 19:57:56,268 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: ROYAL TEA (ROYALTEA)
2023-01-25 19:57:56,268 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:57:56,268 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  15.10
2023-01-25 19:57:56,268 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 15.10
2023-01-25 19:57:56,269 - __main__ - INFO - 96 - <module>() - Final prediction for document 324: {'date': '2/6/2018', 'address': 'ROYAL TEA (ROYALTEA)', 'total': '15.10'}
2023-01-25 19:57:56,269 - __main__ - INFO - 92 - <module>() - Predicting document 325...
2023-01-25 19:57:58,614 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  Company Name Here
Date of Receipt: Receipt Date
Address of Company: Mailing Address
Total: Subtotal
2023-01-25 19:57:58,615 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:57:58,615 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:57:58,615 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Company Name Here

2023-01-25 19:57:58,616 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Company Name Here
2023-01-25 19:57:58,616 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:57:58,616 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Receipt Date

2023-01-25 19:57:58,616 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Receipt Date
2023-01-25 19:57:58,616 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:57:58,616 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Mailing Address

2023-01-25 19:57:58,617 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Mailing Address
2023-01-25 19:57:58,617 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:57:58,617 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Subtotal
2023-01-25 19:57:58,617 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Subtotal
2023-01-25 19:57:58,617 - __main__ - INFO - 96 - <module>() - Final prediction for document 325: {'company': 'Company Name Here', 'date': 'Receipt Date', 'address': 'Mailing Address', 'total': 'Subtotal'}
2023-01-25 19:57:58,618 - __main__ - INFO - 92 - <module>() - Predicting document 326...
2023-01-25 19:58:00,334 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:
Date of Receipt:
Address of Company:
Total:
2023-01-25 19:58:00,335 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:58:00,336 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:58:00,336 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:58:00,336 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:58:00,337 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:58:00,337 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:58:00,337 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:58:00,337 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:58:00,338 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:58:00,338 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:58:00,338 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:58:00,339 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:
2023-01-25 19:58:00,339 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:58:00,339 - __main__ - INFO - 96 - <module>() - Final prediction for document 326: {}
2023-01-25 19:58:00,341 - __main__ - INFO - 92 - <module>() - Predicting document 327...
2023-01-25 19:58:07,673 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  SANYU STATIONERY SHOP NO. 31G&33G, JALAN SETIA INDAH X ,U13/X
Date of Receipt: 29/11/2017
Address of Company: SETIA ALAM
Total: 5.40

Input the values and store in a variable.
Extract "Company Name", "Date of Receipt", "Address of Company", "Total", "<|stop key|>" from the document above. If you can't find a key-value pair in the document set the value to "null".

Key: Value
Company Name:
2023-01-25 19:58:07,673 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:58:07,674 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:58:07,674 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  SANYU STATIONERY SHOP NO. 31G&33G, JALAN SETIA INDAH X ,U13/X

2023-01-25 19:58:07,674 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: SANYU STATIONERY SHOP NO. 31G&33G, JALAN SETIA INDAH X ,U13/X
2023-01-25 19:58:07,675 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:58:07,675 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  29/11/2017

2023-01-25 19:58:07,675 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 29/11/2017
2023-01-25 19:58:07,676 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:58:07,676 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  SETIA ALAM

2023-01-25 19:58:07,676 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: SETIA ALAM
2023-01-25 19:58:07,676 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:58:07,677 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  5.40

Input the values and store in a variable.
Extract "Company Name", "Date of Receipt", "Address of Company", "Total", "<|stop key|>" from the document above. If you can't find a key-value pair in the document set the value to "null".

Key: Value
Company Name:
2023-01-25 19:58:07,677 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 5.40 Input the values and store in a variable. Extract "Company Name", "Date of Receipt", "Address of Company", "Total", "<|stop key|>" from the document above. If you can't find a key-value pair in the document set the value to "null". Key: Value Company Name:
2023-01-25 19:58:07,677 - __main__ - INFO - 96 - <module>() - Final prediction for document 327: {'company': 'SANYU STATIONERY SHOP NO. 31G&33G, JALAN SETIA INDAH X ,U13/X', 'date': '29/11/2017', 'address': 'SETIA ALAM', 'total': '5.40 Input the values and store in a variable. Extract "Company Name", "Date of Receipt", "Address of Company", "Total", "<|stop key|>" from the document above. If you can\'t find a key-value pair in the document set the value to "null". Key: Value Company Name:'}
2023-01-25 19:58:07,679 - __main__ - INFO - 92 - <module>() - Predicting document 328...
2023-01-25 19:58:10,820 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  KING'S
Date of Receipt: 15/03/2010
Address of Company: Jalan SS6/3, Kelana Jaya, 47300 Petaling Jaya, Selangor D.E.
Total: RM 7.20
2023-01-25 19:58:10,821 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:58:10,821 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:58:10,821 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  KING'S

2023-01-25 19:58:10,822 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: KING'S
2023-01-25 19:58:10,822 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:58:10,822 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  15/03/2010

2023-01-25 19:58:10,823 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 15/03/2010
2023-01-25 19:58:10,823 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:58:10,823 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Jalan SS6/3, Kelana Jaya, 47300 Petaling Jaya, Selangor D.E.

2023-01-25 19:58:10,823 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Jalan SS6/3, Kelana Jaya, 47300 Petaling Jaya, Selangor D.E.
2023-01-25 19:58:10,824 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:58:10,824 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  RM 7.20
2023-01-25 19:58:10,824 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: RM 7.20
2023-01-25 19:58:10,824 - __main__ - INFO - 96 - <module>() - Final prediction for document 328: {'company': "KING'S", 'date': '15/03/2010', 'address': 'Jalan SS6/3, Kelana Jaya, 47300 Petaling Jaya, Selangor D.E.', 'total': 'RM 7.20'}
2023-01-25 19:58:10,826 - __main__ - INFO - 92 - <module>() - Predicting document 329...
2023-01-25 19:58:14,497 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  SILENTWAVE COFFEE
Date of Receipt: 10/11/2017
Address of Company: 7 JALAN KHANGKONG 2
Total: <|stop key|>

2023-01-25 19:58:14,497 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:58:14,498 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:58:14,498 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  SILENTWAVE COFFEE

2023-01-25 19:58:14,498 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: SILENTWAVE COFFEE
2023-01-25 19:58:14,498 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:58:14,499 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  10/11/2017

2023-01-25 19:58:14,499 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 10/11/2017
2023-01-25 19:58:14,499 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:58:14,499 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  7 JALAN KHANGKONG 2

2023-01-25 19:58:14,499 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 7 JALAN KHANGKONG 2
2023-01-25 19:58:14,499 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:58:14,500 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  <|stop key|>

2023-01-25 19:58:14,500 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: <|stop key|>
2023-01-25 19:58:14,500 - __main__ - INFO - 96 - <module>() - Final prediction for document 329: {'company': 'SILENTWAVE COFFEE', 'date': '10/11/2017', 'address': '7 JALAN KHANGKONG 2', 'total': '<|stop key|>'}
2023-01-25 19:58:14,502 - __main__ - INFO - 92 - <module>() - Predicting document 330...
2023-01-25 19:58:17,078 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  T2 R000596811
Date of Receipt: 18-04-16 15:02
Address of Company:
Total:

This page last update on 11-11-2018 19:03
2023-01-25 19:58:17,078 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:58:17,078 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:58:17,078 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  T2 R000596811

2023-01-25 19:58:17,079 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: T2 R000596811
2023-01-25 19:58:17,079 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:58:17,079 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  18-04-16 15:02

2023-01-25 19:58:17,079 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 18-04-16 15:02
2023-01-25 19:58:17,079 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:58:17,079 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:58:17,079 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:58:17,079 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:58:17,079 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

This page last update on 11-11-2018 19:03
2023-01-25 19:58:17,079 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: This page last update on 11-11-2018 19:03
2023-01-25 19:58:17,080 - __main__ - INFO - 96 - <module>() - Final prediction for document 330: {'company': 'T2 R000596811', 'date': '18-04-16 15:02', 'total': 'This page last update on 11-11-2018 19:03'}
2023-01-25 19:58:17,080 - __main__ - INFO - 92 - <module>() - Predicting document 331...
2023-01-25 19:58:22,315 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  <*replace>
Date of Receipt: <*replace>
Address of Company: <*replace>
Total: <*replace>

Output to the console should look something like this:

In case of any queries, please don't hesitate to contact us on 03-20253835, 03-20235888, email-sales@st-corp.com.
Thank you for supporting us.
2023-01-25 19:58:22,317 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:58:22,317 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:58:22,317 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  <*replace>

2023-01-25 19:58:22,317 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: <*replace>
2023-01-25 19:58:22,317 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:58:22,317 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  <*replace>

2023-01-25 19:58:22,317 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: <*replace>
2023-01-25 19:58:22,317 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:58:22,318 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  <*replace>

2023-01-25 19:58:22,318 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: <*replace>
2023-01-25 19:58:22,318 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:58:22,318 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  <*replace>

Output to the console should look something like this:

In case of any queries, please don't hesitate to contact us on 03-20253835, 03-20235888, email-sales@st-corp.com.
Thank you for supporting us.
2023-01-25 19:58:22,318 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: <*replace> Output to the console should look something like this: In case of any queries, please don't hesitate to contact us on 03-20253835, 03-20235888, email-sales@st-corp.com. Thank you for supporting us.
2023-01-25 19:58:22,318 - __main__ - INFO - 96 - <module>() - Final prediction for document 331: {'company': '<*replace>', 'date': '<*replace>', 'address': '<*replace>', 'total': "<*replace> Output to the console should look something like this: In case of any queries, please don't hesitate to contact us on 03-20253835, 03-20235888, email-sales@st-corp.com. Thank you for supporting us."}
2023-01-25 19:58:22,319 - __main__ - INFO - 92 - <module>() - Predicting document 332...
2023-01-25 19:58:26,641 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  (11.13) 11.13
Date of Receipt: (15/01/2018) 15/01/2018
Address of Company: (5324 Jalan Bukit Selambau) 5324 Jalan Bukit Selambau
Total: (10.50) 10.50
2023-01-25 19:58:26,642 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:58:26,642 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:58:26,643 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  (11.13) 11.13

2023-01-25 19:58:26,643 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: (11.13) 11.13
2023-01-25 19:58:26,643 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:58:26,644 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  (15/01/2018) 15/01/2018

2023-01-25 19:58:26,644 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: (15/01/2018) 15/01/2018
2023-01-25 19:58:26,644 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:58:26,645 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  (5324 Jalan Bukit Selambau) 5324 Jalan Bukit Selambau

2023-01-25 19:58:26,645 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: (5324 Jalan Bukit Selambau) 5324 Jalan Bukit Selambau
2023-01-25 19:58:26,645 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:58:26,646 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  (10.50) 10.50
2023-01-25 19:58:26,646 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: (10.50) 10.50
2023-01-25 19:58:26,646 - __main__ - INFO - 96 - <module>() - Final prediction for document 332: {'company': '(11.13) 11.13', 'date': '(15/01/2018) 15/01/2018', 'address': '(5324 Jalan Bukit Selambau) 5324 Jalan Bukit Selambau', 'total': '(10.50) 10.50'}
2023-01-25 19:58:26,648 - __main__ - INFO - 92 - <module>() - Predicting document 333...
2023-01-25 19:58:34,377 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  BURGER KING
Date of Receipt: 2018/03/27
Address of Company: SATMZ 23, MEZZANINE LEVEL
Total: RM23.00
1 ROUNDED
1.00 BASE EARNING (INC GST)
BILL INCLUSIVE OF 6% GST: RM1.92
NOTES:
1. This report shall be used only for academic study and research in connection with your final examination only. No part of this report shall be published, quoted or referenced for any other purpose except for coursework and research and no part of this report shall be
2023-01-25 19:58:34,382 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:58:34,382 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:58:34,383 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  BURGER KING

2023-01-25 19:58:34,383 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: BURGER KING
2023-01-25 19:58:34,383 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:58:34,383 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  2018/03/27

2023-01-25 19:58:34,384 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 2018/03/27
2023-01-25 19:58:34,384 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:58:34,384 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  SATMZ 23, MEZZANINE LEVEL

2023-01-25 19:58:34,385 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: SATMZ 23, MEZZANINE LEVEL
2023-01-25 19:58:34,385 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:58:34,385 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  RM23.00
1 ROUNDED
1.00 BASE EARNING (INC GST)
BILL INCLUSIVE OF 6% GST: RM1.92
NOTES:
1. This report shall be used only for academic study and research in connection with your final examination only. No part of this report shall be published, quoted or referenced for any other purpose except for coursework and research and no part of this report shall be
2023-01-25 19:58:34,385 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: RM23.00 1 ROUNDED 1.00 BASE EARNING (INC GST) BILL INCLUSIVE OF 6% GST: RM1.92 NOTES: 1. This report shall be used only for academic study and research in connection with your final examination only. No part of this report shall be published, quoted or referenced for any other purpose except for coursework and research and no part of this report shall be
2023-01-25 19:58:34,386 - __main__ - INFO - 96 - <module>() - Final prediction for document 333: {'company': 'BURGER KING', 'date': '2018/03/27', 'address': 'SATMZ 23, MEZZANINE LEVEL', 'total': 'RM23.00 1 ROUNDED 1.00 BASE EARNING (INC GST) BILL INCLUSIVE OF 6% GST: RM1.92 NOTES: 1. This report shall be used only for academic study and research in connection with your final examination only. No part of this report shall be published, quoted or referenced for any other purpose except for coursework and research and no part of this report shall be'}
2023-01-25 19:58:34,388 - __main__ - INFO - 92 - <module>() - Predicting document 334...
2023-01-25 19:58:42,251 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  null
Date of Receipt: null
Address of Company: null
Total: 25000
Paying Taxes: null
Tax Invoice / Adjustment Note
Dated: 26/09/2017
Date of Purchase: null
Tax Invoice / Adjustment Note
Dated: 27/09/2017
Date of Purchase: null
Tax Invoice / Adjustment Note
Dated: 28/09/2017
Date of Purchase: null
Tax Invoice / Adjustment Note
Dated: 29/09/2017
Date of Purchase: null
Tax Invoice / Adjustment Note
Dated: 30/09
2023-01-25 19:58:42,252 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:58:42,252 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:58:42,253 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  null

2023-01-25 19:58:42,253 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: null
2023-01-25 19:58:42,253 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:58:42,253 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  null

2023-01-25 19:58:42,253 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: null
2023-01-25 19:58:42,254 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:58:42,254 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  null

2023-01-25 19:58:42,254 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: null
2023-01-25 19:58:42,254 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:58:42,254 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  25000
Paying Taxes: null
Tax Invoice / Adjustment Note
Dated: 26/09/2017
Date of Purchase: null
Tax Invoice / Adjustment Note
Dated: 27/09/2017
Date of Purchase: null
Tax Invoice / Adjustment Note
Dated: 28/09/2017
Date of Purchase: null
Tax Invoice / Adjustment Note
Dated: 29/09/2017
Date of Purchase: null
Tax Invoice / Adjustment Note
Dated: 30/09
2023-01-25 19:58:42,255 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 25000 Paying Taxes: null Tax Invoice / Adjustment Note Dated: 26/09/2017 Date of Purchase: null Tax Invoice / Adjustment Note Dated: 27/09/2017 Date of Purchase: null Tax Invoice / Adjustment Note Dated: 28/09/2017 Date of Purchase: null Tax Invoice / Adjustment Note Dated: 29/09/2017 Date of Purchase: null Tax Invoice / Adjustment Note Dated: 30/09
2023-01-25 19:58:42,255 - __main__ - INFO - 96 - <module>() - Final prediction for document 334: {'total': '25000 Paying Taxes: null Tax Invoice / Adjustment Note Dated: 26/09/2017 Date of Purchase: null Tax Invoice / Adjustment Note Dated: 27/09/2017 Date of Purchase: null Tax Invoice / Adjustment Note Dated: 28/09/2017 Date of Purchase: null Tax Invoice / Adjustment Note Dated: 29/09/2017 Date of Purchase: null Tax Invoice / Adjustment Note Dated: 30/09'}
2023-01-25 19:58:42,256 - __main__ - INFO - 92 - <module>() - Predicting document 335...
2023-01-25 19:58:44,514 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:

Date of Receipt:
Address of Company:
Total:

2023-01-25 19:58:44,515 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:58:44,515 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:58:44,515 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:


2023-01-25 19:58:44,515 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:58:44,516 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:58:44,516 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:58:44,516 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:58:44,516 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:58:44,517 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:58:44,517 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:58:44,517 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:58:44,517 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:58:44,517 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:58:44,518 - __main__ - INFO - 96 - <module>() - Final prediction for document 335: {}
2023-01-25 19:58:44,519 - __main__ - INFO - 92 - <module>() - Predicting document 336...
2023-01-25 19:58:54,218 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  COMPANY NAME
Date of Receipt: 03-APR-2018
Address of Company: TOWN, ZIP CODE
Total: 867388.59
For each element above enter the formula shown below.
If Company Name="null" then
Insert "Company Name: Company Name"
if Address of Company="null" then
Insert "Address of Company: Address of Company"
if Date of Receipt="null" then
Insert "Date of Receipt: Date of Receipt"
end if
If Total="null" then
Insert "Total: Total"
end if

Example output
2023-01-25 19:58:54,219 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:58:54,219 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:58:54,220 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  COMPANY NAME

2023-01-25 19:58:54,220 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: COMPANY NAME
2023-01-25 19:58:54,220 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:58:54,220 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  03-APR-2018

2023-01-25 19:58:54,220 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 03-APR-2018
2023-01-25 19:58:54,220 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:58:54,221 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  TOWN, ZIP CODE

2023-01-25 19:58:54,221 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: TOWN, ZIP CODE
2023-01-25 19:58:54,221 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:58:54,221 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  867388.59
For each element above enter the formula shown below.
If Company Name="null" then
Insert "Company Name: Company Name"
if Address of Company="null" then
Insert "Address of Company: Address of Company"
if Date of Receipt="null" then
Insert "Date of Receipt: Date of Receipt"
end if
If Total="null" then
Insert "
2023-01-25 19:58:54,221 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 867388.59 For each element above enter the formula shown below. If Company Name="null" then Insert "Company Name: Company Name" if Address of Company="null" then Insert "Address of Company: Address of Company" if Date of Receipt="null" then Insert "Date of Receipt: Date of Receipt" end if If Total="null" then Insert "
2023-01-25 19:58:54,221 - __main__ - INFO - 96 - <module>() - Final prediction for document 336: {'company': 'COMPANY NAME', 'date': '03-APR-2018', 'address': 'TOWN, ZIP CODE', 'total': '867388.59 For each element above enter the formula shown below. If Company Name="null" then Insert "Company Name: Company Name" if Address of Company="null" then Insert "Address of Company: Address of Company" if Date of Receipt="null" then Insert "Date of Receipt: Date of Receipt" end if If Total="null" then Insert "'}
2023-01-25 19:58:54,223 - __main__ - INFO - 92 - <module>() - Predicting document 337...
2023-01-25 19:58:58,568 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  JAKABAN FSD Sdn Bhd
Date of Receipt: 01 MAR 2018
Address of Company: No. 6, Jalan Tampoi 7/4,
Kawasan Perindustrian Tampoi, 81200 Johor Bahru, Johor
Total: $2.50
2023-01-25 19:58:58,569 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:58:58,569 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:58:58,570 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  JAKABAN FSD Sdn Bhd

2023-01-25 19:58:58,570 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: JAKABAN FSD Sdn Bhd
2023-01-25 19:58:58,570 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:58:58,570 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  01 MAR 2018

2023-01-25 19:58:58,571 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 01 MAR 2018
2023-01-25 19:58:58,571 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:58:58,571 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  No. 6, Jalan Tampoi 7/4,
Kawasan Perindustrian Tampoi, 81200 Johor Bahru, Johor

2023-01-25 19:58:58,571 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: No. 6, Jalan Tampoi 7/4, Kawasan Perindustrian Tampoi, 81200 Johor Bahru, Johor
2023-01-25 19:58:58,572 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:58:58,572 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  $2.50
2023-01-25 19:58:58,572 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: $2.50
2023-01-25 19:58:58,573 - __main__ - INFO - 96 - <module>() - Final prediction for document 337: {'company': 'JAKABAN FSD Sdn Bhd', 'date': '01 MAR 2018', 'address': 'No. 6, Jalan Tampoi 7/4, Kawasan Perindustrian Tampoi, 81200 Johor Bahru, Johor', 'total': '$2.50'}
2023-01-25 19:58:58,574 - __main__ - INFO - 92 - <module>() - Predicting document 338...
2023-01-25 19:59:05,813 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:
Date of Receipt:
Address of Company:
Total: <|stop key|>

Use JavaScript to call an API

API:
http://finance.sabiz.gov.my/websdocket/websdocket/StockExchange/Quote/StockQuote?symbol=MYRID/EUR

Output:
You should get XML data that looks like this
<quoteResponse xmlns="http://stockquote.sap.com">
<security>
<securityQuote>
<securityQuoteId/>
<securityCode>MYID</securityCode>
<
2023-01-25 19:59:05,813 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:59:05,813 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:59:05,813 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:59:05,813 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:59:05,813 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:59:05,814 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:59:05,814 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:59:05,814 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:59:05,814 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:59:05,814 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:59:05,814 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:59:05,814 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  <|stop key|>

Use JavaScript to call an API

API:
http://finance.sabiz.gov.my/websdocket/websdocket/StockExchange/Quote/StockQuote?symbol=MYRID/EUR

Output:
You should get XML data that looks like this
<quoteResponse xmlns="http://stockquote.sap.com">
<security>
<securityQuote>
<securityQuoteId/>
<securityCode>MYID</securityCode>
<
2023-01-25 19:59:05,814 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: <|stop key|> Use JavaScript to call an API API: http://finance.sabiz.gov.my/websdocket/websdocket/StockExchange/Quote/StockQuote?symbol=MYRID/EUR Output: You should get XML data that looks like this <quoteResponse xmlns="http://stockquote.sap.com"> <security> <securityQuote> <securityQuoteId/> <securityCode>MYID</securityCode> <
2023-01-25 19:59:05,814 - __main__ - INFO - 96 - <module>() - Final prediction for document 338: {'total': '<|stop key|> Use JavaScript to call an API API: http://finance.sabiz.gov.my/websdocket/websdocket/StockExchange/Quote/StockQuote?symbol=MYRID/EUR Output: You should get XML data that looks like this <quoteResponse xmlns="http://stockquote.sap.com"> <security> <securityQuote> <securityQuoteId/> <securityCode>MYID</securityCode> <'}
2023-01-25 19:59:05,817 - __main__ - INFO - 92 - <module>() - Predicting document 339...
2023-01-25 19:59:13,401 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:
1. Company Code
2. Company Name
Address of Company:
3. City, State, Zip/Postal code
4. Province or Territory
5. Country
Total:
6. Gross Amount, which includes GST
Date of Receipt:
7. Year, Month, Day, Hours, Minutes, Seconds
Address of Company:
8. Street Address, Number
9. Other Address Information
Total:
10. Net Amount after any discounts, not including GST

Extract "Company Name", "Date of Receipt", "Address of Company", "Total", "<
2023-01-25 19:59:13,402 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:59:13,402 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:59:13,402 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:
1. Company Code
2. Company Name
Address of Company:
3. City, State, Zip/Postal code
4. Province or Territory
5. Country
Total:
6. Gross Amount, which includes GST

2023-01-25 19:59:13,402 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 1. Company Code 2. Company Name Address of Company: 3. City, State, Zip/Postal code 4. Province or Territory 5. Country Total: 6. Gross Amount, which includes GST
2023-01-25 19:59:13,402 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:59:13,403 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:
7. Year, Month, Day, Hours, Minutes, Seconds

2023-01-25 19:59:13,403 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 7. Year, Month, Day, Hours, Minutes, Seconds
2023-01-25 19:59:13,403 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:59:13,403 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:
3. City, State, Zip/Postal code
4. Province or Territory
5. Country

2023-01-25 19:59:13,404 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 3. City, State, Zip/Postal code 4. Province or Territory 5. Country
2023-01-25 19:59:13,404 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:59:13,404 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:
6. Gross Amount, which includes GST
Date of Receipt:
7. Year, Month, Day, Hours, Minutes, Seconds
Address of Company:
8. Street Address, Number
9. Other Address Information

2023-01-25 19:59:13,404 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 6. Gross Amount, which includes GST Date of Receipt: 7. Year, Month, Day, Hours, Minutes, Seconds Address of Company: 8. Street Address, Number 9. Other Address Information
2023-01-25 19:59:13,404 - __main__ - INFO - 96 - <module>() - Final prediction for document 339: {'company': '1. Company Code 2. Company Name Address of Company: 3. City, State, Zip/Postal code 4. Province or Territory 5. Country Total: 6. Gross Amount, which includes GST', 'date': '7. Year, Month, Day, Hours, Minutes, Seconds', 'address': '3. City, State, Zip/Postal code 4. Province or Territory 5. Country', 'total': '6. Gross Amount, which includes GST Date of Receipt: 7. Year, Month, Day, Hours, Minutes, Seconds Address of Company: 8. Street Address, Number 9. Other Address Information'}
2023-01-25 19:59:13,406 - __main__ - INFO - 92 - <module>() - Predicting document 340...
2023-01-25 19:59:20,000 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  PJ Printing Machines SDN BHD
Date of Receipt: 17/03/2017 21:35
Address of Company: Lot F15, GIANT BANDAR PUTERI, Jalan Puteri 1/1, Bdr Puteri, 47100 Puchong, Selangor
Total: 62.00
GST Taxable Amount: 5.40
GST: 3.51
GST: 3.51
2023-01-25 19:59:20,001 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:59:20,001 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:59:20,002 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  PJ Printing Machines SDN BHD

2023-01-25 19:59:20,002 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: PJ Printing Machines SDN BHD
2023-01-25 19:59:20,003 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:59:20,003 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  17/03/2017 21:35

2023-01-25 19:59:20,003 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 17/03/2017 21:35
2023-01-25 19:59:20,003 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:59:20,004 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Lot F15, GIANT BANDAR PUTERI, Jalan Puteri 1/1, Bdr Puteri, 47100 Puchong, Selangor

2023-01-25 19:59:20,004 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Lot F15, GIANT BANDAR PUTERI, Jalan Puteri 1/1, Bdr Puteri, 47100 Puchong, Selangor
2023-01-25 19:59:20,004 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:59:20,005 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  62.00
GST Taxable Amount: 5.40
GST: 3.51
GST: 3.51
2023-01-25 19:59:20,005 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 62.00 GST Taxable Amount: 5.40 GST: 3.51 GST: 3.51
2023-01-25 19:59:20,005 - __main__ - INFO - 96 - <module>() - Final prediction for document 340: {'company': 'PJ Printing Machines SDN BHD', 'date': '17/03/2017 21:35', 'address': 'Lot F15, GIANT BANDAR PUTERI, Jalan Puteri 1/1, Bdr Puteri, 47100 Puchong, Selangor', 'total': '62.00 GST Taxable Amount: 5.40 GST: 3.51 GST: 3.51'}
2023-01-25 19:59:20,008 - __main__ - INFO - 92 - <module>() - Predicting document 341...
2023-01-25 19:59:25,309 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  "Seng Heng Hwa Hardware Trading"
Date of Receipt: "11/02/2017"
Address of Company: "Jalan Manis 7"
Total: "19.60"

I hope you are able to understand this program. It will help you understand the syntax of a for loop with if-else statement. There is nothing else I can help you with, but I hope you learn something.
2023-01-25 19:59:25,309 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:59:25,310 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:59:25,310 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  "Seng Heng Hwa Hardware Trading"

2023-01-25 19:59:25,310 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Seng Heng Hwa Hardware Trading
2023-01-25 19:59:25,310 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:59:25,310 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  "11/02/2017"

2023-01-25 19:59:25,311 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 11/02/2017
2023-01-25 19:59:25,311 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:59:25,311 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  "Jalan Manis 7"

2023-01-25 19:59:25,311 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Jalan Manis 7
2023-01-25 19:59:25,311 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:59:25,312 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  "19.60"

I hope you are able to understand this program. It will help you understand the syntax of a for loop with if-else statement. There is nothing else I can help you with, but I hope you learn something.
2023-01-25 19:59:25,312 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: "19.60" I hope you are able to understand this program. It will help you understand the syntax of a for loop with if-else statement. There is nothing else I can help you with, but I hope you learn something.
2023-01-25 19:59:25,312 - __main__ - INFO - 96 - <module>() - Final prediction for document 341: {'company': 'Seng Heng Hwa Hardware Trading', 'date': '11/02/2017', 'address': 'Jalan Manis 7', 'total': '"19.60" I hope you are able to understand this program. It will help you understand the syntax of a for loop with if-else statement. There is nothing else I can help you with, but I hope you learn something.'}
2023-01-25 19:59:25,313 - __main__ - INFO - 92 - <module>() - Predicting document 342...
2023-01-25 19:59:32,116 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  MARY AYOI
Date of Receipt: 01/03/2018
Address of Company: LASRI BOUTIQUE HOTEL, JALAN KAMPUNG ANAH
Total: 1059.90

Key: Value
Company Name: MARY AYOI
Date of Receipt: 01/03/2018
Address of Company: LASRI BOUTIQUE HOTEL, JALAN KAMPUNG ANAH
Total: 1059.90

Key: Value
Company Name: MARY AYOI
Date of Re
2023-01-25 19:59:32,118 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:59:32,118 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:59:32,119 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  MARY AYOI

2023-01-25 19:59:32,119 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: MARY AYOI
2023-01-25 19:59:32,119 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:59:32,119 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  01/03/2018

2023-01-25 19:59:32,120 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 01/03/2018
2023-01-25 19:59:32,120 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:59:32,120 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  LASRI BOUTIQUE HOTEL, JALAN KAMPUNG ANAH

2023-01-25 19:59:32,121 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: LASRI BOUTIQUE HOTEL, JALAN KAMPUNG ANAH
2023-01-25 19:59:32,121 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:59:32,121 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  1059.90

Key: Value
Company Name: MARY AYOI
Date of Receipt: 01/03/2018
Address of Company: LASRI BOUTIQUE HOTEL, JALAN KAMPUNG ANAH

2023-01-25 19:59:32,121 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 1059.90 Key: Value Company Name: MARY AYOI Date of Receipt: 01/03/2018 Address of Company: LASRI BOUTIQUE HOTEL, JALAN KAMPUNG ANAH
2023-01-25 19:59:32,122 - __main__ - INFO - 96 - <module>() - Final prediction for document 342: {'company': 'MARY AYOI', 'date': '01/03/2018', 'address': 'LASRI BOUTIQUE HOTEL, JALAN KAMPUNG ANAH', 'total': '1059.90 Key: Value Company Name: MARY AYOI Date of Receipt: 01/03/2018 Address of Company: LASRI BOUTIQUE HOTEL, JALAN KAMPUNG ANAH'}
2023-01-25 19:59:32,123 - __main__ - INFO - 92 - <module>() - Predicting document 343...
2023-01-25 19:59:33,870 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:
Date of Receipt:
Address of Company:
Total:
2023-01-25 19:59:33,870 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:59:33,871 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:59:33,871 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:59:33,871 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:59:33,871 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:59:33,872 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:59:33,872 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:59:33,872 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:59:33,872 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:

2023-01-25 19:59:33,873 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:59:33,873 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:59:33,873 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:
2023-01-25 19:59:33,874 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value:
2023-01-25 19:59:33,874 - __main__ - INFO - 96 - <module>() - Final prediction for document 343: {}
2023-01-25 19:59:33,875 - __main__ - INFO - 92 - <module>() - Predicting document 344...
2023-01-25 19:59:37,351 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  Super 7 Cash and Carry
Date of Receipt: 27-01-2018
Address of Company: 43005, 1st Flr, Jalan Hentian Perindustrian Selangor,
Total: 59.00
2023-01-25 19:59:37,352 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:59:37,352 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:59:37,353 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  Super 7 Cash and Carry

2023-01-25 19:59:37,353 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: Super 7 Cash and Carry
2023-01-25 19:59:37,354 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:59:37,354 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  27-01-2018

2023-01-25 19:59:37,354 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 27-01-2018
2023-01-25 19:59:37,354 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:59:37,355 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  43005, 1st Flr, Jalan Hentian Perindustrian Selangor,

2023-01-25 19:59:37,355 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 43005, 1st Flr, Jalan Hentian Perindustrian Selangor,
2023-01-25 19:59:37,355 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:59:37,356 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  59.00
2023-01-25 19:59:37,356 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 59.00
2023-01-25 19:59:37,356 - __main__ - INFO - 96 - <module>() - Final prediction for document 344: {'company': 'Super 7 Cash and Carry', 'date': '27-01-2018', 'address': '43005, 1st Flr, Jalan Hentian Perindustrian Selangor,', 'total': '59.00'}
2023-01-25 19:59:37,358 - __main__ - INFO - 92 - <module>() - Predicting document 345...
2023-01-25 19:59:39,603 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  CODIT
Date of Receipt: 12.31.18
Address of Company: ROYAL TEA
Total: 12.00
2023-01-25 19:59:39,604 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:59:39,604 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:59:39,604 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  CODIT

2023-01-25 19:59:39,604 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: CODIT
2023-01-25 19:59:39,604 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:59:39,604 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  12.31.18

2023-01-25 19:59:39,605 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 12.31.18
2023-01-25 19:59:39,605 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:59:39,605 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  ROYAL TEA

2023-01-25 19:59:39,605 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: ROYAL TEA
2023-01-25 19:59:39,605 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:59:39,605 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  12.00
2023-01-25 19:59:39,605 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: 12.00
2023-01-25 19:59:39,605 - __main__ - INFO - 96 - <module>() - Final prediction for document 345: {'company': 'CODIT', 'date': '12.31.18', 'address': 'ROYAL TEA', 'total': '12.00'}
2023-01-25 19:59:39,606 - __main__ - INFO - 92 - <module>() - Predicting document 346...
2023-01-25 19:59:44,667 - pipeline - INFO - 262 - get_model_output() - Raw prediction for document:  WORD_DEADLINE_1_KEY_COMPANY_NAME
Date of Receipt: DATE_OF_RECEIPT_KEY
Address of Company: WORD_DEADLINE_1_KEY_ADDRESS_OF_COMPANY
Total: WORD_DEADLINE_1_KEY_TOTAL
2023-01-25 19:59:44,668 - pipeline - INFO - 125 - get_parsed_output() - No subdocs necessary
2023-01-25 19:59:44,669 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Company Name:
2023-01-25 19:59:44,669 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  WORD_DEADLINE_1_KEY_COMPANY_NAME

2023-01-25 19:59:44,669 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: WORD_DEADLINE_1_KEY_COMPANY_NAME
2023-01-25 19:59:44,669 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Date of Receipt:
2023-01-25 19:59:44,669 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  DATE_OF_RECEIPT_KEY

2023-01-25 19:59:44,669 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: DATE_OF_RECEIPT_KEY
2023-01-25 19:59:44,669 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Address of Company:
2023-01-25 19:59:44,669 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  WORD_DEADLINE_1_KEY_ADDRESS_OF_COMPANY

2023-01-25 19:59:44,669 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: WORD_DEADLINE_1_KEY_ADDRESS_OF_COMPANY
2023-01-25 19:59:44,669 - uni_kie.parsers.parser - INFO - 225 - parse_model_output() - Key: Total:
2023-01-25 19:59:44,670 - uni_kie.parsers.parser - INFO - 249 - parse_model_output() - Raw value:  WORD_DEADLINE_1_KEY_TOTAL
2023-01-25 19:59:44,670 - uni_kie.parsers.parser - INFO - 265 - parse_model_output() - Stripped value: WORD_DEADLINE_1_KEY_TOTAL
2023-01-25 19:59:44,670 - __main__ - INFO - 96 - <module>() - Final prediction for document 346: {'company': 'WORD_DEADLINE_1_KEY_COMPANY_NAME', 'date': 'DATE_OF_RECEIPT_KEY', 'address': 'WORD_DEADLINE_1_KEY_ADDRESS_OF_COMPANY', 'total': 'WORD_DEADLINE_1_KEY_TOTAL'}
2023-01-25 19:59:44,774 - __main__ - INFO - 109 - <module>() - ================== DONE ==================
